// @ts-check
// *************************************************************************
// This file was generated by cloudspeak-libcf-generator.  Do not modify
// *************************************************************************
module.exports = {
  /**
   * @namespace AWS
   */
  AWS: {
    /**
     * @namespace ElasticBeanstalk
     */
    ElasticBeanstalk: {
      /**
       * @namespace ConfigurationTemplate
       */
      ConfigurationTemplate: class {
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_ConfigurationTemplate
         * @property {string} ApplicationName ApplicationName.
         * @property {string} [Description] Description.
         * @property {string} [EnvironmentId] EnvironmentId.
         * @property {AWS_ElasticBeanstalk_ConfigurationTemplate_ConfigurationOptionSetting[]} [OptionSettings] OptionSettings.
         * @property {string} [PlatformArn] PlatformArn.
         * @property {string} [SolutionStackName] SolutionStackName.
         * @property {AWS_ElasticBeanstalk_ConfigurationTemplate_SourceConfiguration} [SourceConfiguration] SourceConfiguration.
         */
        /**
         * Create a new AWS::ElasticBeanstalk::ConfigurationTemplate
         * @param {AWS_ElasticBeanstalk_ConfigurationTemplate} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_ConfigurationTemplate_SourceConfiguration
         * @property {string} ApplicationName ApplicationName.
         * @property {string} TemplateName TemplateName.
         */
        /**
         * @param {AWS_ElasticBeanstalk_ConfigurationTemplate_SourceConfiguration} properties
         * @returns {AWS_ElasticBeanstalk_ConfigurationTemplate_SourceConfiguration}
         */
        static SourceConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_ConfigurationTemplate_ConfigurationOptionSetting
         * @property {string} Namespace Namespace.
         * @property {string} OptionName OptionName.
         * @property {string} [ResourceName] ResourceName.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_ElasticBeanstalk_ConfigurationTemplate_ConfigurationOptionSetting} properties
         * @returns {AWS_ElasticBeanstalk_ConfigurationTemplate_ConfigurationOptionSetting}
         */
        static ConfigurationOptionSetting(properties) { return properties; }
      },
      /**
       * @namespace Application
       */
      Application: class {
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_Application
         * @property {string} [ApplicationName] ApplicationName.
         * @property {string} [Description] Description.
         * @property {AWS_ElasticBeanstalk_Application_ApplicationResourceLifecycleConfig} [ResourceLifecycleConfig] ResourceLifecycleConfig.
         */
        /**
         * Create a new AWS::ElasticBeanstalk::Application
         * @param {AWS_ElasticBeanstalk_Application} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_Application_ApplicationResourceLifecycleConfig
         * @property {string} [ServiceRole] ServiceRole.
         * @property {AWS_ElasticBeanstalk_Application_ApplicationVersionLifecycleConfig} [VersionLifecycleConfig] VersionLifecycleConfig.
         */
        /**
         * @param {AWS_ElasticBeanstalk_Application_ApplicationResourceLifecycleConfig} properties
         * @returns {AWS_ElasticBeanstalk_Application_ApplicationResourceLifecycleConfig}
         */
        static ApplicationResourceLifecycleConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_Application_ApplicationVersionLifecycleConfig
         * @property {AWS_ElasticBeanstalk_Application_MaxAgeRule} [MaxAgeRule] MaxAgeRule.
         * @property {AWS_ElasticBeanstalk_Application_MaxCountRule} [MaxCountRule] MaxCountRule.
         */
        /**
         * @param {AWS_ElasticBeanstalk_Application_ApplicationVersionLifecycleConfig} properties
         * @returns {AWS_ElasticBeanstalk_Application_ApplicationVersionLifecycleConfig}
         */
        static ApplicationVersionLifecycleConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_Application_MaxCountRule
         * @property {boolean} [DeleteSourceFromS3] DeleteSourceFromS3.
         * @property {boolean} [Enabled] Enabled.
         * @property {number} [MaxCount] MaxCount.
         */
        /**
         * @param {AWS_ElasticBeanstalk_Application_MaxCountRule} properties
         * @returns {AWS_ElasticBeanstalk_Application_MaxCountRule}
         */
        static MaxCountRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_Application_MaxAgeRule
         * @property {boolean} [DeleteSourceFromS3] DeleteSourceFromS3.
         * @property {boolean} [Enabled] Enabled.
         * @property {number} [MaxAgeInDays] MaxAgeInDays.
         */
        /**
         * @param {AWS_ElasticBeanstalk_Application_MaxAgeRule} properties
         * @returns {AWS_ElasticBeanstalk_Application_MaxAgeRule}
         */
        static MaxAgeRule(properties) { return properties; }
      },
      /**
       * @namespace Environment
       */
      Environment: class {
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_Environment
         * @property {string} ApplicationName ApplicationName.
         * @property {string} [CNAMEPrefix] CNAMEPrefix.
         * @property {string} [Description] Description.
         * @property {string} [EnvironmentName] EnvironmentName.
         * @property {AWS_ElasticBeanstalk_Environment_OptionSetting[]} [OptionSettings] OptionSettings.
         * @property {string} [PlatformArn] PlatformArn.
         * @property {string} [SolutionStackName] SolutionStackName.
         * @property {AWS_ElasticBeanstalk_Environment_Tag[]} [Tags] Tags.
         * @property {string} [TemplateName] TemplateName.
         * @property {AWS_ElasticBeanstalk_Environment_Tier} [Tier] Tier.
         * @property {string} [VersionLabel] VersionLabel.
         */
        /**
         * Create a new AWS::ElasticBeanstalk::Environment
         * @param {AWS_ElasticBeanstalk_Environment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_Environment_OptionSetting
         * @property {string} Namespace Namespace.
         * @property {string} OptionName OptionName.
         * @property {string} [ResourceName] ResourceName.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_ElasticBeanstalk_Environment_OptionSetting} properties
         * @returns {AWS_ElasticBeanstalk_Environment_OptionSetting}
         */
        static OptionSetting(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_Environment_Tier
         * @property {string} [Name] Name.
         * @property {string} [Type] Type.
         * @property {string} [Version] Version.
         */
        /**
         * @param {AWS_ElasticBeanstalk_Environment_Tier} properties
         * @returns {AWS_ElasticBeanstalk_Environment_Tier}
         */
        static Tier(properties) { return properties; }
      },
      /**
       * @namespace ApplicationVersion
       */
      ApplicationVersion: class {
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_ApplicationVersion
         * @property {string} ApplicationName ApplicationName.
         * @property {string} [Description] Description.
         * @property {AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle} SourceBundle SourceBundle.
         */
        /**
         * Create a new AWS::ElasticBeanstalk::ApplicationVersion
         * @param {AWS_ElasticBeanstalk_ApplicationVersion} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle
         * @property {string} S3Bucket S3Bucket.
         * @property {string} S3Key S3Key.
         */
        /**
         * @param {AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle} properties
         * @returns {AWS_ElasticBeanstalk_ApplicationVersion_SourceBundle}
         */
        static SourceBundle(properties) { return properties; }
      }
    },
    /**
     * @namespace AmazonMQ
     */
    AmazonMQ: {
      /**
       * @namespace Broker
       */
      Broker: class {
        /**
         * @typedef {Object} AWS_AmazonMQ_Broker
         * @property {string[]} [SecurityGroups] SecurityGroups.
         * @property {string} EngineVersion EngineVersion.
         * @property {AWS_AmazonMQ_Broker_ConfigurationId} [Configuration] Configuration.
         * @property {AWS_AmazonMQ_Broker_MaintenanceWindow} [MaintenanceWindowStartTime] MaintenanceWindowStartTime.
         * @property {string} HostInstanceType HostInstanceType.
         * @property {boolean} AutoMinorVersionUpgrade AutoMinorVersionUpgrade.
         * @property {AWS_AmazonMQ_Broker_User[]} Users Users.
         * @property {AWS_AmazonMQ_Broker_LogList} [Logs] Logs.
         * @property {string[]} [SubnetIds] SubnetIds.
         * @property {string} BrokerName BrokerName.
         * @property {string} DeploymentMode DeploymentMode.
         * @property {string} EngineType EngineType.
         * @property {boolean} PubliclyAccessible PubliclyAccessible.
         * @property {AWS_AmazonMQ_Broker_TagsEntry[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::AmazonMQ::Broker
         * @param {AWS_AmazonMQ_Broker} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AmazonMQ_Broker_User
         * @property {string} Username Username.
         * @property {string[]} [Groups] Groups.
         * @property {boolean} [ConsoleAccess] ConsoleAccess.
         * @property {string} Password Password.
         */
        /**
         * @param {AWS_AmazonMQ_Broker_User} properties
         * @returns {AWS_AmazonMQ_Broker_User}
         */
        static User(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AmazonMQ_Broker_MaintenanceWindow
         * @property {string} DayOfWeek DayOfWeek.
         * @property {string} TimeOfDay TimeOfDay.
         * @property {string} TimeZone TimeZone.
         */
        /**
         * @param {AWS_AmazonMQ_Broker_MaintenanceWindow} properties
         * @returns {AWS_AmazonMQ_Broker_MaintenanceWindow}
         */
        static MaintenanceWindow(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AmazonMQ_Broker_LogList
         * @property {boolean} [Audit] Audit.
         * @property {boolean} [General] General.
         */
        /**
         * @param {AWS_AmazonMQ_Broker_LogList} properties
         * @returns {AWS_AmazonMQ_Broker_LogList}
         */
        static LogList(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AmazonMQ_Broker_TagsEntry
         * @property {string} Value Value.
         * @property {string} Key Key.
         */
        /**
         * @param {AWS_AmazonMQ_Broker_TagsEntry} properties
         * @returns {AWS_AmazonMQ_Broker_TagsEntry}
         */
        static TagsEntry(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AmazonMQ_Broker_ConfigurationId
         * @property {number} Revision Revision.
         * @property {string} Id Id.
         */
        /**
         * @param {AWS_AmazonMQ_Broker_ConfigurationId} properties
         * @returns {AWS_AmazonMQ_Broker_ConfigurationId}
         */
        static ConfigurationId(properties) { return properties; }
      },
      /**
       * @namespace ConfigurationAssociation
       */
      ConfigurationAssociation: class {
        /**
         * @typedef {Object} AWS_AmazonMQ_ConfigurationAssociation
         * @property {string} Broker Broker.
         * @property {AWS_AmazonMQ_ConfigurationAssociation_ConfigurationId} Configuration Configuration.
         */
        /**
         * Create a new AWS::AmazonMQ::ConfigurationAssociation
         * @param {AWS_AmazonMQ_ConfigurationAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AmazonMQ_ConfigurationAssociation_ConfigurationId
         * @property {number} Revision Revision.
         * @property {string} Id Id.
         */
        /**
         * @param {AWS_AmazonMQ_ConfigurationAssociation_ConfigurationId} properties
         * @returns {AWS_AmazonMQ_ConfigurationAssociation_ConfigurationId}
         */
        static ConfigurationId(properties) { return properties; }
      },
      /**
       * @namespace Configuration
       */
      Configuration: class {
        /**
         * @typedef {Object} AWS_AmazonMQ_Configuration
         * @property {string} EngineVersion EngineVersion.
         * @property {string} [Description] Description.
         * @property {string} EngineType EngineType.
         * @property {string} Data Data.
         * @property {AWS_AmazonMQ_Configuration_TagsEntry[]} [Tags] Tags.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::AmazonMQ::Configuration
         * @param {AWS_AmazonMQ_Configuration} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AmazonMQ_Configuration_TagsEntry
         * @property {string} Value Value.
         * @property {string} Key Key.
         */
        /**
         * @param {AWS_AmazonMQ_Configuration_TagsEntry} properties
         * @returns {AWS_AmazonMQ_Configuration_TagsEntry}
         */
        static TagsEntry(properties) { return properties; }
      }
    },
    /**
     * @namespace AppSync
     */
    AppSync: {
      /**
       * @namespace DataSource
       */
      DataSource: class {
        /**
         * @typedef {Object} AWS_AppSync_DataSource
         * @property {string} Type Type.
         * @property {string} [Description] Description.
         * @property {string} [ServiceRoleArn] ServiceRoleArn.
         * @property {AWS_AppSync_DataSource_HttpConfig} [HttpConfig] HttpConfig.
         * @property {AWS_AppSync_DataSource_RelationalDatabaseConfig} [RelationalDatabaseConfig] RelationalDatabaseConfig.
         * @property {AWS_AppSync_DataSource_LambdaConfig} [LambdaConfig] LambdaConfig.
         * @property {string} ApiId ApiId.
         * @property {string} Name Name.
         * @property {AWS_AppSync_DataSource_DynamoDBConfig} [DynamoDBConfig] DynamoDBConfig.
         * @property {AWS_AppSync_DataSource_ElasticsearchConfig} [ElasticsearchConfig] ElasticsearchConfig.
         */
        /**
         * Create a new AWS::AppSync::DataSource
         * @param {AWS_AppSync_DataSource} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AppSync_DataSource_AuthorizationConfig
         * @property {AWS_AppSync_DataSource_AwsIamConfig} [AwsIamConfig] AwsIamConfig.
         * @property {string} AuthorizationType AuthorizationType.
         */
        /**
         * @param {AWS_AppSync_DataSource_AuthorizationConfig} properties
         * @returns {AWS_AppSync_DataSource_AuthorizationConfig}
         */
        static AuthorizationConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_DataSource_RelationalDatabaseConfig
         * @property {AWS_AppSync_DataSource_RdsHttpEndpointConfig} [RdsHttpEndpointConfig] RdsHttpEndpointConfig.
         * @property {string} RelationalDatabaseSourceType RelationalDatabaseSourceType.
         */
        /**
         * @param {AWS_AppSync_DataSource_RelationalDatabaseConfig} properties
         * @returns {AWS_AppSync_DataSource_RelationalDatabaseConfig}
         */
        static RelationalDatabaseConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_DataSource_RdsHttpEndpointConfig
         * @property {string} AwsRegion AwsRegion.
         * @property {string} [Schema] Schema.
         * @property {string} [DatabaseName] DatabaseName.
         * @property {string} DbClusterIdentifier DbClusterIdentifier.
         * @property {string} AwsSecretStoreArn AwsSecretStoreArn.
         */
        /**
         * @param {AWS_AppSync_DataSource_RdsHttpEndpointConfig} properties
         * @returns {AWS_AppSync_DataSource_RdsHttpEndpointConfig}
         */
        static RdsHttpEndpointConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_DataSource_LambdaConfig
         * @property {string} LambdaFunctionArn LambdaFunctionArn.
         */
        /**
         * @param {AWS_AppSync_DataSource_LambdaConfig} properties
         * @returns {AWS_AppSync_DataSource_LambdaConfig}
         */
        static LambdaConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_DataSource_AwsIamConfig
         * @property {string} [SigningRegion] SigningRegion.
         * @property {string} [SigningServiceName] SigningServiceName.
         */
        /**
         * @param {AWS_AppSync_DataSource_AwsIamConfig} properties
         * @returns {AWS_AppSync_DataSource_AwsIamConfig}
         */
        static AwsIamConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_DataSource_HttpConfig
         * @property {string} Endpoint Endpoint.
         * @property {AWS_AppSync_DataSource_AuthorizationConfig} [AuthorizationConfig] AuthorizationConfig.
         */
        /**
         * @param {AWS_AppSync_DataSource_HttpConfig} properties
         * @returns {AWS_AppSync_DataSource_HttpConfig}
         */
        static HttpConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_DataSource_DynamoDBConfig
         * @property {string} TableName TableName.
         * @property {string} AwsRegion AwsRegion.
         * @property {boolean} [UseCallerCredentials] UseCallerCredentials.
         */
        /**
         * @param {AWS_AppSync_DataSource_DynamoDBConfig} properties
         * @returns {AWS_AppSync_DataSource_DynamoDBConfig}
         */
        static DynamoDBConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_DataSource_ElasticsearchConfig
         * @property {string} AwsRegion AwsRegion.
         * @property {string} Endpoint Endpoint.
         */
        /**
         * @param {AWS_AppSync_DataSource_ElasticsearchConfig} properties
         * @returns {AWS_AppSync_DataSource_ElasticsearchConfig}
         */
        static ElasticsearchConfig(properties) { return properties; }
      },
      /**
       * @namespace Resolver
       */
      Resolver: class {
        /**
         * @typedef {Object} AWS_AppSync_Resolver
         * @property {string} [ResponseMappingTemplateS3Location] ResponseMappingTemplateS3Location.
         * @property {string} TypeName TypeName.
         * @property {AWS_AppSync_Resolver_PipelineConfig} [PipelineConfig] PipelineConfig.
         * @property {string} [DataSourceName] DataSourceName.
         * @property {string} [RequestMappingTemplate] RequestMappingTemplate.
         * @property {string} [ResponseMappingTemplate] ResponseMappingTemplate.
         * @property {string} [Kind] Kind.
         * @property {string} [RequestMappingTemplateS3Location] RequestMappingTemplateS3Location.
         * @property {string} ApiId ApiId.
         * @property {string} FieldName FieldName.
         */
        /**
         * Create a new AWS::AppSync::Resolver
         * @param {AWS_AppSync_Resolver} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AppSync_Resolver_PipelineConfig
         * @property {string[]} [Functions] Functions.
         */
        /**
         * @param {AWS_AppSync_Resolver_PipelineConfig} properties
         * @returns {AWS_AppSync_Resolver_PipelineConfig}
         */
        static PipelineConfig(properties) { return properties; }
      },
      /**
       * @namespace GraphQLSchema
       */
      GraphQLSchema: class {
        /**
         * @typedef {Object} AWS_AppSync_GraphQLSchema
         * @property {string} [Definition] Definition.
         * @property {string} [DefinitionS3Location] DefinitionS3Location.
         * @property {string} ApiId ApiId.
         */
        /**
         * Create a new AWS::AppSync::GraphQLSchema
         * @param {AWS_AppSync_GraphQLSchema} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace GraphQLApi
       */
      GraphQLApi: class {
        /**
         * @typedef {Object} AWS_AppSync_GraphQLApi
         * @property {AWS_AppSync_GraphQLApi_OpenIDConnectConfig} [OpenIDConnectConfig] OpenIDConnectConfig.
         * @property {AWS_AppSync_GraphQLApi_UserPoolConfig} [UserPoolConfig] UserPoolConfig.
         * @property {string} Name Name.
         * @property {string} AuthenticationType AuthenticationType.
         * @property {AWS_AppSync_GraphQLApi_LogConfig} [LogConfig] LogConfig.
         */
        /**
         * Create a new AWS::AppSync::GraphQLApi
         * @param {AWS_AppSync_GraphQLApi} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AppSync_GraphQLApi_OpenIDConnectConfig
         * @property {string} [Issuer] Issuer.
         * @property {string} [ClientId] ClientId.
         * @property {number} [AuthTTL] AuthTTL.
         * @property {number} [IatTTL] IatTTL.
         */
        /**
         * @param {AWS_AppSync_GraphQLApi_OpenIDConnectConfig} properties
         * @returns {AWS_AppSync_GraphQLApi_OpenIDConnectConfig}
         */
        static OpenIDConnectConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_GraphQLApi_LogConfig
         * @property {string} [CloudWatchLogsRoleArn] CloudWatchLogsRoleArn.
         * @property {string} [FieldLogLevel] FieldLogLevel.
         */
        /**
         * @param {AWS_AppSync_GraphQLApi_LogConfig} properties
         * @returns {AWS_AppSync_GraphQLApi_LogConfig}
         */
        static LogConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppSync_GraphQLApi_UserPoolConfig
         * @property {string} [AppIdClientRegex] AppIdClientRegex.
         * @property {string} [UserPoolId] UserPoolId.
         * @property {string} [AwsRegion] AwsRegion.
         * @property {string} [DefaultAction] DefaultAction.
         */
        /**
         * @param {AWS_AppSync_GraphQLApi_UserPoolConfig} properties
         * @returns {AWS_AppSync_GraphQLApi_UserPoolConfig}
         */
        static UserPoolConfig(properties) { return properties; }
      },
      /**
       * @namespace FunctionConfiguration
       */
      FunctionConfiguration: class {
        /**
         * @typedef {Object} AWS_AppSync_FunctionConfiguration
         * @property {string} [ResponseMappingTemplateS3Location] ResponseMappingTemplateS3Location.
         * @property {string} [Description] Description.
         * @property {string} [DataSourceName] DataSourceName.
         * @property {string} [RequestMappingTemplate] RequestMappingTemplate.
         * @property {string} [ResponseMappingTemplate] ResponseMappingTemplate.
         * @property {string} [FunctionVersion] FunctionVersion.
         * @property {string} [RequestMappingTemplateS3Location] RequestMappingTemplateS3Location.
         * @property {string} ApiId ApiId.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::AppSync::FunctionConfiguration
         * @param {AWS_AppSync_FunctionConfiguration} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ApiKey
       */
      ApiKey: class {
        /**
         * @typedef {Object} AWS_AppSync_ApiKey
         * @property {string} [Description] Description.
         * @property {number} [Expires] Expires.
         * @property {string} ApiId ApiId.
         */
        /**
         * Create a new AWS::AppSync::ApiKey
         * @param {AWS_AppSync_ApiKey} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace EC2
     */
    EC2: {
      /**
       * @namespace RouteTable
       */
      RouteTable: class {
        /**
         * @typedef {Object} AWS_EC2_RouteTable
         * @property {AWS_EC2_RouteTable_Tag[]} [Tags] Tags.
         * @property {string} VpcId VpcId.
         */
        /**
         * Create a new AWS::EC2::RouteTable
         * @param {AWS_EC2_RouteTable} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPCPeeringConnection
       */
      VPCPeeringConnection: class {
        /**
         * @typedef {Object} AWS_EC2_VPCPeeringConnection
         * @property {string} [PeerOwnerId] PeerOwnerId.
         * @property {string} [PeerRegion] PeerRegion.
         * @property {string} [PeerRoleArn] PeerRoleArn.
         * @property {string} PeerVpcId PeerVpcId.
         * @property {AWS_EC2_VPCPeeringConnection_Tag[]} [Tags] Tags.
         * @property {string} VpcId VpcId.
         */
        /**
         * Create a new AWS::EC2::VPCPeeringConnection
         * @param {AWS_EC2_VPCPeeringConnection} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace PlacementGroup
       */
      PlacementGroup: class {
        /**
         * @typedef {Object} AWS_EC2_PlacementGroup
         * @property {string} [Strategy] Strategy.
         */
        /**
         * Create a new AWS::EC2::PlacementGroup
         * @param {AWS_EC2_PlacementGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace TransitGateway
       */
      TransitGateway: class {
        /**
         * @typedef {Object} AWS_EC2_TransitGateway
         * @property {string} [DefaultRouteTablePropagation] DefaultRouteTablePropagation.
         * @property {string} [Description] Description.
         * @property {string} [AutoAcceptSharedAttachments] AutoAcceptSharedAttachments.
         * @property {string} [DefaultRouteTableAssociation] DefaultRouteTableAssociation.
         * @property {string} [VpnEcmpSupport] VpnEcmpSupport.
         * @property {string} [DnsSupport] DnsSupport.
         * @property {number} [AmazonSideAsn] AmazonSideAsn.
         * @property {AWS_EC2_TransitGateway_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::EC2::TransitGateway
         * @param {AWS_EC2_TransitGateway} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPCEndpointServicePermissions
       */
      VPCEndpointServicePermissions: class {
        /**
         * @typedef {Object} AWS_EC2_VPCEndpointServicePermissions
         * @property {string[]} [AllowedPrincipals] AllowedPrincipals.
         * @property {string} ServiceId ServiceId.
         */
        /**
         * Create a new AWS::EC2::VPCEndpointServicePermissions
         * @param {AWS_EC2_VPCEndpointServicePermissions} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace NetworkAclEntry
       */
      NetworkAclEntry: class {
        /**
         * @typedef {Object} AWS_EC2_NetworkAclEntry
         * @property {string} CidrBlock CidrBlock.
         * @property {boolean} [Egress] Egress.
         * @property {AWS_EC2_NetworkAclEntry_Icmp} [Icmp] Icmp.
         * @property {string} [Ipv6CidrBlock] Ipv6CidrBlock.
         * @property {string} NetworkAclId NetworkAclId.
         * @property {AWS_EC2_NetworkAclEntry_PortRange} [PortRange] PortRange.
         * @property {number} Protocol Protocol.
         * @property {string} RuleAction RuleAction.
         * @property {number} RuleNumber RuleNumber.
         */
        /**
         * Create a new AWS::EC2::NetworkAclEntry
         * @param {AWS_EC2_NetworkAclEntry} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EC2_NetworkAclEntry_Icmp
         * @property {number} [Code] Code.
         * @property {number} [Type] Type.
         */
        /**
         * @param {AWS_EC2_NetworkAclEntry_Icmp} properties
         * @returns {AWS_EC2_NetworkAclEntry_Icmp}
         */
        static Icmp(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_NetworkAclEntry_PortRange
         * @property {number} [From] From.
         * @property {number} [To] To.
         */
        /**
         * @param {AWS_EC2_NetworkAclEntry_PortRange} properties
         * @returns {AWS_EC2_NetworkAclEntry_PortRange}
         */
        static PortRange(properties) { return properties; }
      },
      /**
       * @namespace InternetGateway
       */
      InternetGateway: class {
        /**
         * @typedef {Object} AWS_EC2_InternetGateway
         * @property {AWS_EC2_InternetGateway_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::EC2::InternetGateway
         * @param {AWS_EC2_InternetGateway} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace LaunchTemplate
       */
      LaunchTemplate: class {
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate
         * @property {string} [LaunchTemplateName] LaunchTemplateName.
         * @property {AWS_EC2_LaunchTemplate_LaunchTemplateData} [LaunchTemplateData] LaunchTemplateData.
         */
        /**
         * Create a new AWS::EC2::LaunchTemplate
         * @param {AWS_EC2_LaunchTemplate} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_PrivateIpAdd
         * @property {string} [PrivateIpAddress] PrivateIpAddress.
         * @property {boolean} [Primary] Primary.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_PrivateIpAdd} properties
         * @returns {AWS_EC2_LaunchTemplate_PrivateIpAdd}
         */
        static PrivateIpAdd(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_LaunchTemplateData
         * @property {string[]} [SecurityGroups] SecurityGroups.
         * @property {AWS_EC2_LaunchTemplate_TagSpecification[]} [TagSpecifications] TagSpecifications.
         * @property {string} [UserData] UserData.
         * @property {AWS_EC2_LaunchTemplate_BlockDeviceMapping[]} [BlockDeviceMappings] BlockDeviceMappings.
         * @property {AWS_EC2_LaunchTemplate_IamInstanceProfile} [IamInstanceProfile] IamInstanceProfile.
         * @property {string} [KernelId] KernelId.
         * @property {boolean} [EbsOptimized] EbsOptimized.
         * @property {AWS_EC2_LaunchTemplate_ElasticGpuSpecification[]} [ElasticGpuSpecifications] ElasticGpuSpecifications.
         * @property {AWS_EC2_LaunchTemplate_LaunchTemplateElasticInferenceAccelerator[]} [ElasticInferenceAccelerators] ElasticInferenceAccelerators.
         * @property {AWS_EC2_LaunchTemplate_Placement} [Placement] Placement.
         * @property {AWS_EC2_LaunchTemplate_NetworkInterface[]} [NetworkInterfaces] NetworkInterfaces.
         * @property {string} [ImageId] ImageId.
         * @property {string} [InstanceType] InstanceType.
         * @property {AWS_EC2_LaunchTemplate_Monitoring} [Monitoring] Monitoring.
         * @property {AWS_EC2_LaunchTemplate_HibernationOptions} [HibernationOptions] HibernationOptions.
         * @property {AWS_EC2_LaunchTemplate_LicenseSpecification[]} [LicenseSpecifications] LicenseSpecifications.
         * @property {string} [InstanceInitiatedShutdownBehavior] InstanceInitiatedShutdownBehavior.
         * @property {AWS_EC2_LaunchTemplate_CpuOptions} [CpuOptions] CpuOptions.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string} [KeyName] KeyName.
         * @property {boolean} [DisableApiTermination] DisableApiTermination.
         * @property {AWS_EC2_LaunchTemplate_InstanceMarketOptions} [InstanceMarketOptions] InstanceMarketOptions.
         * @property {string} [RamDiskId] RamDiskId.
         * @property {AWS_EC2_LaunchTemplate_CapacityReservationSpecification} [CapacityReservationSpecification] CapacityReservationSpecification.
         * @property {AWS_EC2_LaunchTemplate_CreditSpecification} [CreditSpecification] CreditSpecification.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_LaunchTemplateData} properties
         * @returns {AWS_EC2_LaunchTemplate_LaunchTemplateData}
         */
        static LaunchTemplateData(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_InstanceMarketOptions
         * @property {AWS_EC2_LaunchTemplate_SpotOptions} [SpotOptions] SpotOptions.
         * @property {string} [MarketType] MarketType.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_InstanceMarketOptions} properties
         * @returns {AWS_EC2_LaunchTemplate_InstanceMarketOptions}
         */
        static InstanceMarketOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_CreditSpecification
         * @property {string} [CpuCredits] CpuCredits.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_CreditSpecification} properties
         * @returns {AWS_EC2_LaunchTemplate_CreditSpecification}
         */
        static CreditSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_Monitoring
         * @property {boolean} [Enabled] Enabled.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_Monitoring} properties
         * @returns {AWS_EC2_LaunchTemplate_Monitoring}
         */
        static Monitoring(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_Placement
         * @property {string} [GroupName] GroupName.
         * @property {string} [Tenancy] Tenancy.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [Affinity] Affinity.
         * @property {string} [HostId] HostId.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_Placement} properties
         * @returns {AWS_EC2_LaunchTemplate_Placement}
         */
        static Placement(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_BlockDeviceMapping
         * @property {AWS_EC2_LaunchTemplate_Ebs} [Ebs] Ebs.
         * @property {string} [NoDevice] NoDevice.
         * @property {string} [VirtualName] VirtualName.
         * @property {string} [DeviceName] DeviceName.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_BlockDeviceMapping} properties
         * @returns {AWS_EC2_LaunchTemplate_BlockDeviceMapping}
         */
        static BlockDeviceMapping(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_SpotOptions
         * @property {string} [SpotInstanceType] SpotInstanceType.
         * @property {string} [InstanceInterruptionBehavior] InstanceInterruptionBehavior.
         * @property {string} [MaxPrice] MaxPrice.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_SpotOptions} properties
         * @returns {AWS_EC2_LaunchTemplate_SpotOptions}
         */
        static SpotOptions(properties) { return properties; }
        /**
         * @typedef {string} AWS_EC2_LaunchTemplate_CapacityReservationPreference
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_CapacityReservationPreference} properties
         * @returns {AWS_EC2_LaunchTemplate_CapacityReservationPreference}
         */
        static CapacityReservationPreference(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_CapacityReservationSpecification
         * @property {AWS_EC2_LaunchTemplate_CapacityReservationPreference} [CapacityReservationPreference] CapacityReservationPreference.
         * @property {AWS_EC2_LaunchTemplate_CapacityReservationTarget} [CapacityReservationTarget] CapacityReservationTarget.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_CapacityReservationSpecification} properties
         * @returns {AWS_EC2_LaunchTemplate_CapacityReservationSpecification}
         */
        static CapacityReservationSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_ElasticGpuSpecification
         * @property {string} [Type] Type.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_ElasticGpuSpecification} properties
         * @returns {AWS_EC2_LaunchTemplate_ElasticGpuSpecification}
         */
        static ElasticGpuSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_TagSpecification
         * @property {string} [ResourceType] ResourceType.
         * @property {AWS_EC2_LaunchTemplate_Tag[]} [Tags] Tags.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_TagSpecification} properties
         * @returns {AWS_EC2_LaunchTemplate_TagSpecification}
         */
        static TagSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_Ipv6Add
         * @property {string} [Ipv6Address] Ipv6Address.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_Ipv6Add} properties
         * @returns {AWS_EC2_LaunchTemplate_Ipv6Add}
         */
        static Ipv6Add(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_IamInstanceProfile
         * @property {string} [Arn] Arn.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_IamInstanceProfile} properties
         * @returns {AWS_EC2_LaunchTemplate_IamInstanceProfile}
         */
        static IamInstanceProfile(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_CapacityReservationTarget
         * @property {string} [CapacityReservationId] CapacityReservationId.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_CapacityReservationTarget} properties
         * @returns {AWS_EC2_LaunchTemplate_CapacityReservationTarget}
         */
        static CapacityReservationTarget(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_NetworkInterface
         * @property {string} [Description] Description.
         * @property {string} [PrivateIpAddress] PrivateIpAddress.
         * @property {AWS_EC2_LaunchTemplate_PrivateIpAdd[]} [PrivateIpAddresses] PrivateIpAddresses.
         * @property {number} [SecondaryPrivateIpAddressCount] SecondaryPrivateIpAddressCount.
         * @property {number} [Ipv6AddressCount] Ipv6AddressCount.
         * @property {string[]} [Groups] Groups.
         * @property {number} [DeviceIndex] DeviceIndex.
         * @property {string} [SubnetId] SubnetId.
         * @property {AWS_EC2_LaunchTemplate_Ipv6Add[]} [Ipv6Addresses] Ipv6Addresses.
         * @property {boolean} [AssociatePublicIpAddress] AssociatePublicIpAddress.
         * @property {string} [NetworkInterfaceId] NetworkInterfaceId.
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_NetworkInterface} properties
         * @returns {AWS_EC2_LaunchTemplate_NetworkInterface}
         */
        static NetworkInterface(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_LicenseSpecification
         * @property {string} [LicenseConfigurationArn] LicenseConfigurationArn.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_LicenseSpecification} properties
         * @returns {AWS_EC2_LaunchTemplate_LicenseSpecification}
         */
        static LicenseSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_CpuOptions
         * @property {number} [ThreadsPerCore] ThreadsPerCore.
         * @property {number} [CoreCount] CoreCount.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_CpuOptions} properties
         * @returns {AWS_EC2_LaunchTemplate_CpuOptions}
         */
        static CpuOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_Ebs
         * @property {string} [SnapshotId] SnapshotId.
         * @property {string} [VolumeType] VolumeType.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {boolean} [Encrypted] Encrypted.
         * @property {number} [Iops] Iops.
         * @property {number} [VolumeSize] VolumeSize.
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_Ebs} properties
         * @returns {AWS_EC2_LaunchTemplate_Ebs}
         */
        static Ebs(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_HibernationOptions
         * @property {boolean} [Configured] Configured.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_HibernationOptions} properties
         * @returns {AWS_EC2_LaunchTemplate_HibernationOptions}
         */
        static HibernationOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_LaunchTemplate_LaunchTemplateElasticInferenceAccelerator
         * @property {string} [Type] Type.
         */
        /**
         * @param {AWS_EC2_LaunchTemplate_LaunchTemplateElasticInferenceAccelerator} properties
         * @returns {AWS_EC2_LaunchTemplate_LaunchTemplateElasticInferenceAccelerator}
         */
        static LaunchTemplateElasticInferenceAccelerator(properties) { return properties; }
      },
      /**
       * @namespace Volume
       */
      Volume: class {
        /**
         * @typedef {Object} AWS_EC2_Volume
         * @property {boolean} [AutoEnableIO] AutoEnableIO.
         * @property {string} AvailabilityZone AvailabilityZone.
         * @property {boolean} [Encrypted] Encrypted.
         * @property {number} [Iops] Iops.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {number} [Size] Size.
         * @property {string} [SnapshotId] SnapshotId.
         * @property {AWS_EC2_Volume_Tag[]} [Tags] Tags.
         * @property {string} [VolumeType] VolumeType.
         */
        /**
         * Create a new AWS::EC2::Volume
         * @param {AWS_EC2_Volume} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace TransitGatewayRouteTableAssociation
       */
      TransitGatewayRouteTableAssociation: class {
        /**
         * @typedef {Object} AWS_EC2_TransitGatewayRouteTableAssociation
         * @property {string} TransitGatewayRouteTableId TransitGatewayRouteTableId.
         * @property {string} TransitGatewayAttachmentId TransitGatewayAttachmentId.
         */
        /**
         * Create a new AWS::EC2::TransitGatewayRouteTableAssociation
         * @param {AWS_EC2_TransitGatewayRouteTableAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SpotFleet
       */
      SpotFleet: class {
        /**
         * @typedef {Object} AWS_EC2_SpotFleet
         * @property {AWS_EC2_SpotFleet_SpotFleetRequestConfigData} SpotFleetRequestConfigData SpotFleetRequestConfigData.
         */
        /**
         * Create a new AWS::EC2::SpotFleet
         * @param {AWS_EC2_SpotFleet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_ClassicLoadBalancer
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_EC2_SpotFleet_ClassicLoadBalancer} properties
         * @returns {AWS_EC2_SpotFleet_ClassicLoadBalancer}
         */
        static ClassicLoadBalancer(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_LaunchTemplateConfig
         * @property {AWS_EC2_SpotFleet_FleetLaunchTemplateSpecification} [LaunchTemplateSpecification] LaunchTemplateSpecification.
         * @property {AWS_EC2_SpotFleet_LaunchTemplateOverrides[]} [Overrides] Overrides.
         */
        /**
         * @param {AWS_EC2_SpotFleet_LaunchTemplateConfig} properties
         * @returns {AWS_EC2_SpotFleet_LaunchTemplateConfig}
         */
        static LaunchTemplateConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_IamInstanceProfileSpecification
         * @property {string} [Arn] Arn.
         */
        /**
         * @param {AWS_EC2_SpotFleet_IamInstanceProfileSpecification} properties
         * @returns {AWS_EC2_SpotFleet_IamInstanceProfileSpecification}
         */
        static IamInstanceProfileSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_InstanceNetworkInterfaceSpecification
         * @property {boolean} [AssociatePublicIpAddress] AssociatePublicIpAddress.
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         * @property {string} [Description] Description.
         * @property {number} [DeviceIndex] DeviceIndex.
         * @property {string[]} [Groups] Groups.
         * @property {number} [Ipv6AddressCount] Ipv6AddressCount.
         * @property {AWS_EC2_SpotFleet_InstanceIpv6Address[]} [Ipv6Addresses] Ipv6Addresses.
         * @property {string} [NetworkInterfaceId] NetworkInterfaceId.
         * @property {AWS_EC2_SpotFleet_PrivateIpAddressSpecification[]} [PrivateIpAddresses] PrivateIpAddresses.
         * @property {number} [SecondaryPrivateIpAddressCount] SecondaryPrivateIpAddressCount.
         * @property {string} [SubnetId] SubnetId.
         */
        /**
         * @param {AWS_EC2_SpotFleet_InstanceNetworkInterfaceSpecification} properties
         * @returns {AWS_EC2_SpotFleet_InstanceNetworkInterfaceSpecification}
         */
        static InstanceNetworkInterfaceSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_SpotFleetTagSpecification
         * @property {string} [ResourceType] ResourceType.
         * @property {AWS_EC2_SpotFleet_Tag[]} [Tags] Tags.
         */
        /**
         * @param {AWS_EC2_SpotFleet_SpotFleetTagSpecification} properties
         * @returns {AWS_EC2_SpotFleet_SpotFleetTagSpecification}
         */
        static SpotFleetTagSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_PrivateIpAddressSpecification
         * @property {boolean} [Primary] Primary.
         * @property {string} PrivateIpAddress PrivateIpAddress.
         */
        /**
         * @param {AWS_EC2_SpotFleet_PrivateIpAddressSpecification} properties
         * @returns {AWS_EC2_SpotFleet_PrivateIpAddressSpecification}
         */
        static PrivateIpAddressSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_SpotFleetLaunchSpecification
         * @property {AWS_EC2_SpotFleet_BlockDeviceMapping[]} [BlockDeviceMappings] BlockDeviceMappings.
         * @property {boolean} [EbsOptimized] EbsOptimized.
         * @property {AWS_EC2_SpotFleet_IamInstanceProfileSpecification} [IamInstanceProfile] IamInstanceProfile.
         * @property {string} ImageId ImageId.
         * @property {string} InstanceType InstanceType.
         * @property {string} [KernelId] KernelId.
         * @property {string} [KeyName] KeyName.
         * @property {AWS_EC2_SpotFleet_SpotFleetMonitoring} [Monitoring] Monitoring.
         * @property {AWS_EC2_SpotFleet_InstanceNetworkInterfaceSpecification[]} [NetworkInterfaces] NetworkInterfaces.
         * @property {AWS_EC2_SpotFleet_SpotPlacement} [Placement] Placement.
         * @property {string} [RamdiskId] RamdiskId.
         * @property {AWS_EC2_SpotFleet_GroupIdentifier[]} [SecurityGroups] SecurityGroups.
         * @property {string} [SpotPrice] SpotPrice.
         * @property {string} [SubnetId] SubnetId.
         * @property {AWS_EC2_SpotFleet_SpotFleetTagSpecification[]} [TagSpecifications] TagSpecifications.
         * @property {string} [UserData] UserData.
         * @property {number} [WeightedCapacity] WeightedCapacity.
         */
        /**
         * @param {AWS_EC2_SpotFleet_SpotFleetLaunchSpecification} properties
         * @returns {AWS_EC2_SpotFleet_SpotFleetLaunchSpecification}
         */
        static SpotFleetLaunchSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_ClassicLoadBalancersConfig
         * @property {AWS_EC2_SpotFleet_ClassicLoadBalancer[]} ClassicLoadBalancers ClassicLoadBalancers.
         */
        /**
         * @param {AWS_EC2_SpotFleet_ClassicLoadBalancersConfig} properties
         * @returns {AWS_EC2_SpotFleet_ClassicLoadBalancersConfig}
         */
        static ClassicLoadBalancersConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_SpotPlacement
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [GroupName] GroupName.
         * @property {string} [Tenancy] Tenancy.
         */
        /**
         * @param {AWS_EC2_SpotFleet_SpotPlacement} properties
         * @returns {AWS_EC2_SpotFleet_SpotPlacement}
         */
        static SpotPlacement(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_SpotFleetRequestConfigData
         * @property {string} [AllocationStrategy] AllocationStrategy.
         * @property {string} [ExcessCapacityTerminationPolicy] ExcessCapacityTerminationPolicy.
         * @property {string} IamFleetRole IamFleetRole.
         * @property {string} [InstanceInterruptionBehavior] InstanceInterruptionBehavior.
         * @property {AWS_EC2_SpotFleet_SpotFleetLaunchSpecification[]} [LaunchSpecifications] LaunchSpecifications.
         * @property {AWS_EC2_SpotFleet_LaunchTemplateConfig[]} [LaunchTemplateConfigs] LaunchTemplateConfigs.
         * @property {AWS_EC2_SpotFleet_LoadBalancersConfig} [LoadBalancersConfig] LoadBalancersConfig.
         * @property {boolean} [ReplaceUnhealthyInstances] ReplaceUnhealthyInstances.
         * @property {string} [SpotPrice] SpotPrice.
         * @property {number} TargetCapacity TargetCapacity.
         * @property {boolean} [TerminateInstancesWithExpiration] TerminateInstancesWithExpiration.
         * @property {string} [Type] Type.
         * @property {string} [ValidFrom] ValidFrom.
         * @property {string} [ValidUntil] ValidUntil.
         */
        /**
         * @param {AWS_EC2_SpotFleet_SpotFleetRequestConfigData} properties
         * @returns {AWS_EC2_SpotFleet_SpotFleetRequestConfigData}
         */
        static SpotFleetRequestConfigData(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_EbsBlockDevice
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         * @property {boolean} [Encrypted] Encrypted.
         * @property {number} [Iops] Iops.
         * @property {string} [SnapshotId] SnapshotId.
         * @property {number} [VolumeSize] VolumeSize.
         * @property {string} [VolumeType] VolumeType.
         */
        /**
         * @param {AWS_EC2_SpotFleet_EbsBlockDevice} properties
         * @returns {AWS_EC2_SpotFleet_EbsBlockDevice}
         */
        static EbsBlockDevice(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_LoadBalancersConfig
         * @property {AWS_EC2_SpotFleet_ClassicLoadBalancersConfig} [ClassicLoadBalancersConfig] ClassicLoadBalancersConfig.
         * @property {AWS_EC2_SpotFleet_TargetGroupsConfig} [TargetGroupsConfig] TargetGroupsConfig.
         */
        /**
         * @param {AWS_EC2_SpotFleet_LoadBalancersConfig} properties
         * @returns {AWS_EC2_SpotFleet_LoadBalancersConfig}
         */
        static LoadBalancersConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_FleetLaunchTemplateSpecification
         * @property {string} [LaunchTemplateId] LaunchTemplateId.
         * @property {string} [LaunchTemplateName] LaunchTemplateName.
         * @property {string} Version Version.
         */
        /**
         * @param {AWS_EC2_SpotFleet_FleetLaunchTemplateSpecification} properties
         * @returns {AWS_EC2_SpotFleet_FleetLaunchTemplateSpecification}
         */
        static FleetLaunchTemplateSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_TargetGroup
         * @property {string} Arn Arn.
         */
        /**
         * @param {AWS_EC2_SpotFleet_TargetGroup} properties
         * @returns {AWS_EC2_SpotFleet_TargetGroup}
         */
        static TargetGroup(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_InstanceIpv6Address
         * @property {string} Ipv6Address Ipv6Address.
         */
        /**
         * @param {AWS_EC2_SpotFleet_InstanceIpv6Address} properties
         * @returns {AWS_EC2_SpotFleet_InstanceIpv6Address}
         */
        static InstanceIpv6Address(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_TargetGroupsConfig
         * @property {AWS_EC2_SpotFleet_TargetGroup[]} TargetGroups TargetGroups.
         */
        /**
         * @param {AWS_EC2_SpotFleet_TargetGroupsConfig} properties
         * @returns {AWS_EC2_SpotFleet_TargetGroupsConfig}
         */
        static TargetGroupsConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_GroupIdentifier
         * @property {string} GroupId GroupId.
         */
        /**
         * @param {AWS_EC2_SpotFleet_GroupIdentifier} properties
         * @returns {AWS_EC2_SpotFleet_GroupIdentifier}
         */
        static GroupIdentifier(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_LaunchTemplateOverrides
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [InstanceType] InstanceType.
         * @property {string} [SpotPrice] SpotPrice.
         * @property {string} [SubnetId] SubnetId.
         * @property {number} [WeightedCapacity] WeightedCapacity.
         */
        /**
         * @param {AWS_EC2_SpotFleet_LaunchTemplateOverrides} properties
         * @returns {AWS_EC2_SpotFleet_LaunchTemplateOverrides}
         */
        static LaunchTemplateOverrides(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_SpotFleetMonitoring
         * @property {boolean} [Enabled] Enabled.
         */
        /**
         * @param {AWS_EC2_SpotFleet_SpotFleetMonitoring} properties
         * @returns {AWS_EC2_SpotFleet_SpotFleetMonitoring}
         */
        static SpotFleetMonitoring(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SpotFleet_BlockDeviceMapping
         * @property {string} DeviceName DeviceName.
         * @property {AWS_EC2_SpotFleet_EbsBlockDevice} [Ebs] Ebs.
         * @property {string} [NoDevice] NoDevice.
         * @property {string} [VirtualName] VirtualName.
         */
        /**
         * @param {AWS_EC2_SpotFleet_BlockDeviceMapping} properties
         * @returns {AWS_EC2_SpotFleet_BlockDeviceMapping}
         */
        static BlockDeviceMapping(properties) { return properties; }
      },
      /**
       * @namespace VPNConnectionRoute
       */
      VPNConnectionRoute: class {
        /**
         * @typedef {Object} AWS_EC2_VPNConnectionRoute
         * @property {string} DestinationCidrBlock DestinationCidrBlock.
         * @property {string} VpnConnectionId VpnConnectionId.
         */
        /**
         * Create a new AWS::EC2::VPNConnectionRoute
         * @param {AWS_EC2_VPNConnectionRoute} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace NetworkInterfacePermission
       */
      NetworkInterfacePermission: class {
        /**
         * @typedef {Object} AWS_EC2_NetworkInterfacePermission
         * @property {string} AwsAccountId AwsAccountId.
         * @property {string} NetworkInterfaceId NetworkInterfaceId.
         * @property {string} Permission Permission.
         */
        /**
         * Create a new AWS::EC2::NetworkInterfacePermission
         * @param {AWS_EC2_NetworkInterfacePermission} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace EIP
       */
      EIP: class {
        /**
         * @typedef {Object} AWS_EC2_EIP
         * @property {string} [Domain] Domain.
         * @property {string} [InstanceId] InstanceId.
         * @property {string} [PublicIpv4Pool] PublicIpv4Pool.
         */
        /**
         * Create a new AWS::EC2::EIP
         * @param {AWS_EC2_EIP} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SecurityGroupIngress
       */
      SecurityGroupIngress: class {
        /**
         * @typedef {Object} AWS_EC2_SecurityGroupIngress
         * @property {string} [CidrIp] CidrIp.
         * @property {string} [CidrIpv6] CidrIpv6.
         * @property {string} [Description] Description.
         * @property {number} [FromPort] FromPort.
         * @property {string} [GroupId] GroupId.
         * @property {string} [GroupName] GroupName.
         * @property {string} IpProtocol IpProtocol.
         * @property {string} [SourcePrefixListId] SourcePrefixListId.
         * @property {string} [SourceSecurityGroupId] SourceSecurityGroupId.
         * @property {string} [SourceSecurityGroupName] SourceSecurityGroupName.
         * @property {string} [SourceSecurityGroupOwnerId] SourceSecurityGroupOwnerId.
         * @property {number} [ToPort] ToPort.
         */
        /**
         * Create a new AWS::EC2::SecurityGroupIngress
         * @param {AWS_EC2_SecurityGroupIngress} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SubnetRouteTableAssociation
       */
      SubnetRouteTableAssociation: class {
        /**
         * @typedef {Object} AWS_EC2_SubnetRouteTableAssociation
         * @property {string} RouteTableId RouteTableId.
         * @property {string} SubnetId SubnetId.
         */
        /**
         * Create a new AWS::EC2::SubnetRouteTableAssociation
         * @param {AWS_EC2_SubnetRouteTableAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Route
       */
      Route: class {
        /**
         * @typedef {Object} AWS_EC2_Route
         * @property {string} [DestinationCidrBlock] DestinationCidrBlock.
         * @property {string} [DestinationIpv6CidrBlock] DestinationIpv6CidrBlock.
         * @property {string} [EgressOnlyInternetGatewayId] EgressOnlyInternetGatewayId.
         * @property {string} [GatewayId] GatewayId.
         * @property {string} [InstanceId] InstanceId.
         * @property {string} [NatGatewayId] NatGatewayId.
         * @property {string} [NetworkInterfaceId] NetworkInterfaceId.
         * @property {string} RouteTableId RouteTableId.
         * @property {string} [VpcPeeringConnectionId] VpcPeeringConnectionId.
         */
        /**
         * Create a new AWS::EC2::Route
         * @param {AWS_EC2_Route} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace FlowLog
       */
      FlowLog: class {
        /**
         * @typedef {Object} AWS_EC2_FlowLog
         * @property {string} [DeliverLogsPermissionArn] DeliverLogsPermissionArn.
         * @property {string} [LogDestination] LogDestination.
         * @property {string} [LogDestinationType] LogDestinationType.
         * @property {string} [LogGroupName] LogGroupName.
         * @property {string} ResourceId ResourceId.
         * @property {string} ResourceType ResourceType.
         * @property {string} TrafficType TrafficType.
         */
        /**
         * Create a new AWS::EC2::FlowLog
         * @param {AWS_EC2_FlowLog} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace TransitGatewayRouteTablePropagation
       */
      TransitGatewayRouteTablePropagation: class {
        /**
         * @typedef {Object} AWS_EC2_TransitGatewayRouteTablePropagation
         * @property {string} TransitGatewayRouteTableId TransitGatewayRouteTableId.
         * @property {string} TransitGatewayAttachmentId TransitGatewayAttachmentId.
         */
        /**
         * Create a new AWS::EC2::TransitGatewayRouteTablePropagation
         * @param {AWS_EC2_TransitGatewayRouteTablePropagation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SecurityGroupEgress
       */
      SecurityGroupEgress: class {
        /**
         * @typedef {Object} AWS_EC2_SecurityGroupEgress
         * @property {string} [CidrIp] CidrIp.
         * @property {string} [CidrIpv6] CidrIpv6.
         * @property {string} [Description] Description.
         * @property {string} [DestinationPrefixListId] DestinationPrefixListId.
         * @property {string} [DestinationSecurityGroupId] DestinationSecurityGroupId.
         * @property {number} [FromPort] FromPort.
         * @property {string} GroupId GroupId.
         * @property {string} IpProtocol IpProtocol.
         * @property {number} [ToPort] ToPort.
         */
        /**
         * Create a new AWS::EC2::SecurityGroupEgress
         * @param {AWS_EC2_SecurityGroupEgress} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace NetworkInterface
       */
      NetworkInterface: class {
        /**
         * @typedef {Object} AWS_EC2_NetworkInterface
         * @property {string} [Description] Description.
         * @property {string[]} [GroupSet] GroupSet.
         * @property {string} [InterfaceType] InterfaceType.
         * @property {number} [Ipv6AddressCount] Ipv6AddressCount.
         * @property {AWS_EC2_NetworkInterface_InstanceIpv6Address} [Ipv6Addresses] Ipv6Addresses.
         * @property {string} [PrivateIpAddress] PrivateIpAddress.
         * @property {AWS_EC2_NetworkInterface_PrivateIpAddressSpecification[]} [PrivateIpAddresses] PrivateIpAddresses.
         * @property {number} [SecondaryPrivateIpAddressCount] SecondaryPrivateIpAddressCount.
         * @property {boolean} [SourceDestCheck] SourceDestCheck.
         * @property {string} SubnetId SubnetId.
         * @property {AWS_EC2_NetworkInterface_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::EC2::NetworkInterface
         * @param {AWS_EC2_NetworkInterface} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EC2_NetworkInterface_InstanceIpv6Address
         * @property {string} Ipv6Address Ipv6Address.
         */
        /**
         * @param {AWS_EC2_NetworkInterface_InstanceIpv6Address} properties
         * @returns {AWS_EC2_NetworkInterface_InstanceIpv6Address}
         */
        static InstanceIpv6Address(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_NetworkInterface_PrivateIpAddressSpecification
         * @property {boolean} Primary Primary.
         * @property {string} PrivateIpAddress PrivateIpAddress.
         */
        /**
         * @param {AWS_EC2_NetworkInterface_PrivateIpAddressSpecification} properties
         * @returns {AWS_EC2_NetworkInterface_PrivateIpAddressSpecification}
         */
        static PrivateIpAddressSpecification(properties) { return properties; }
      },
      /**
       * @namespace TransitGatewayAttachment
       */
      TransitGatewayAttachment: class {
        /**
         * @typedef {Object} AWS_EC2_TransitGatewayAttachment
         * @property {string} TransitGatewayId TransitGatewayId.
         * @property {string} VpcId VpcId.
         * @property {string[]} SubnetIds SubnetIds.
         * @property {AWS_EC2_TransitGatewayAttachment_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::EC2::TransitGatewayAttachment
         * @param {AWS_EC2_TransitGatewayAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SubnetNetworkAclAssociation
       */
      SubnetNetworkAclAssociation: class {
        /**
         * @typedef {Object} AWS_EC2_SubnetNetworkAclAssociation
         * @property {string} NetworkAclId NetworkAclId.
         * @property {string} SubnetId SubnetId.
         */
        /**
         * Create a new AWS::EC2::SubnetNetworkAclAssociation
         * @param {AWS_EC2_SubnetNetworkAclAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SubnetCidrBlock
       */
      SubnetCidrBlock: class {
        /**
         * @typedef {Object} AWS_EC2_SubnetCidrBlock
         * @property {string} Ipv6CidrBlock Ipv6CidrBlock.
         * @property {string} SubnetId SubnetId.
         */
        /**
         * Create a new AWS::EC2::SubnetCidrBlock
         * @param {AWS_EC2_SubnetCidrBlock} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace NatGateway
       */
      NatGateway: class {
        /**
         * @typedef {Object} AWS_EC2_NatGateway
         * @property {string} AllocationId AllocationId.
         * @property {string} SubnetId SubnetId.
         * @property {AWS_EC2_NatGateway_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::EC2::NatGateway
         * @param {AWS_EC2_NatGateway} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SecurityGroup
       */
      SecurityGroup: class {
        /**
         * @typedef {Object} AWS_EC2_SecurityGroup
         * @property {string} GroupDescription GroupDescription.
         * @property {string} [GroupName] GroupName.
         * @property {AWS_EC2_SecurityGroup_Egress[]} [SecurityGroupEgress] SecurityGroupEgress.
         * @property {AWS_EC2_SecurityGroup_Ingress[]} [SecurityGroupIngress] SecurityGroupIngress.
         * @property {AWS_EC2_SecurityGroup_Tag[]} [Tags] Tags.
         * @property {string} [VpcId] VpcId.
         */
        /**
         * Create a new AWS::EC2::SecurityGroup
         * @param {AWS_EC2_SecurityGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EC2_SecurityGroup_Ingress
         * @property {string} [CidrIp] CidrIp.
         * @property {string} [CidrIpv6] CidrIpv6.
         * @property {string} [Description] Description.
         * @property {number} [FromPort] FromPort.
         * @property {string} IpProtocol IpProtocol.
         * @property {string} [SourcePrefixListId] SourcePrefixListId.
         * @property {string} [SourceSecurityGroupId] SourceSecurityGroupId.
         * @property {string} [SourceSecurityGroupName] SourceSecurityGroupName.
         * @property {string} [SourceSecurityGroupOwnerId] SourceSecurityGroupOwnerId.
         * @property {number} [ToPort] ToPort.
         */
        /**
         * @param {AWS_EC2_SecurityGroup_Ingress} properties
         * @returns {AWS_EC2_SecurityGroup_Ingress}
         */
        static Ingress(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_SecurityGroup_Egress
         * @property {string} [CidrIp] CidrIp.
         * @property {string} [CidrIpv6] CidrIpv6.
         * @property {string} [Description] Description.
         * @property {string} [DestinationPrefixListId] DestinationPrefixListId.
         * @property {string} [DestinationSecurityGroupId] DestinationSecurityGroupId.
         * @property {number} [FromPort] FromPort.
         * @property {string} IpProtocol IpProtocol.
         * @property {number} [ToPort] ToPort.
         */
        /**
         * @param {AWS_EC2_SecurityGroup_Egress} properties
         * @returns {AWS_EC2_SecurityGroup_Egress}
         */
        static Egress(properties) { return properties; }
      },
      /**
       * @namespace Subnet
       */
      Subnet: class {
        /**
         * @typedef {Object} AWS_EC2_Subnet
         * @property {boolean} [AssignIpv6AddressOnCreation] AssignIpv6AddressOnCreation.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} CidrBlock CidrBlock.
         * @property {string} [Ipv6CidrBlock] Ipv6CidrBlock.
         * @property {boolean} [MapPublicIpOnLaunch] MapPublicIpOnLaunch.
         * @property {AWS_EC2_Subnet_Tag[]} [Tags] Tags.
         * @property {string} VpcId VpcId.
         */
        /**
         * Create a new AWS::EC2::Subnet
         * @param {AWS_EC2_Subnet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPC
       */
      VPC: class {
        /**
         * @typedef {Object} AWS_EC2_VPC
         * @property {string} CidrBlock CidrBlock.
         * @property {boolean} [EnableDnsHostnames] EnableDnsHostnames.
         * @property {boolean} [EnableDnsSupport] EnableDnsSupport.
         * @property {string} [InstanceTenancy] InstanceTenancy.
         * @property {AWS_EC2_VPC_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::EC2::VPC
         * @param {AWS_EC2_VPC} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Instance
       */
      Instance: class {
        /**
         * @typedef {Object} AWS_EC2_Instance
         * @property {string} [AdditionalInfo] AdditionalInfo.
         * @property {string} [Affinity] Affinity.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {AWS_EC2_Instance_BlockDeviceMapping[]} [BlockDeviceMappings] BlockDeviceMappings.
         * @property {AWS_EC2_Instance_CreditSpecification} [CreditSpecification] CreditSpecification.
         * @property {boolean} [DisableApiTermination] DisableApiTermination.
         * @property {boolean} [EbsOptimized] EbsOptimized.
         * @property {AWS_EC2_Instance_ElasticGpuSpecification[]} [ElasticGpuSpecifications] ElasticGpuSpecifications.
         * @property {AWS_EC2_Instance_ElasticInferenceAccelerator[]} [ElasticInferenceAccelerators] ElasticInferenceAccelerators.
         * @property {string} [HostId] HostId.
         * @property {string} [IamInstanceProfile] IamInstanceProfile.
         * @property {string} [ImageId] ImageId.
         * @property {string} [InstanceInitiatedShutdownBehavior] InstanceInitiatedShutdownBehavior.
         * @property {string} [InstanceType] InstanceType.
         * @property {number} [Ipv6AddressCount] Ipv6AddressCount.
         * @property {AWS_EC2_Instance_InstanceIpv6Address[]} [Ipv6Addresses] Ipv6Addresses.
         * @property {string} [KernelId] KernelId.
         * @property {string} [KeyName] KeyName.
         * @property {AWS_EC2_Instance_LaunchTemplateSpecification} [LaunchTemplate] LaunchTemplate.
         * @property {AWS_EC2_Instance_LicenseSpecification[]} [LicenseSpecifications] LicenseSpecifications.
         * @property {boolean} [Monitoring] Monitoring.
         * @property {AWS_EC2_Instance_NetworkInterface[]} [NetworkInterfaces] NetworkInterfaces.
         * @property {string} [PlacementGroupName] PlacementGroupName.
         * @property {string} [PrivateIpAddress] PrivateIpAddress.
         * @property {string} [RamdiskId] RamdiskId.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string[]} [SecurityGroups] SecurityGroups.
         * @property {boolean} [SourceDestCheck] SourceDestCheck.
         * @property {AWS_EC2_Instance_SsmAssociation[]} [SsmAssociations] SsmAssociations.
         * @property {string} [SubnetId] SubnetId.
         * @property {AWS_EC2_Instance_Tag[]} [Tags] Tags.
         * @property {string} [Tenancy] Tenancy.
         * @property {string} [UserData] UserData.
         * @property {AWS_EC2_Instance_Volume[]} [Volumes] Volumes.
         */
        /**
         * Create a new AWS::EC2::Instance
         * @param {AWS_EC2_Instance} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EC2_Instance_ElasticGpuSpecification
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_EC2_Instance_ElasticGpuSpecification} properties
         * @returns {AWS_EC2_Instance_ElasticGpuSpecification}
         */
        static ElasticGpuSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_NetworkInterface
         * @property {boolean} [AssociatePublicIpAddress] AssociatePublicIpAddress.
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         * @property {string} [Description] Description.
         * @property {string} DeviceIndex DeviceIndex.
         * @property {string[]} [GroupSet] GroupSet.
         * @property {number} [Ipv6AddressCount] Ipv6AddressCount.
         * @property {AWS_EC2_Instance_InstanceIpv6Address[]} [Ipv6Addresses] Ipv6Addresses.
         * @property {string} [NetworkInterfaceId] NetworkInterfaceId.
         * @property {string} [PrivateIpAddress] PrivateIpAddress.
         * @property {AWS_EC2_Instance_PrivateIpAddressSpecification[]} [PrivateIpAddresses] PrivateIpAddresses.
         * @property {number} [SecondaryPrivateIpAddressCount] SecondaryPrivateIpAddressCount.
         * @property {string} [SubnetId] SubnetId.
         */
        /**
         * @param {AWS_EC2_Instance_NetworkInterface} properties
         * @returns {AWS_EC2_Instance_NetworkInterface}
         */
        static NetworkInterface(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_InstanceIpv6Address
         * @property {string} Ipv6Address Ipv6Address.
         */
        /**
         * @param {AWS_EC2_Instance_InstanceIpv6Address} properties
         * @returns {AWS_EC2_Instance_InstanceIpv6Address}
         */
        static InstanceIpv6Address(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_Volume
         * @property {string} Device Device.
         * @property {string} VolumeId VolumeId.
         */
        /**
         * @param {AWS_EC2_Instance_Volume} properties
         * @returns {AWS_EC2_Instance_Volume}
         */
        static Volume(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_AssociationParameter
         * @property {string} Key Key.
         * @property {string[]} Value Value.
         */
        /**
         * @param {AWS_EC2_Instance_AssociationParameter} properties
         * @returns {AWS_EC2_Instance_AssociationParameter}
         */
        static AssociationParameter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_LaunchTemplateSpecification
         * @property {string} [LaunchTemplateId] LaunchTemplateId.
         * @property {string} [LaunchTemplateName] LaunchTemplateName.
         * @property {string} Version Version.
         */
        /**
         * @param {AWS_EC2_Instance_LaunchTemplateSpecification} properties
         * @returns {AWS_EC2_Instance_LaunchTemplateSpecification}
         */
        static LaunchTemplateSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_Ebs
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         * @property {boolean} [Encrypted] Encrypted.
         * @property {number} [Iops] Iops.
         * @property {string} [SnapshotId] SnapshotId.
         * @property {number} [VolumeSize] VolumeSize.
         * @property {string} [VolumeType] VolumeType.
         */
        /**
         * @param {AWS_EC2_Instance_Ebs} properties
         * @returns {AWS_EC2_Instance_Ebs}
         */
        static Ebs(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_LicenseSpecification
         * @property {string} LicenseConfigurationArn LicenseConfigurationArn.
         */
        /**
         * @param {AWS_EC2_Instance_LicenseSpecification} properties
         * @returns {AWS_EC2_Instance_LicenseSpecification}
         */
        static LicenseSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_NoDevice
         */
        /**
         * @param {AWS_EC2_Instance_NoDevice} properties
         * @returns {AWS_EC2_Instance_NoDevice}
         */
        static NoDevice(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_SsmAssociation
         * @property {AWS_EC2_Instance_AssociationParameter[]} [AssociationParameters] AssociationParameters.
         * @property {string} DocumentName DocumentName.
         */
        /**
         * @param {AWS_EC2_Instance_SsmAssociation} properties
         * @returns {AWS_EC2_Instance_SsmAssociation}
         */
        static SsmAssociation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_CreditSpecification
         * @property {string} [CPUCredits] CPUCredits.
         */
        /**
         * @param {AWS_EC2_Instance_CreditSpecification} properties
         * @returns {AWS_EC2_Instance_CreditSpecification}
         */
        static CreditSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_ElasticInferenceAccelerator
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_EC2_Instance_ElasticInferenceAccelerator} properties
         * @returns {AWS_EC2_Instance_ElasticInferenceAccelerator}
         */
        static ElasticInferenceAccelerator(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_BlockDeviceMapping
         * @property {string} DeviceName DeviceName.
         * @property {AWS_EC2_Instance_Ebs} [Ebs] Ebs.
         * @property {AWS_EC2_Instance_NoDevice} [NoDevice] NoDevice.
         * @property {string} [VirtualName] VirtualName.
         */
        /**
         * @param {AWS_EC2_Instance_BlockDeviceMapping} properties
         * @returns {AWS_EC2_Instance_BlockDeviceMapping}
         */
        static BlockDeviceMapping(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_Instance_PrivateIpAddressSpecification
         * @property {boolean} Primary Primary.
         * @property {string} PrivateIpAddress PrivateIpAddress.
         */
        /**
         * @param {AWS_EC2_Instance_PrivateIpAddressSpecification} properties
         * @returns {AWS_EC2_Instance_PrivateIpAddressSpecification}
         */
        static PrivateIpAddressSpecification(properties) { return properties; }
      },
      /**
       * @namespace DHCPOptions
       */
      DHCPOptions: class {
        /**
         * @typedef {Object} AWS_EC2_DHCPOptions
         * @property {string} [DomainName] DomainName.
         * @property {string[]} [DomainNameServers] DomainNameServers.
         * @property {string[]} [NetbiosNameServers] NetbiosNameServers.
         * @property {number} [NetbiosNodeType] NetbiosNodeType.
         * @property {string[]} [NtpServers] NtpServers.
         * @property {AWS_EC2_DHCPOptions_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::EC2::DHCPOptions
         * @param {AWS_EC2_DHCPOptions} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace TransitGatewayRoute
       */
      TransitGatewayRoute: class {
        /**
         * @typedef {Object} AWS_EC2_TransitGatewayRoute
         * @property {string} TransitGatewayRouteTableId TransitGatewayRouteTableId.
         * @property {string} [DestinationCidrBlock] DestinationCidrBlock.
         * @property {boolean} [Blackhole] Blackhole.
         * @property {string} [TransitGatewayAttachmentId] TransitGatewayAttachmentId.
         */
        /**
         * Create a new AWS::EC2::TransitGatewayRoute
         * @param {AWS_EC2_TransitGatewayRoute} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace NetworkAcl
       */
      NetworkAcl: class {
        /**
         * @typedef {Object} AWS_EC2_NetworkAcl
         * @property {AWS_EC2_NetworkAcl_Tag[]} [Tags] Tags.
         * @property {string} VpcId VpcId.
         */
        /**
         * Create a new AWS::EC2::NetworkAcl
         * @param {AWS_EC2_NetworkAcl} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPNGatewayRoutePropagation
       */
      VPNGatewayRoutePropagation: class {
        /**
         * @typedef {Object} AWS_EC2_VPNGatewayRoutePropagation
         * @property {string[]} RouteTableIds RouteTableIds.
         * @property {string} VpnGatewayId VpnGatewayId.
         */
        /**
         * Create a new AWS::EC2::VPNGatewayRoutePropagation
         * @param {AWS_EC2_VPNGatewayRoutePropagation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace EgressOnlyInternetGateway
       */
      EgressOnlyInternetGateway: class {
        /**
         * @typedef {Object} AWS_EC2_EgressOnlyInternetGateway
         * @property {string} VpcId VpcId.
         */
        /**
         * Create a new AWS::EC2::EgressOnlyInternetGateway
         * @param {AWS_EC2_EgressOnlyInternetGateway} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace NetworkInterfaceAttachment
       */
      NetworkInterfaceAttachment: class {
        /**
         * @typedef {Object} AWS_EC2_NetworkInterfaceAttachment
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         * @property {string} DeviceIndex DeviceIndex.
         * @property {string} InstanceId InstanceId.
         * @property {string} NetworkInterfaceId NetworkInterfaceId.
         */
        /**
         * Create a new AWS::EC2::NetworkInterfaceAttachment
         * @param {AWS_EC2_NetworkInterfaceAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace CustomerGateway
       */
      CustomerGateway: class {
        /**
         * @typedef {Object} AWS_EC2_CustomerGateway
         * @property {number} BgpAsn BgpAsn.
         * @property {string} IpAddress IpAddress.
         * @property {AWS_EC2_CustomerGateway_Tag[]} [Tags] Tags.
         * @property {string} Type Type.
         */
        /**
         * Create a new AWS::EC2::CustomerGateway
         * @param {AWS_EC2_CustomerGateway} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace TrunkInterfaceAssociation
       */
      TrunkInterfaceAssociation: class {
        /**
         * @typedef {Object} AWS_EC2_TrunkInterfaceAssociation
         * @property {string} BranchInterfaceId BranchInterfaceId.
         * @property {number} [GREKey] GREKey.
         * @property {string} TrunkInterfaceId TrunkInterfaceId.
         * @property {number} [VLANId] VLANId.
         */
        /**
         * Create a new AWS::EC2::TrunkInterfaceAssociation
         * @param {AWS_EC2_TrunkInterfaceAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VolumeAttachment
       */
      VolumeAttachment: class {
        /**
         * @typedef {Object} AWS_EC2_VolumeAttachment
         * @property {string} Device Device.
         * @property {string} InstanceId InstanceId.
         * @property {string} VolumeId VolumeId.
         */
        /**
         * Create a new AWS::EC2::VolumeAttachment
         * @param {AWS_EC2_VolumeAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Host
       */
      Host: class {
        /**
         * @typedef {Object} AWS_EC2_Host
         * @property {string} [AutoPlacement] AutoPlacement.
         * @property {string} AvailabilityZone AvailabilityZone.
         * @property {string} InstanceType InstanceType.
         */
        /**
         * Create a new AWS::EC2::Host
         * @param {AWS_EC2_Host} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace EIPAssociation
       */
      EIPAssociation: class {
        /**
         * @typedef {Object} AWS_EC2_EIPAssociation
         * @property {string} [AllocationId] AllocationId.
         * @property {string} [EIP] EIP.
         * @property {string} [InstanceId] InstanceId.
         * @property {string} [NetworkInterfaceId] NetworkInterfaceId.
         * @property {string} [PrivateIpAddress] PrivateIpAddress.
         */
        /**
         * Create a new AWS::EC2::EIPAssociation
         * @param {AWS_EC2_EIPAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPNGateway
       */
      VPNGateway: class {
        /**
         * @typedef {Object} AWS_EC2_VPNGateway
         * @property {number} [AmazonSideAsn] AmazonSideAsn.
         * @property {AWS_EC2_VPNGateway_Tag[]} [Tags] Tags.
         * @property {string} Type Type.
         */
        /**
         * Create a new AWS::EC2::VPNGateway
         * @param {AWS_EC2_VPNGateway} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPCEndpoint
       */
      VPCEndpoint: class {
        /**
         * @typedef {Object} AWS_EC2_VPCEndpoint
         * @property {string} [PolicyDocument] PolicyDocument.
         * @property {boolean} [PrivateDnsEnabled] PrivateDnsEnabled.
         * @property {string[]} [RouteTableIds] RouteTableIds.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string} ServiceName ServiceName.
         * @property {string[]} [SubnetIds] SubnetIds.
         * @property {string} [VpcEndpointType] VpcEndpointType.
         * @property {string} VpcId VpcId.
         */
        /**
         * Create a new AWS::EC2::VPCEndpoint
         * @param {AWS_EC2_VPCEndpoint} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPCGatewayAttachment
       */
      VPCGatewayAttachment: class {
        /**
         * @typedef {Object} AWS_EC2_VPCGatewayAttachment
         * @property {string} [InternetGatewayId] InternetGatewayId.
         * @property {string} VpcId VpcId.
         * @property {string} [VpnGatewayId] VpnGatewayId.
         */
        /**
         * Create a new AWS::EC2::VPCGatewayAttachment
         * @param {AWS_EC2_VPCGatewayAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPNConnection
       */
      VPNConnection: class {
        /**
         * @typedef {Object} AWS_EC2_VPNConnection
         * @property {string} CustomerGatewayId CustomerGatewayId.
         * @property {boolean} [StaticRoutesOnly] StaticRoutesOnly.
         * @property {AWS_EC2_VPNConnection_Tag[]} [Tags] Tags.
         * @property {string} Type Type.
         * @property {string} VpnGatewayId VpnGatewayId.
         * @property {AWS_EC2_VPNConnection_VpnTunnelOptionsSpecification[]} [VpnTunnelOptionsSpecifications] VpnTunnelOptionsSpecifications.
         */
        /**
         * Create a new AWS::EC2::VPNConnection
         * @param {AWS_EC2_VPNConnection} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EC2_VPNConnection_VpnTunnelOptionsSpecification
         * @property {string} [PreSharedKey] PreSharedKey.
         * @property {string} [TunnelInsideCidr] TunnelInsideCidr.
         */
        /**
         * @param {AWS_EC2_VPNConnection_VpnTunnelOptionsSpecification} properties
         * @returns {AWS_EC2_VPNConnection_VpnTunnelOptionsSpecification}
         */
        static VpnTunnelOptionsSpecification(properties) { return properties; }
      },
      /**
       * @namespace VPCCidrBlock
       */
      VPCCidrBlock: class {
        /**
         * @typedef {Object} AWS_EC2_VPCCidrBlock
         * @property {boolean} [AmazonProvidedIpv6CidrBlock] AmazonProvidedIpv6CidrBlock.
         * @property {string} [CidrBlock] CidrBlock.
         * @property {string} VpcId VpcId.
         */
        /**
         * Create a new AWS::EC2::VPCCidrBlock
         * @param {AWS_EC2_VPCCidrBlock} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace EC2Fleet
       */
      EC2Fleet: class {
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet
         * @property {AWS_EC2_EC2Fleet_TargetCapacitySpecificationRequest} TargetCapacitySpecification TargetCapacitySpecification.
         * @property {AWS_EC2_EC2Fleet_OnDemandOptionsRequest} [OnDemandOptions] OnDemandOptions.
         * @property {string} [Type] Type.
         * @property {string} [ExcessCapacityTerminationPolicy] ExcessCapacityTerminationPolicy.
         * @property {AWS_EC2_EC2Fleet_TagSpecification[]} [TagSpecifications] TagSpecifications.
         * @property {AWS_EC2_EC2Fleet_SpotOptionsRequest} [SpotOptions] SpotOptions.
         * @property {string} [ValidFrom] ValidFrom.
         * @property {boolean} [ReplaceUnhealthyInstances] ReplaceUnhealthyInstances.
         * @property {AWS_EC2_EC2Fleet_FleetLaunchTemplateConfigRequest[]} LaunchTemplateConfigs LaunchTemplateConfigs.
         * @property {boolean} [TerminateInstancesWithExpiration] TerminateInstancesWithExpiration.
         * @property {string} [ValidUntil] ValidUntil.
         */
        /**
         * Create a new AWS::EC2::EC2Fleet
         * @param {AWS_EC2_EC2Fleet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet_FleetLaunchTemplateSpecificationRequest
         * @property {string} [LaunchTemplateName] LaunchTemplateName.
         * @property {string} [Version] Version.
         * @property {string} [LaunchTemplateId] LaunchTemplateId.
         */
        /**
         * @param {AWS_EC2_EC2Fleet_FleetLaunchTemplateSpecificationRequest} properties
         * @returns {AWS_EC2_EC2Fleet_FleetLaunchTemplateSpecificationRequest}
         */
        static FleetLaunchTemplateSpecificationRequest(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet_FleetLaunchTemplateConfigRequest
         * @property {AWS_EC2_EC2Fleet_FleetLaunchTemplateSpecificationRequest} [LaunchTemplateSpecification] LaunchTemplateSpecification.
         * @property {AWS_EC2_EC2Fleet_FleetLaunchTemplateOverridesRequest[]} [Overrides] Overrides.
         */
        /**
         * @param {AWS_EC2_EC2Fleet_FleetLaunchTemplateConfigRequest} properties
         * @returns {AWS_EC2_EC2Fleet_FleetLaunchTemplateConfigRequest}
         */
        static FleetLaunchTemplateConfigRequest(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet_OnDemandOptionsRequest
         * @property {string} [AllocationStrategy] AllocationStrategy.
         */
        /**
         * @param {AWS_EC2_EC2Fleet_OnDemandOptionsRequest} properties
         * @returns {AWS_EC2_EC2Fleet_OnDemandOptionsRequest}
         */
        static OnDemandOptionsRequest(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet_TagRequest
         * @property {string} [Value] Value.
         * @property {string} [Key] Key.
         */
        /**
         * @param {AWS_EC2_EC2Fleet_TagRequest} properties
         * @returns {AWS_EC2_EC2Fleet_TagRequest}
         */
        static TagRequest(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet_TargetCapacitySpecificationRequest
         * @property {string} [DefaultTargetCapacityType] DefaultTargetCapacityType.
         * @property {number} TotalTargetCapacity TotalTargetCapacity.
         * @property {number} [OnDemandTargetCapacity] OnDemandTargetCapacity.
         * @property {number} [SpotTargetCapacity] SpotTargetCapacity.
         */
        /**
         * @param {AWS_EC2_EC2Fleet_TargetCapacitySpecificationRequest} properties
         * @returns {AWS_EC2_EC2Fleet_TargetCapacitySpecificationRequest}
         */
        static TargetCapacitySpecificationRequest(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet_FleetLaunchTemplateOverridesRequest
         * @property {number} [WeightedCapacity] WeightedCapacity.
         * @property {number} [Priority] Priority.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [SubnetId] SubnetId.
         * @property {string} [InstanceType] InstanceType.
         * @property {string} [MaxPrice] MaxPrice.
         */
        /**
         * @param {AWS_EC2_EC2Fleet_FleetLaunchTemplateOverridesRequest} properties
         * @returns {AWS_EC2_EC2Fleet_FleetLaunchTemplateOverridesRequest}
         */
        static FleetLaunchTemplateOverridesRequest(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet_TagSpecification
         * @property {string} [ResourceType] ResourceType.
         * @property {AWS_EC2_EC2Fleet_TagRequest[]} [Tags] Tags.
         */
        /**
         * @param {AWS_EC2_EC2Fleet_TagSpecification} properties
         * @returns {AWS_EC2_EC2Fleet_TagSpecification}
         */
        static TagSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EC2_EC2Fleet_SpotOptionsRequest
         * @property {string} [AllocationStrategy] AllocationStrategy.
         * @property {string} [InstanceInterruptionBehavior] InstanceInterruptionBehavior.
         * @property {number} [InstancePoolsToUseCount] InstancePoolsToUseCount.
         */
        /**
         * @param {AWS_EC2_EC2Fleet_SpotOptionsRequest} properties
         * @returns {AWS_EC2_EC2Fleet_SpotOptionsRequest}
         */
        static SpotOptionsRequest(properties) { return properties; }
      },
      /**
       * @namespace TransitGatewayRouteTable
       */
      TransitGatewayRouteTable: class {
        /**
         * @typedef {Object} AWS_EC2_TransitGatewayRouteTable
         * @property {string} TransitGatewayId TransitGatewayId.
         * @property {AWS_EC2_TransitGatewayRouteTable_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::EC2::TransitGatewayRouteTable
         * @param {AWS_EC2_TransitGatewayRouteTable} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace VPCDHCPOptionsAssociation
       */
      VPCDHCPOptionsAssociation: class {
        /**
         * @typedef {Object} AWS_EC2_VPCDHCPOptionsAssociation
         * @property {string} DhcpOptionsId DhcpOptionsId.
         * @property {string} VpcId VpcId.
         */
        /**
         * Create a new AWS::EC2::VPCDHCPOptionsAssociation
         * @param {AWS_EC2_VPCDHCPOptionsAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace ServiceCatalog
     */
    ServiceCatalog: {
      /**
       * @namespace PortfolioShare
       */
      PortfolioShare: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_PortfolioShare
         * @property {string} AccountId AccountId.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} PortfolioId PortfolioId.
         */
        /**
         * Create a new AWS::ServiceCatalog::PortfolioShare
         * @param {AWS_ServiceCatalog_PortfolioShare} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace TagOptionAssociation
       */
      TagOptionAssociation: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_TagOptionAssociation
         * @property {string} TagOptionId TagOptionId.
         * @property {string} ResourceId ResourceId.
         */
        /**
         * Create a new AWS::ServiceCatalog::TagOptionAssociation
         * @param {AWS_ServiceCatalog_TagOptionAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace LaunchTemplateConstraint
       */
      LaunchTemplateConstraint: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_LaunchTemplateConstraint
         * @property {string} [Description] Description.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} PortfolioId PortfolioId.
         * @property {string} ProductId ProductId.
         * @property {string} Rules Rules.
         */
        /**
         * Create a new AWS::ServiceCatalog::LaunchTemplateConstraint
         * @param {AWS_ServiceCatalog_LaunchTemplateConstraint} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace TagOption
       */
      TagOption: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_TagOption
         * @property {boolean} [Active] Active.
         * @property {string} Value Value.
         * @property {string} Key Key.
         */
        /**
         * Create a new AWS::ServiceCatalog::TagOption
         * @param {AWS_ServiceCatalog_TagOption} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace PortfolioPrincipalAssociation
       */
      PortfolioPrincipalAssociation: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_PortfolioPrincipalAssociation
         * @property {string} PrincipalARN PrincipalARN.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} PortfolioId PortfolioId.
         * @property {string} PrincipalType PrincipalType.
         */
        /**
         * Create a new AWS::ServiceCatalog::PortfolioPrincipalAssociation
         * @param {AWS_ServiceCatalog_PortfolioPrincipalAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace LaunchRoleConstraint
       */
      LaunchRoleConstraint: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_LaunchRoleConstraint
         * @property {string} [Description] Description.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} PortfolioId PortfolioId.
         * @property {string} ProductId ProductId.
         * @property {string} RoleArn RoleArn.
         */
        /**
         * Create a new AWS::ServiceCatalog::LaunchRoleConstraint
         * @param {AWS_ServiceCatalog_LaunchRoleConstraint} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace CloudFormationProvisionedProduct
       */
      CloudFormationProvisionedProduct: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_CloudFormationProvisionedProduct
         * @property {string} [PathId] PathId.
         * @property {AWS_ServiceCatalog_CloudFormationProvisionedProduct_ProvisioningParameter[]} [ProvisioningParameters] ProvisioningParameters.
         * @property {string} [ProductName] ProductName.
         * @property {string} [ProvisioningArtifactName] ProvisioningArtifactName.
         * @property {string[]} [NotificationArns] NotificationArns.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} [ProductId] ProductId.
         * @property {AWS_ServiceCatalog_CloudFormationProvisionedProduct_Tag[]} [Tags] Tags.
         * @property {string} [ProvisionedProductName] ProvisionedProductName.
         * @property {string} [ProvisioningArtifactId] ProvisioningArtifactId.
         */
        /**
         * Create a new AWS::ServiceCatalog::CloudFormationProvisionedProduct
         * @param {AWS_ServiceCatalog_CloudFormationProvisionedProduct} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ServiceCatalog_CloudFormationProvisionedProduct_ProvisioningParameter
         * @property {string} [Value] Value.
         * @property {string} [Key] Key.
         */
        /**
         * @param {AWS_ServiceCatalog_CloudFormationProvisionedProduct_ProvisioningParameter} properties
         * @returns {AWS_ServiceCatalog_CloudFormationProvisionedProduct_ProvisioningParameter}
         */
        static ProvisioningParameter(properties) { return properties; }
      },
      /**
       * @namespace CloudFormationProduct
       */
      CloudFormationProduct: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_CloudFormationProduct
         * @property {string} Owner Owner.
         * @property {string} [SupportDescription] SupportDescription.
         * @property {string} [Description] Description.
         * @property {string} [Distributor] Distributor.
         * @property {string} [SupportEmail] SupportEmail.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} [SupportUrl] SupportUrl.
         * @property {AWS_ServiceCatalog_CloudFormationProduct_Tag[]} [Tags] Tags.
         * @property {string} Name Name.
         * @property {AWS_ServiceCatalog_CloudFormationProduct_ProvisioningArtifactProperties[]} ProvisioningArtifactParameters ProvisioningArtifactParameters.
         */
        /**
         * Create a new AWS::ServiceCatalog::CloudFormationProduct
         * @param {AWS_ServiceCatalog_CloudFormationProduct} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ServiceCatalog_CloudFormationProduct_ProvisioningArtifactProperties
         * @property {string} [Description] Description.
         * @property {string} Info Info.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_ServiceCatalog_CloudFormationProduct_ProvisioningArtifactProperties} properties
         * @returns {AWS_ServiceCatalog_CloudFormationProduct_ProvisioningArtifactProperties}
         */
        static ProvisioningArtifactProperties(properties) { return properties; }
      },
      /**
       * @namespace PortfolioProductAssociation
       */
      PortfolioProductAssociation: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_PortfolioProductAssociation
         * @property {string} [SourcePortfolioId] SourcePortfolioId.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} PortfolioId PortfolioId.
         * @property {string} ProductId ProductId.
         */
        /**
         * Create a new AWS::ServiceCatalog::PortfolioProductAssociation
         * @param {AWS_ServiceCatalog_PortfolioProductAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Portfolio
       */
      Portfolio: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_Portfolio
         * @property {string} ProviderName ProviderName.
         * @property {string} [Description] Description.
         * @property {string} DisplayName DisplayName.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {AWS_ServiceCatalog_Portfolio_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::ServiceCatalog::Portfolio
         * @param {AWS_ServiceCatalog_Portfolio} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace AcceptedPortfolioShare
       */
      AcceptedPortfolioShare: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_AcceptedPortfolioShare
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} PortfolioId PortfolioId.
         */
        /**
         * Create a new AWS::ServiceCatalog::AcceptedPortfolioShare
         * @param {AWS_ServiceCatalog_AcceptedPortfolioShare} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace LaunchNotificationConstraint
       */
      LaunchNotificationConstraint: class {
        /**
         * @typedef {Object} AWS_ServiceCatalog_LaunchNotificationConstraint
         * @property {string} [Description] Description.
         * @property {string[]} NotificationArns NotificationArns.
         * @property {string} [AcceptLanguage] AcceptLanguage.
         * @property {string} PortfolioId PortfolioId.
         * @property {string} ProductId ProductId.
         */
        /**
         * Create a new AWS::ServiceCatalog::LaunchNotificationConstraint
         * @param {AWS_ServiceCatalog_LaunchNotificationConstraint} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Cognito
     */
    Cognito: {
      /**
       * @namespace IdentityPoolRoleAttachment
       */
      IdentityPoolRoleAttachment: class {
        /**
         * @typedef {Object} AWS_Cognito_IdentityPoolRoleAttachment
         * @property {string} [RoleMappings] RoleMappings.
         * @property {string} IdentityPoolId IdentityPoolId.
         * @property {string} [Roles] Roles.
         */
        /**
         * Create a new AWS::Cognito::IdentityPoolRoleAttachment
         * @param {AWS_Cognito_IdentityPoolRoleAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Cognito_IdentityPoolRoleAttachment_RulesConfigurationType
         * @property {AWS_Cognito_IdentityPoolRoleAttachment_MappingRule[]} Rules Rules.
         */
        /**
         * @param {AWS_Cognito_IdentityPoolRoleAttachment_RulesConfigurationType} properties
         * @returns {AWS_Cognito_IdentityPoolRoleAttachment_RulesConfigurationType}
         */
        static RulesConfigurationType(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping
         * @property {string} Type Type.
         * @property {string} [AmbiguousRoleResolution] AmbiguousRoleResolution.
         * @property {AWS_Cognito_IdentityPoolRoleAttachment_RulesConfigurationType} [RulesConfiguration] RulesConfiguration.
         */
        /**
         * @param {AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping} properties
         * @returns {AWS_Cognito_IdentityPoolRoleAttachment_RoleMapping}
         */
        static RoleMapping(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_IdentityPoolRoleAttachment_MappingRule
         * @property {string} MatchType MatchType.
         * @property {string} Value Value.
         * @property {string} Claim Claim.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_Cognito_IdentityPoolRoleAttachment_MappingRule} properties
         * @returns {AWS_Cognito_IdentityPoolRoleAttachment_MappingRule}
         */
        static MappingRule(properties) { return properties; }
      },
      /**
       * @namespace UserPoolGroup
       */
      UserPoolGroup: class {
        /**
         * @typedef {Object} AWS_Cognito_UserPoolGroup
         * @property {string} [GroupName] GroupName.
         * @property {string} [Description] Description.
         * @property {string} UserPoolId UserPoolId.
         * @property {number} [Precedence] Precedence.
         * @property {string} [RoleArn] RoleArn.
         */
        /**
         * Create a new AWS::Cognito::UserPoolGroup
         * @param {AWS_Cognito_UserPoolGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace IdentityPool
       */
      IdentityPool: class {
        /**
         * @typedef {Object} AWS_Cognito_IdentityPool
         * @property {AWS_Cognito_IdentityPool_PushSync} [PushSync] PushSync.
         * @property {AWS_Cognito_IdentityPool_CognitoIdentityProvider[]} [CognitoIdentityProviders] CognitoIdentityProviders.
         * @property {string} [CognitoEvents] CognitoEvents.
         * @property {string} [DeveloperProviderName] DeveloperProviderName.
         * @property {AWS_Cognito_IdentityPool_CognitoStreams} [CognitoStreams] CognitoStreams.
         * @property {string} [IdentityPoolName] IdentityPoolName.
         * @property {boolean} AllowUnauthenticatedIdentities AllowUnauthenticatedIdentities.
         * @property {string} [SupportedLoginProviders] SupportedLoginProviders.
         * @property {string[]} [SamlProviderARNs] SamlProviderARNs.
         * @property {string[]} [OpenIdConnectProviderARNs] OpenIdConnectProviderARNs.
         */
        /**
         * Create a new AWS::Cognito::IdentityPool
         * @param {AWS_Cognito_IdentityPool} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Cognito_IdentityPool_PushSync
         * @property {string[]} [ApplicationArns] ApplicationArns.
         * @property {string} [RoleArn] RoleArn.
         */
        /**
         * @param {AWS_Cognito_IdentityPool_PushSync} properties
         * @returns {AWS_Cognito_IdentityPool_PushSync}
         */
        static PushSync(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_IdentityPool_CognitoIdentityProvider
         * @property {boolean} [ServerSideTokenCheck] ServerSideTokenCheck.
         * @property {string} [ProviderName] ProviderName.
         * @property {string} [ClientId] ClientId.
         */
        /**
         * @param {AWS_Cognito_IdentityPool_CognitoIdentityProvider} properties
         * @returns {AWS_Cognito_IdentityPool_CognitoIdentityProvider}
         */
        static CognitoIdentityProvider(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_IdentityPool_CognitoStreams
         * @property {string} [StreamingStatus] StreamingStatus.
         * @property {string} [StreamName] StreamName.
         * @property {string} [RoleArn] RoleArn.
         */
        /**
         * @param {AWS_Cognito_IdentityPool_CognitoStreams} properties
         * @returns {AWS_Cognito_IdentityPool_CognitoStreams}
         */
        static CognitoStreams(properties) { return properties; }
      },
      /**
       * @namespace UserPoolUser
       */
      UserPoolUser: class {
        /**
         * @typedef {Object} AWS_Cognito_UserPoolUser
         * @property {AWS_Cognito_UserPoolUser_AttributeType[]} [ValidationData] ValidationData.
         * @property {string} UserPoolId UserPoolId.
         * @property {string} [Username] Username.
         * @property {string} [MessageAction] MessageAction.
         * @property {string[]} [DesiredDeliveryMediums] DesiredDeliveryMediums.
         * @property {boolean} [ForceAliasCreation] ForceAliasCreation.
         * @property {AWS_Cognito_UserPoolUser_AttributeType[]} [UserAttributes] UserAttributes.
         */
        /**
         * Create a new AWS::Cognito::UserPoolUser
         * @param {AWS_Cognito_UserPoolUser} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Cognito_UserPoolUser_AttributeType
         * @property {string} [Value] Value.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Cognito_UserPoolUser_AttributeType} properties
         * @returns {AWS_Cognito_UserPoolUser_AttributeType}
         */
        static AttributeType(properties) { return properties; }
      },
      /**
       * @namespace UserPool
       */
      UserPool: class {
        /**
         * @typedef {Object} AWS_Cognito_UserPool
         * @property {string} [UserPoolTags] UserPoolTags.
         * @property {AWS_Cognito_UserPool_Policies} [Policies] Policies.
         * @property {string} [MfaConfiguration] MfaConfiguration.
         * @property {AWS_Cognito_UserPool_SchemaAttribute[]} [Schema] Schema.
         * @property {AWS_Cognito_UserPool_AdminCreateUserConfig} [AdminCreateUserConfig] AdminCreateUserConfig.
         * @property {string} [SmsAuthenticationMessage] SmsAuthenticationMessage.
         * @property {string} [UserPoolName] UserPoolName.
         * @property {string} [SmsVerificationMessage] SmsVerificationMessage.
         * @property {AWS_Cognito_UserPool_EmailConfiguration} [EmailConfiguration] EmailConfiguration.
         * @property {AWS_Cognito_UserPool_SmsConfiguration} [SmsConfiguration] SmsConfiguration.
         * @property {string[]} [AliasAttributes] AliasAttributes.
         * @property {string} [EmailVerificationSubject] EmailVerificationSubject.
         * @property {AWS_Cognito_UserPool_LambdaConfig} [LambdaConfig] LambdaConfig.
         * @property {string[]} [UsernameAttributes] UsernameAttributes.
         * @property {string[]} [AutoVerifiedAttributes] AutoVerifiedAttributes.
         * @property {AWS_Cognito_UserPool_DeviceConfiguration} [DeviceConfiguration] DeviceConfiguration.
         * @property {string} [EmailVerificationMessage] EmailVerificationMessage.
         */
        /**
         * Create a new AWS::Cognito::UserPool
         * @param {AWS_Cognito_UserPool} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_PasswordPolicy
         * @property {boolean} [RequireNumbers] RequireNumbers.
         * @property {number} [MinimumLength] MinimumLength.
         * @property {boolean} [RequireUppercase] RequireUppercase.
         * @property {boolean} [RequireLowercase] RequireLowercase.
         * @property {boolean} [RequireSymbols] RequireSymbols.
         */
        /**
         * @param {AWS_Cognito_UserPool_PasswordPolicy} properties
         * @returns {AWS_Cognito_UserPool_PasswordPolicy}
         */
        static PasswordPolicy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_Policies
         * @property {AWS_Cognito_UserPool_PasswordPolicy} [PasswordPolicy] PasswordPolicy.
         */
        /**
         * @param {AWS_Cognito_UserPool_Policies} properties
         * @returns {AWS_Cognito_UserPool_Policies}
         */
        static Policies(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_EmailConfiguration
         * @property {string} [ReplyToEmailAddress] ReplyToEmailAddress.
         * @property {string} [SourceArn] SourceArn.
         */
        /**
         * @param {AWS_Cognito_UserPool_EmailConfiguration} properties
         * @returns {AWS_Cognito_UserPool_EmailConfiguration}
         */
        static EmailConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_LambdaConfig
         * @property {string} [CreateAuthChallenge] CreateAuthChallenge.
         * @property {string} [PreAuthentication] PreAuthentication.
         * @property {string} [DefineAuthChallenge] DefineAuthChallenge.
         * @property {string} [PreSignUp] PreSignUp.
         * @property {string} [PostAuthentication] PostAuthentication.
         * @property {string} [PostConfirmation] PostConfirmation.
         * @property {string} [CustomMessage] CustomMessage.
         * @property {string} [VerifyAuthChallengeResponse] VerifyAuthChallengeResponse.
         */
        /**
         * @param {AWS_Cognito_UserPool_LambdaConfig} properties
         * @returns {AWS_Cognito_UserPool_LambdaConfig}
         */
        static LambdaConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_AdminCreateUserConfig
         * @property {AWS_Cognito_UserPool_InviteMessageTemplate} [InviteMessageTemplate] InviteMessageTemplate.
         * @property {number} [UnusedAccountValidityDays] UnusedAccountValidityDays.
         * @property {boolean} [AllowAdminCreateUserOnly] AllowAdminCreateUserOnly.
         */
        /**
         * @param {AWS_Cognito_UserPool_AdminCreateUserConfig} properties
         * @returns {AWS_Cognito_UserPool_AdminCreateUserConfig}
         */
        static AdminCreateUserConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_SchemaAttribute
         * @property {boolean} [DeveloperOnlyAttribute] DeveloperOnlyAttribute.
         * @property {boolean} [Mutable] Mutable.
         * @property {string} [AttributeDataType] AttributeDataType.
         * @property {AWS_Cognito_UserPool_StringAttributeConstraints} [StringAttributeConstraints] StringAttributeConstraints.
         * @property {boolean} [Required] Required.
         * @property {AWS_Cognito_UserPool_NumberAttributeConstraints} [NumberAttributeConstraints] NumberAttributeConstraints.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Cognito_UserPool_SchemaAttribute} properties
         * @returns {AWS_Cognito_UserPool_SchemaAttribute}
         */
        static SchemaAttribute(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_NumberAttributeConstraints
         * @property {string} [MinValue] MinValue.
         * @property {string} [MaxValue] MaxValue.
         */
        /**
         * @param {AWS_Cognito_UserPool_NumberAttributeConstraints} properties
         * @returns {AWS_Cognito_UserPool_NumberAttributeConstraints}
         */
        static NumberAttributeConstraints(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_SmsConfiguration
         * @property {string} [ExternalId] ExternalId.
         * @property {string} [SnsCallerArn] SnsCallerArn.
         */
        /**
         * @param {AWS_Cognito_UserPool_SmsConfiguration} properties
         * @returns {AWS_Cognito_UserPool_SmsConfiguration}
         */
        static SmsConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_DeviceConfiguration
         * @property {boolean} [DeviceOnlyRememberedOnUserPrompt] DeviceOnlyRememberedOnUserPrompt.
         * @property {boolean} [ChallengeRequiredOnNewDevice] ChallengeRequiredOnNewDevice.
         */
        /**
         * @param {AWS_Cognito_UserPool_DeviceConfiguration} properties
         * @returns {AWS_Cognito_UserPool_DeviceConfiguration}
         */
        static DeviceConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_InviteMessageTemplate
         * @property {string} [EmailMessage] EmailMessage.
         * @property {string} [SMSMessage] SMSMessage.
         * @property {string} [EmailSubject] EmailSubject.
         */
        /**
         * @param {AWS_Cognito_UserPool_InviteMessageTemplate} properties
         * @returns {AWS_Cognito_UserPool_InviteMessageTemplate}
         */
        static InviteMessageTemplate(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Cognito_UserPool_StringAttributeConstraints
         * @property {string} [MinLength] MinLength.
         * @property {string} [MaxLength] MaxLength.
         */
        /**
         * @param {AWS_Cognito_UserPool_StringAttributeConstraints} properties
         * @returns {AWS_Cognito_UserPool_StringAttributeConstraints}
         */
        static StringAttributeConstraints(properties) { return properties; }
      },
      /**
       * @namespace UserPoolClient
       */
      UserPoolClient: class {
        /**
         * @typedef {Object} AWS_Cognito_UserPoolClient
         * @property {boolean} [GenerateSecret] GenerateSecret.
         * @property {string} [ClientName] ClientName.
         * @property {string} UserPoolId UserPoolId.
         * @property {string[]} [ExplicitAuthFlows] ExplicitAuthFlows.
         * @property {number} [RefreshTokenValidity] RefreshTokenValidity.
         * @property {string[]} [ReadAttributes] ReadAttributes.
         * @property {string[]} [WriteAttributes] WriteAttributes.
         */
        /**
         * Create a new AWS::Cognito::UserPoolClient
         * @param {AWS_Cognito_UserPoolClient} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace UserPoolUserToGroupAttachment
       */
      UserPoolUserToGroupAttachment: class {
        /**
         * @typedef {Object} AWS_Cognito_UserPoolUserToGroupAttachment
         * @property {string} GroupName GroupName.
         * @property {string} UserPoolId UserPoolId.
         * @property {string} Username Username.
         */
        /**
         * Create a new AWS::Cognito::UserPoolUserToGroupAttachment
         * @param {AWS_Cognito_UserPoolUserToGroupAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Events
     */
    Events: {
      /**
       * @namespace Rule
       */
      Rule: class {
        /**
         * @typedef {Object} AWS_Events_Rule
         * @property {string} [Description] Description.
         * @property {string} [EventPattern] EventPattern.
         * @property {string} [Name] Name.
         * @property {string} [RoleArn] RoleArn.
         * @property {string} [ScheduleExpression] ScheduleExpression.
         * @property {string} [State] State.
         * @property {AWS_Events_Rule_Target[]} [Targets] Targets.
         */
        /**
         * Create a new AWS::Events::Rule
         * @param {AWS_Events_Rule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Events_Rule_SqsParameters
         * @property {string} MessageGroupId MessageGroupId.
         */
        /**
         * @param {AWS_Events_Rule_SqsParameters} properties
         * @returns {AWS_Events_Rule_SqsParameters}
         */
        static SqsParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Events_Rule_RunCommandParameters
         * @property {AWS_Events_Rule_RunCommandTarget[]} RunCommandTargets RunCommandTargets.
         */
        /**
         * @param {AWS_Events_Rule_RunCommandParameters} properties
         * @returns {AWS_Events_Rule_RunCommandParameters}
         */
        static RunCommandParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Events_Rule_Target
         * @property {string} Arn Arn.
         * @property {AWS_Events_Rule_EcsParameters} [EcsParameters] EcsParameters.
         * @property {string} Id Id.
         * @property {string} [Input] Input.
         * @property {string} [InputPath] InputPath.
         * @property {AWS_Events_Rule_InputTransformer} [InputTransformer] InputTransformer.
         * @property {AWS_Events_Rule_KinesisParameters} [KinesisParameters] KinesisParameters.
         * @property {string} [RoleArn] RoleArn.
         * @property {AWS_Events_Rule_RunCommandParameters} [RunCommandParameters] RunCommandParameters.
         * @property {AWS_Events_Rule_SqsParameters} [SqsParameters] SqsParameters.
         */
        /**
         * @param {AWS_Events_Rule_Target} properties
         * @returns {AWS_Events_Rule_Target}
         */
        static Target(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Events_Rule_RunCommandTarget
         * @property {string} Key Key.
         * @property {string[]} Values Values.
         */
        /**
         * @param {AWS_Events_Rule_RunCommandTarget} properties
         * @returns {AWS_Events_Rule_RunCommandTarget}
         */
        static RunCommandTarget(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Events_Rule_InputTransformer
         * @property {AWS_Events_Rule_Map} [InputPathsMap] InputPathsMap.
         * @property {string} InputTemplate InputTemplate.
         */
        /**
         * @param {AWS_Events_Rule_InputTransformer} properties
         * @returns {AWS_Events_Rule_InputTransformer}
         */
        static InputTransformer(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Events_Rule_KinesisParameters
         * @property {string} PartitionKeyPath PartitionKeyPath.
         */
        /**
         * @param {AWS_Events_Rule_KinesisParameters} properties
         * @returns {AWS_Events_Rule_KinesisParameters}
         */
        static KinesisParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Events_Rule_EcsParameters
         * @property {number} [TaskCount] TaskCount.
         * @property {string} TaskDefinitionArn TaskDefinitionArn.
         */
        /**
         * @param {AWS_Events_Rule_EcsParameters} properties
         * @returns {AWS_Events_Rule_EcsParameters}
         */
        static EcsParameters(properties) { return properties; }
      },
      /**
       * @namespace EventBusPolicy
       */
      EventBusPolicy: class {
        /**
         * @typedef {Object} AWS_Events_EventBusPolicy
         * @property {AWS_Events_EventBusPolicy_Condition} [Condition] Condition.
         * @property {string} Action Action.
         * @property {string} StatementId StatementId.
         * @property {string} Principal Principal.
         */
        /**
         * Create a new AWS::Events::EventBusPolicy
         * @param {AWS_Events_EventBusPolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Events_EventBusPolicy_Condition
         * @property {string} [Type] Type.
         * @property {string} [Value] Value.
         * @property {string} [Key] Key.
         */
        /**
         * @param {AWS_Events_EventBusPolicy_Condition} properties
         * @returns {AWS_Events_EventBusPolicy_Condition}
         */
        static Condition(properties) { return properties; }
      }
    },
    /**
     * @namespace WAF
     */
    WAF: {
      /**
       * @namespace IPSet
       */
      IPSet: class {
        /**
         * @typedef {Object} AWS_WAF_IPSet
         * @property {AWS_WAF_IPSet_IPSetDescriptor[]} [IPSetDescriptors] IPSetDescriptors.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAF::IPSet
         * @param {AWS_WAF_IPSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAF_IPSet_IPSetDescriptor
         * @property {string} Type Type.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_WAF_IPSet_IPSetDescriptor} properties
         * @returns {AWS_WAF_IPSet_IPSetDescriptor}
         */
        static IPSetDescriptor(properties) { return properties; }
      },
      /**
       * @namespace SizeConstraintSet
       */
      SizeConstraintSet: class {
        /**
         * @typedef {Object} AWS_WAF_SizeConstraintSet
         * @property {string} Name Name.
         * @property {AWS_WAF_SizeConstraintSet_SizeConstraint[]} SizeConstraints SizeConstraints.
         */
        /**
         * Create a new AWS::WAF::SizeConstraintSet
         * @param {AWS_WAF_SizeConstraintSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAF_SizeConstraintSet_FieldToMatch
         * @property {string} [Data] Data.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_WAF_SizeConstraintSet_FieldToMatch} properties
         * @returns {AWS_WAF_SizeConstraintSet_FieldToMatch}
         */
        static FieldToMatch(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAF_SizeConstraintSet_SizeConstraint
         * @property {string} ComparisonOperator ComparisonOperator.
         * @property {AWS_WAF_SizeConstraintSet_FieldToMatch} FieldToMatch FieldToMatch.
         * @property {number} Size Size.
         * @property {string} TextTransformation TextTransformation.
         */
        /**
         * @param {AWS_WAF_SizeConstraintSet_SizeConstraint} properties
         * @returns {AWS_WAF_SizeConstraintSet_SizeConstraint}
         */
        static SizeConstraint(properties) { return properties; }
      },
      /**
       * @namespace Rule
       */
      Rule: class {
        /**
         * @typedef {Object} AWS_WAF_Rule
         * @property {string} MetricName MetricName.
         * @property {string} Name Name.
         * @property {AWS_WAF_Rule_Predicate[]} [Predicates] Predicates.
         */
        /**
         * Create a new AWS::WAF::Rule
         * @param {AWS_WAF_Rule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAF_Rule_Predicate
         * @property {string} DataId DataId.
         * @property {boolean} Negated Negated.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_WAF_Rule_Predicate} properties
         * @returns {AWS_WAF_Rule_Predicate}
         */
        static Predicate(properties) { return properties; }
      },
      /**
       * @namespace ByteMatchSet
       */
      ByteMatchSet: class {
        /**
         * @typedef {Object} AWS_WAF_ByteMatchSet
         * @property {AWS_WAF_ByteMatchSet_ByteMatchTuple[]} [ByteMatchTuples] ByteMatchTuples.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAF::ByteMatchSet
         * @param {AWS_WAF_ByteMatchSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAF_ByteMatchSet_ByteMatchTuple
         * @property {AWS_WAF_ByteMatchSet_FieldToMatch} FieldToMatch FieldToMatch.
         * @property {string} PositionalConstraint PositionalConstraint.
         * @property {string} [TargetString] TargetString.
         * @property {string} [TargetStringBase64] TargetStringBase64.
         * @property {string} TextTransformation TextTransformation.
         */
        /**
         * @param {AWS_WAF_ByteMatchSet_ByteMatchTuple} properties
         * @returns {AWS_WAF_ByteMatchSet_ByteMatchTuple}
         */
        static ByteMatchTuple(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAF_ByteMatchSet_FieldToMatch
         * @property {string} [Data] Data.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_WAF_ByteMatchSet_FieldToMatch} properties
         * @returns {AWS_WAF_ByteMatchSet_FieldToMatch}
         */
        static FieldToMatch(properties) { return properties; }
      },
      /**
       * @namespace SqlInjectionMatchSet
       */
      SqlInjectionMatchSet: class {
        /**
         * @typedef {Object} AWS_WAF_SqlInjectionMatchSet
         * @property {string} Name Name.
         * @property {AWS_WAF_SqlInjectionMatchSet_SqlInjectionMatchTuple[]} [SqlInjectionMatchTuples] SqlInjectionMatchTuples.
         */
        /**
         * Create a new AWS::WAF::SqlInjectionMatchSet
         * @param {AWS_WAF_SqlInjectionMatchSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAF_SqlInjectionMatchSet_SqlInjectionMatchTuple
         * @property {AWS_WAF_SqlInjectionMatchSet_FieldToMatch} FieldToMatch FieldToMatch.
         * @property {string} TextTransformation TextTransformation.
         */
        /**
         * @param {AWS_WAF_SqlInjectionMatchSet_SqlInjectionMatchTuple} properties
         * @returns {AWS_WAF_SqlInjectionMatchSet_SqlInjectionMatchTuple}
         */
        static SqlInjectionMatchTuple(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAF_SqlInjectionMatchSet_FieldToMatch
         * @property {string} [Data] Data.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_WAF_SqlInjectionMatchSet_FieldToMatch} properties
         * @returns {AWS_WAF_SqlInjectionMatchSet_FieldToMatch}
         */
        static FieldToMatch(properties) { return properties; }
      },
      /**
       * @namespace WebACL
       */
      WebACL: class {
        /**
         * @typedef {Object} AWS_WAF_WebACL
         * @property {AWS_WAF_WebACL_WafAction} DefaultAction DefaultAction.
         * @property {string} MetricName MetricName.
         * @property {string} Name Name.
         * @property {AWS_WAF_WebACL_ActivatedRule[]} [Rules] Rules.
         */
        /**
         * Create a new AWS::WAF::WebACL
         * @param {AWS_WAF_WebACL} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAF_WebACL_WafAction
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_WAF_WebACL_WafAction} properties
         * @returns {AWS_WAF_WebACL_WafAction}
         */
        static WafAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAF_WebACL_ActivatedRule
         * @property {AWS_WAF_WebACL_WafAction} [Action] Action.
         * @property {number} Priority Priority.
         * @property {string} RuleId RuleId.
         */
        /**
         * @param {AWS_WAF_WebACL_ActivatedRule} properties
         * @returns {AWS_WAF_WebACL_ActivatedRule}
         */
        static ActivatedRule(properties) { return properties; }
      },
      /**
       * @namespace XssMatchSet
       */
      XssMatchSet: class {
        /**
         * @typedef {Object} AWS_WAF_XssMatchSet
         * @property {string} Name Name.
         * @property {AWS_WAF_XssMatchSet_XssMatchTuple[]} XssMatchTuples XssMatchTuples.
         */
        /**
         * Create a new AWS::WAF::XssMatchSet
         * @param {AWS_WAF_XssMatchSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAF_XssMatchSet_FieldToMatch
         * @property {string} [Data] Data.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_WAF_XssMatchSet_FieldToMatch} properties
         * @returns {AWS_WAF_XssMatchSet_FieldToMatch}
         */
        static FieldToMatch(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAF_XssMatchSet_XssMatchTuple
         * @property {AWS_WAF_XssMatchSet_FieldToMatch} FieldToMatch FieldToMatch.
         * @property {string} TextTransformation TextTransformation.
         */
        /**
         * @param {AWS_WAF_XssMatchSet_XssMatchTuple} properties
         * @returns {AWS_WAF_XssMatchSet_XssMatchTuple}
         */
        static XssMatchTuple(properties) { return properties; }
      }
    },
    /**
     * @namespace IAM
     */
    IAM: {
      /**
       * @namespace Group
       */
      Group: class {
        /**
         * @typedef {Object} AWS_IAM_Group
         * @property {string} [GroupName] GroupName.
         * @property {string[]} [ManagedPolicyArns] ManagedPolicyArns.
         * @property {string} [Path] Path.
         * @property {AWS_IAM_Group_Policy[]} [Policies] Policies.
         */
        /**
         * Create a new AWS::IAM::Group
         * @param {AWS_IAM_Group} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IAM_Group_Policy
         * @property {string} PolicyDocument PolicyDocument.
         * @property {string} PolicyName PolicyName.
         */
        /**
         * @param {AWS_IAM_Group_Policy} properties
         * @returns {AWS_IAM_Group_Policy}
         */
        static Policy(properties) { return properties; }
      },
      /**
       * @namespace Policy
       */
      Policy: class {
        /**
         * @typedef {Object} AWS_IAM_Policy
         * @property {string[]} [Groups] Groups.
         * @property {string} PolicyDocument PolicyDocument.
         * @property {string} PolicyName PolicyName.
         * @property {string[]} [Roles] Roles.
         * @property {string[]} [Users] Users.
         */
        /**
         * Create a new AWS::IAM::Policy
         * @param {AWS_IAM_Policy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Role
       */
      Role: class {
        /**
         * @typedef {Object} AWS_IAM_Role
         * @property {string} AssumeRolePolicyDocument AssumeRolePolicyDocument.
         * @property {string[]} [ManagedPolicyArns] ManagedPolicyArns.
         * @property {number} [MaxSessionDuration] MaxSessionDuration.
         * @property {string} [Path] Path.
         * @property {string} [PermissionsBoundary] PermissionsBoundary.
         * @property {AWS_IAM_Role_Policy[]} [Policies] Policies.
         * @property {string} [RoleName] RoleName.
         */
        /**
         * Create a new AWS::IAM::Role
         * @param {AWS_IAM_Role} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IAM_Role_Policy
         * @property {string} PolicyDocument PolicyDocument.
         * @property {string} PolicyName PolicyName.
         */
        /**
         * @param {AWS_IAM_Role_Policy} properties
         * @returns {AWS_IAM_Role_Policy}
         */
        static Policy(properties) { return properties; }
      },
      /**
       * @namespace ServiceLinkedRole
       */
      ServiceLinkedRole: class {
        /**
         * @typedef {Object} AWS_IAM_ServiceLinkedRole
         * @property {string} [CustomSuffix] CustomSuffix.
         * @property {string} [Description] Description.
         * @property {string} AWSServiceName AWSServiceName.
         */
        /**
         * Create a new AWS::IAM::ServiceLinkedRole
         * @param {AWS_IAM_ServiceLinkedRole} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace UserToGroupAddition
       */
      UserToGroupAddition: class {
        /**
         * @typedef {Object} AWS_IAM_UserToGroupAddition
         * @property {string} GroupName GroupName.
         * @property {string[]} Users Users.
         */
        /**
         * Create a new AWS::IAM::UserToGroupAddition
         * @param {AWS_IAM_UserToGroupAddition} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace InstanceProfile
       */
      InstanceProfile: class {
        /**
         * @typedef {Object} AWS_IAM_InstanceProfile
         * @property {string} [InstanceProfileName] InstanceProfileName.
         * @property {string} [Path] Path.
         * @property {string[]} Roles Roles.
         */
        /**
         * Create a new AWS::IAM::InstanceProfile
         * @param {AWS_IAM_InstanceProfile} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace AccessKey
       */
      AccessKey: class {
        /**
         * @typedef {Object} AWS_IAM_AccessKey
         * @property {number} [Serial] Serial.
         * @property {string} [Status] Status.
         * @property {string} UserName UserName.
         */
        /**
         * Create a new AWS::IAM::AccessKey
         * @param {AWS_IAM_AccessKey} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace User
       */
      User: class {
        /**
         * @typedef {Object} AWS_IAM_User
         * @property {string[]} [Groups] Groups.
         * @property {AWS_IAM_User_LoginProfile} [LoginProfile] LoginProfile.
         * @property {string[]} [ManagedPolicyArns] ManagedPolicyArns.
         * @property {string} [Path] Path.
         * @property {string} [PermissionsBoundary] PermissionsBoundary.
         * @property {AWS_IAM_User_Policy[]} [Policies] Policies.
         * @property {string} [UserName] UserName.
         */
        /**
         * Create a new AWS::IAM::User
         * @param {AWS_IAM_User} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IAM_User_LoginProfile
         * @property {string} Password Password.
         * @property {boolean} [PasswordResetRequired] PasswordResetRequired.
         */
        /**
         * @param {AWS_IAM_User_LoginProfile} properties
         * @returns {AWS_IAM_User_LoginProfile}
         */
        static LoginProfile(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IAM_User_Policy
         * @property {string} PolicyDocument PolicyDocument.
         * @property {string} PolicyName PolicyName.
         */
        /**
         * @param {AWS_IAM_User_Policy} properties
         * @returns {AWS_IAM_User_Policy}
         */
        static Policy(properties) { return properties; }
      },
      /**
       * @namespace ManagedPolicy
       */
      ManagedPolicy: class {
        /**
         * @typedef {Object} AWS_IAM_ManagedPolicy
         * @property {string} [Description] Description.
         * @property {string[]} [Groups] Groups.
         * @property {string} [ManagedPolicyName] ManagedPolicyName.
         * @property {string} [Path] Path.
         * @property {string} PolicyDocument PolicyDocument.
         * @property {string[]} [Roles] Roles.
         * @property {string[]} [Users] Users.
         */
        /**
         * Create a new AWS::IAM::ManagedPolicy
         * @param {AWS_IAM_ManagedPolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace CodePipeline
     */
    CodePipeline: {
      /**
       * @namespace CustomActionType
       */
      CustomActionType: class {
        /**
         * @typedef {Object} AWS_CodePipeline_CustomActionType
         * @property {string} Category Category.
         * @property {AWS_CodePipeline_CustomActionType_ConfigurationProperties[]} [ConfigurationProperties] ConfigurationProperties.
         * @property {AWS_CodePipeline_CustomActionType_ArtifactDetails} InputArtifactDetails InputArtifactDetails.
         * @property {AWS_CodePipeline_CustomActionType_ArtifactDetails} OutputArtifactDetails OutputArtifactDetails.
         * @property {string} Provider Provider.
         * @property {AWS_CodePipeline_CustomActionType_Settings} [Settings] Settings.
         * @property {string} [Version] Version.
         */
        /**
         * Create a new AWS::CodePipeline::CustomActionType
         * @param {AWS_CodePipeline_CustomActionType} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CodePipeline_CustomActionType_Settings
         * @property {string} [EntityUrlTemplate] EntityUrlTemplate.
         * @property {string} [ExecutionUrlTemplate] ExecutionUrlTemplate.
         * @property {string} [RevisionUrlTemplate] RevisionUrlTemplate.
         * @property {string} [ThirdPartyConfigurationUrl] ThirdPartyConfigurationUrl.
         */
        /**
         * @param {AWS_CodePipeline_CustomActionType_Settings} properties
         * @returns {AWS_CodePipeline_CustomActionType_Settings}
         */
        static Settings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_CustomActionType_ArtifactDetails
         * @property {number} MaximumCount MaximumCount.
         * @property {number} MinimumCount MinimumCount.
         */
        /**
         * @param {AWS_CodePipeline_CustomActionType_ArtifactDetails} properties
         * @returns {AWS_CodePipeline_CustomActionType_ArtifactDetails}
         */
        static ArtifactDetails(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_CustomActionType_ConfigurationProperties
         * @property {string} [Description] Description.
         * @property {boolean} Key Key.
         * @property {string} Name Name.
         * @property {boolean} [Queryable] Queryable.
         * @property {boolean} Required Required.
         * @property {boolean} Secret Secret.
         * @property {string} [Type] Type.
         */
        /**
         * @param {AWS_CodePipeline_CustomActionType_ConfigurationProperties} properties
         * @returns {AWS_CodePipeline_CustomActionType_ConfigurationProperties}
         */
        static ConfigurationProperties(properties) { return properties; }
      },
      /**
       * @namespace Webhook
       */
      Webhook: class {
        /**
         * @typedef {Object} AWS_CodePipeline_Webhook
         * @property {AWS_CodePipeline_Webhook_WebhookAuthConfiguration} AuthenticationConfiguration AuthenticationConfiguration.
         * @property {AWS_CodePipeline_Webhook_WebhookFilterRule[]} Filters Filters.
         * @property {string} Authentication Authentication.
         * @property {string} TargetPipeline TargetPipeline.
         * @property {string} TargetAction TargetAction.
         * @property {string} [Name] Name.
         * @property {number} TargetPipelineVersion TargetPipelineVersion.
         * @property {boolean} [RegisterWithThirdParty] RegisterWithThirdParty.
         */
        /**
         * Create a new AWS::CodePipeline::Webhook
         * @param {AWS_CodePipeline_Webhook} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CodePipeline_Webhook_WebhookFilterRule
         * @property {string} JsonPath JsonPath.
         * @property {string} [MatchEquals] MatchEquals.
         */
        /**
         * @param {AWS_CodePipeline_Webhook_WebhookFilterRule} properties
         * @returns {AWS_CodePipeline_Webhook_WebhookFilterRule}
         */
        static WebhookFilterRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Webhook_WebhookAuthConfiguration
         * @property {string} [AllowedIPRange] AllowedIPRange.
         * @property {string} [SecretToken] SecretToken.
         */
        /**
         * @param {AWS_CodePipeline_Webhook_WebhookAuthConfiguration} properties
         * @returns {AWS_CodePipeline_Webhook_WebhookAuthConfiguration}
         */
        static WebhookAuthConfiguration(properties) { return properties; }
      },
      /**
       * @namespace Pipeline
       */
      Pipeline: class {
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline
         * @property {AWS_CodePipeline_Pipeline_ArtifactStore} [ArtifactStore] ArtifactStore.
         * @property {AWS_CodePipeline_Pipeline_ArtifactStoreMap[]} [ArtifactStores] ArtifactStores.
         * @property {AWS_CodePipeline_Pipeline_StageTransition[]} [DisableInboundStageTransitions] DisableInboundStageTransitions.
         * @property {string} [Name] Name.
         * @property {boolean} [RestartExecutionOnUpdate] RestartExecutionOnUpdate.
         * @property {string} RoleArn RoleArn.
         * @property {AWS_CodePipeline_Pipeline_StageDeclaration[]} Stages Stages.
         */
        /**
         * Create a new AWS::CodePipeline::Pipeline
         * @param {AWS_CodePipeline_Pipeline} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_InputArtifact
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_InputArtifact} properties
         * @returns {AWS_CodePipeline_Pipeline_InputArtifact}
         */
        static InputArtifact(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_ActionDeclaration
         * @property {AWS_CodePipeline_Pipeline_ActionTypeId} ActionTypeId ActionTypeId.
         * @property {string} [Configuration] Configuration.
         * @property {AWS_CodePipeline_Pipeline_InputArtifact[]} [InputArtifacts] InputArtifacts.
         * @property {string} Name Name.
         * @property {AWS_CodePipeline_Pipeline_OutputArtifact[]} [OutputArtifacts] OutputArtifacts.
         * @property {string} [Region] Region.
         * @property {string} [RoleArn] RoleArn.
         * @property {number} [RunOrder] RunOrder.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_ActionDeclaration} properties
         * @returns {AWS_CodePipeline_Pipeline_ActionDeclaration}
         */
        static ActionDeclaration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_StageDeclaration
         * @property {AWS_CodePipeline_Pipeline_ActionDeclaration[]} Actions Actions.
         * @property {AWS_CodePipeline_Pipeline_BlockerDeclaration[]} [Blockers] Blockers.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_StageDeclaration} properties
         * @returns {AWS_CodePipeline_Pipeline_StageDeclaration}
         */
        static StageDeclaration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_BlockerDeclaration
         * @property {string} Name Name.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_BlockerDeclaration} properties
         * @returns {AWS_CodePipeline_Pipeline_BlockerDeclaration}
         */
        static BlockerDeclaration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_ArtifactStoreMap
         * @property {AWS_CodePipeline_Pipeline_ArtifactStore} ArtifactStore ArtifactStore.
         * @property {string} Region Region.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_ArtifactStoreMap} properties
         * @returns {AWS_CodePipeline_Pipeline_ArtifactStoreMap}
         */
        static ArtifactStoreMap(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_StageTransition
         * @property {string} Reason Reason.
         * @property {string} StageName StageName.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_StageTransition} properties
         * @returns {AWS_CodePipeline_Pipeline_StageTransition}
         */
        static StageTransition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_ArtifactStore
         * @property {AWS_CodePipeline_Pipeline_EncryptionKey} [EncryptionKey] EncryptionKey.
         * @property {string} Location Location.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_ArtifactStore} properties
         * @returns {AWS_CodePipeline_Pipeline_ArtifactStore}
         */
        static ArtifactStore(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_ActionTypeId
         * @property {string} Category Category.
         * @property {string} Owner Owner.
         * @property {string} Provider Provider.
         * @property {string} Version Version.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_ActionTypeId} properties
         * @returns {AWS_CodePipeline_Pipeline_ActionTypeId}
         */
        static ActionTypeId(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_OutputArtifact
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_OutputArtifact} properties
         * @returns {AWS_CodePipeline_Pipeline_OutputArtifact}
         */
        static OutputArtifact(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodePipeline_Pipeline_EncryptionKey
         * @property {string} Id Id.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_CodePipeline_Pipeline_EncryptionKey} properties
         * @returns {AWS_CodePipeline_Pipeline_EncryptionKey}
         */
        static EncryptionKey(properties) { return properties; }
      }
    },
    /**
     * @namespace Elasticsearch
     */
    Elasticsearch: {
      /**
       * @namespace Domain
       */
      Domain: class {
        /**
         * @typedef {Object} AWS_Elasticsearch_Domain
         * @property {string} [AccessPolicies] AccessPolicies.
         * @property {AWS_Elasticsearch_Domain_Map} [AdvancedOptions] AdvancedOptions.
         * @property {string} [DomainName] DomainName.
         * @property {AWS_Elasticsearch_Domain_EBSOptions} [EBSOptions] EBSOptions.
         * @property {AWS_Elasticsearch_Domain_ElasticsearchClusterConfig} [ElasticsearchClusterConfig] ElasticsearchClusterConfig.
         * @property {string} [ElasticsearchVersion] ElasticsearchVersion.
         * @property {AWS_Elasticsearch_Domain_EncryptionAtRestOptions} [EncryptionAtRestOptions] EncryptionAtRestOptions.
         * @property {AWS_Elasticsearch_Domain_NodeToNodeEncryptionOptions} [NodeToNodeEncryptionOptions] NodeToNodeEncryptionOptions.
         * @property {AWS_Elasticsearch_Domain_SnapshotOptions} [SnapshotOptions] SnapshotOptions.
         * @property {AWS_Elasticsearch_Domain_Tag[]} [Tags] Tags.
         * @property {AWS_Elasticsearch_Domain_VPCOptions} [VPCOptions] VPCOptions.
         */
        /**
         * Create a new AWS::Elasticsearch::Domain
         * @param {AWS_Elasticsearch_Domain} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Elasticsearch_Domain_VPCOptions
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string[]} [SubnetIds] SubnetIds.
         */
        /**
         * @param {AWS_Elasticsearch_Domain_VPCOptions} properties
         * @returns {AWS_Elasticsearch_Domain_VPCOptions}
         */
        static VPCOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Elasticsearch_Domain_NodeToNodeEncryptionOptions
         * @property {boolean} [Enabled] Enabled.
         */
        /**
         * @param {AWS_Elasticsearch_Domain_NodeToNodeEncryptionOptions} properties
         * @returns {AWS_Elasticsearch_Domain_NodeToNodeEncryptionOptions}
         */
        static NodeToNodeEncryptionOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Elasticsearch_Domain_ElasticsearchClusterConfig
         * @property {number} [DedicatedMasterCount] DedicatedMasterCount.
         * @property {boolean} [DedicatedMasterEnabled] DedicatedMasterEnabled.
         * @property {string} [DedicatedMasterType] DedicatedMasterType.
         * @property {number} [InstanceCount] InstanceCount.
         * @property {string} [InstanceType] InstanceType.
         * @property {boolean} [ZoneAwarenessEnabled] ZoneAwarenessEnabled.
         */
        /**
         * @param {AWS_Elasticsearch_Domain_ElasticsearchClusterConfig} properties
         * @returns {AWS_Elasticsearch_Domain_ElasticsearchClusterConfig}
         */
        static ElasticsearchClusterConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Elasticsearch_Domain_SnapshotOptions
         * @property {number} [AutomatedSnapshotStartHour] AutomatedSnapshotStartHour.
         */
        /**
         * @param {AWS_Elasticsearch_Domain_SnapshotOptions} properties
         * @returns {AWS_Elasticsearch_Domain_SnapshotOptions}
         */
        static SnapshotOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Elasticsearch_Domain_EBSOptions
         * @property {boolean} [EBSEnabled] EBSEnabled.
         * @property {number} [Iops] Iops.
         * @property {number} [VolumeSize] VolumeSize.
         * @property {string} [VolumeType] VolumeType.
         */
        /**
         * @param {AWS_Elasticsearch_Domain_EBSOptions} properties
         * @returns {AWS_Elasticsearch_Domain_EBSOptions}
         */
        static EBSOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Elasticsearch_Domain_EncryptionAtRestOptions
         * @property {boolean} [Enabled] Enabled.
         * @property {string} [KmsKeyId] KmsKeyId.
         */
        /**
         * @param {AWS_Elasticsearch_Domain_EncryptionAtRestOptions} properties
         * @returns {AWS_Elasticsearch_Domain_EncryptionAtRestOptions}
         */
        static EncryptionAtRestOptions(properties) { return properties; }
      }
    },
    /**
     * @namespace ApiGateway
     */
    ApiGateway: {
      /**
       * @namespace RequestValidator
       */
      RequestValidator: class {
        /**
         * @typedef {Object} AWS_ApiGateway_RequestValidator
         * @property {string} [Name] Name.
         * @property {string} RestApiId RestApiId.
         * @property {boolean} [ValidateRequestBody] ValidateRequestBody.
         * @property {boolean} [ValidateRequestParameters] ValidateRequestParameters.
         */
        /**
         * Create a new AWS::ApiGateway::RequestValidator
         * @param {AWS_ApiGateway_RequestValidator} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Deployment
       */
      Deployment: class {
        /**
         * @typedef {Object} AWS_ApiGateway_Deployment
         * @property {AWS_ApiGateway_Deployment_DeploymentCanarySettings} [DeploymentCanarySettings] DeploymentCanarySettings.
         * @property {string} [Description] Description.
         * @property {string} RestApiId RestApiId.
         * @property {AWS_ApiGateway_Deployment_StageDescription} [StageDescription] StageDescription.
         * @property {string} [StageName] StageName.
         */
        /**
         * Create a new AWS::ApiGateway::Deployment
         * @param {AWS_ApiGateway_Deployment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGateway_Deployment_DeploymentCanarySettings
         * @property {number} [PercentTraffic] PercentTraffic.
         * @property {AWS_ApiGateway_Deployment_Map} [StageVariableOverrides] StageVariableOverrides.
         * @property {boolean} [UseStageCache] UseStageCache.
         */
        /**
         * @param {AWS_ApiGateway_Deployment_DeploymentCanarySettings} properties
         * @returns {AWS_ApiGateway_Deployment_DeploymentCanarySettings}
         */
        static DeploymentCanarySettings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_Deployment_MethodSetting
         * @property {boolean} [CacheDataEncrypted] CacheDataEncrypted.
         * @property {number} [CacheTtlInSeconds] CacheTtlInSeconds.
         * @property {boolean} [CachingEnabled] CachingEnabled.
         * @property {boolean} [DataTraceEnabled] DataTraceEnabled.
         * @property {string} [HttpMethod] HttpMethod.
         * @property {string} [LoggingLevel] LoggingLevel.
         * @property {boolean} [MetricsEnabled] MetricsEnabled.
         * @property {string} [ResourcePath] ResourcePath.
         * @property {number} [ThrottlingBurstLimit] ThrottlingBurstLimit.
         * @property {number} [ThrottlingRateLimit] ThrottlingRateLimit.
         */
        /**
         * @param {AWS_ApiGateway_Deployment_MethodSetting} properties
         * @returns {AWS_ApiGateway_Deployment_MethodSetting}
         */
        static MethodSetting(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_Deployment_StageDescription
         * @property {AWS_ApiGateway_Deployment_AccessLogSetting} [AccessLogSetting] AccessLogSetting.
         * @property {boolean} [CacheClusterEnabled] CacheClusterEnabled.
         * @property {string} [CacheClusterSize] CacheClusterSize.
         * @property {boolean} [CacheDataEncrypted] CacheDataEncrypted.
         * @property {number} [CacheTtlInSeconds] CacheTtlInSeconds.
         * @property {boolean} [CachingEnabled] CachingEnabled.
         * @property {AWS_ApiGateway_Deployment_CanarySetting} [CanarySetting] CanarySetting.
         * @property {string} [ClientCertificateId] ClientCertificateId.
         * @property {boolean} [DataTraceEnabled] DataTraceEnabled.
         * @property {string} [Description] Description.
         * @property {string} [DocumentationVersion] DocumentationVersion.
         * @property {string} [LoggingLevel] LoggingLevel.
         * @property {AWS_ApiGateway_Deployment_MethodSetting[]} [MethodSettings] MethodSettings.
         * @property {boolean} [MetricsEnabled] MetricsEnabled.
         * @property {AWS_ApiGateway_Deployment_Tag[]} [Tags] Tags.
         * @property {number} [ThrottlingBurstLimit] ThrottlingBurstLimit.
         * @property {number} [ThrottlingRateLimit] ThrottlingRateLimit.
         * @property {boolean} [TracingEnabled] TracingEnabled.
         * @property {AWS_ApiGateway_Deployment_Map} [Variables] Variables.
         */
        /**
         * @param {AWS_ApiGateway_Deployment_StageDescription} properties
         * @returns {AWS_ApiGateway_Deployment_StageDescription}
         */
        static StageDescription(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_Deployment_CanarySetting
         * @property {number} [PercentTraffic] PercentTraffic.
         * @property {AWS_ApiGateway_Deployment_Map} [StageVariableOverrides] StageVariableOverrides.
         * @property {boolean} [UseStageCache] UseStageCache.
         */
        /**
         * @param {AWS_ApiGateway_Deployment_CanarySetting} properties
         * @returns {AWS_ApiGateway_Deployment_CanarySetting}
         */
        static CanarySetting(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_Deployment_AccessLogSetting
         * @property {string} [DestinationArn] DestinationArn.
         * @property {string} [Format] Format.
         */
        /**
         * @param {AWS_ApiGateway_Deployment_AccessLogSetting} properties
         * @returns {AWS_ApiGateway_Deployment_AccessLogSetting}
         */
        static AccessLogSetting(properties) { return properties; }
      },
      /**
       * @namespace Authorizer
       */
      Authorizer: class {
        /**
         * @typedef {Object} AWS_ApiGateway_Authorizer
         * @property {string} [AuthType] AuthType.
         * @property {string} [AuthorizerCredentials] AuthorizerCredentials.
         * @property {number} [AuthorizerResultTtlInSeconds] AuthorizerResultTtlInSeconds.
         * @property {string} [AuthorizerUri] AuthorizerUri.
         * @property {string} [IdentitySource] IdentitySource.
         * @property {string} [IdentityValidationExpression] IdentityValidationExpression.
         * @property {string} [Name] Name.
         * @property {string[]} [ProviderARNs] ProviderARNs.
         * @property {string} RestApiId RestApiId.
         * @property {string} Type Type.
         */
        /**
         * Create a new AWS::ApiGateway::Authorizer
         * @param {AWS_ApiGateway_Authorizer} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DomainName
       */
      DomainName: class {
        /**
         * @typedef {Object} AWS_ApiGateway_DomainName
         * @property {string} [CertificateArn] CertificateArn.
         * @property {string} DomainName DomainName.
         * @property {AWS_ApiGateway_DomainName_EndpointConfiguration} [EndpointConfiguration] EndpointConfiguration.
         * @property {string} [RegionalCertificateArn] RegionalCertificateArn.
         */
        /**
         * Create a new AWS::ApiGateway::DomainName
         * @param {AWS_ApiGateway_DomainName} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGateway_DomainName_EndpointConfiguration
         * @property {string[]} [Types] Types.
         */
        /**
         * @param {AWS_ApiGateway_DomainName_EndpointConfiguration} properties
         * @returns {AWS_ApiGateway_DomainName_EndpointConfiguration}
         */
        static EndpointConfiguration(properties) { return properties; }
      },
      /**
       * @namespace DocumentationPart
       */
      DocumentationPart: class {
        /**
         * @typedef {Object} AWS_ApiGateway_DocumentationPart
         * @property {AWS_ApiGateway_DocumentationPart_Location} Location Location.
         * @property {string} Properties Properties.
         * @property {string} RestApiId RestApiId.
         */
        /**
         * Create a new AWS::ApiGateway::DocumentationPart
         * @param {AWS_ApiGateway_DocumentationPart} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGateway_DocumentationPart_Location
         * @property {string} [Method] Method.
         * @property {string} [Name] Name.
         * @property {string} [Path] Path.
         * @property {string} [StatusCode] StatusCode.
         * @property {string} [Type] Type.
         */
        /**
         * @param {AWS_ApiGateway_DocumentationPart_Location} properties
         * @returns {AWS_ApiGateway_DocumentationPart_Location}
         */
        static Location(properties) { return properties; }
      },
      /**
       * @namespace ApiKey
       */
      ApiKey: class {
        /**
         * @typedef {Object} AWS_ApiGateway_ApiKey
         * @property {string} [CustomerId] CustomerId.
         * @property {string} [Description] Description.
         * @property {boolean} [Enabled] Enabled.
         * @property {boolean} [GenerateDistinctId] GenerateDistinctId.
         * @property {string} [Name] Name.
         * @property {AWS_ApiGateway_ApiKey_StageKey[]} [StageKeys] StageKeys.
         * @property {string} [Value] Value.
         */
        /**
         * Create a new AWS::ApiGateway::ApiKey
         * @param {AWS_ApiGateway_ApiKey} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGateway_ApiKey_StageKey
         * @property {string} [RestApiId] RestApiId.
         * @property {string} [StageName] StageName.
         */
        /**
         * @param {AWS_ApiGateway_ApiKey_StageKey} properties
         * @returns {AWS_ApiGateway_ApiKey_StageKey}
         */
        static StageKey(properties) { return properties; }
      },
      /**
       * @namespace Model
       */
      Model: class {
        /**
         * @typedef {Object} AWS_ApiGateway_Model
         * @property {string} [ContentType] ContentType.
         * @property {string} [Description] Description.
         * @property {string} [Name] Name.
         * @property {string} RestApiId RestApiId.
         * @property {string} [Schema] Schema.
         */
        /**
         * Create a new AWS::ApiGateway::Model
         * @param {AWS_ApiGateway_Model} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Resource
       */
      Resource: class {
        /**
         * @typedef {Object} AWS_ApiGateway_Resource
         * @property {string} ParentId ParentId.
         * @property {string} PathPart PathPart.
         * @property {string} RestApiId RestApiId.
         */
        /**
         * Create a new AWS::ApiGateway::Resource
         * @param {AWS_ApiGateway_Resource} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Account
       */
      Account: class {
        /**
         * @typedef {Object} AWS_ApiGateway_Account
         * @property {string} [CloudWatchRoleArn] CloudWatchRoleArn.
         */
        /**
         * Create a new AWS::ApiGateway::Account
         * @param {AWS_ApiGateway_Account} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace RestApi
       */
      RestApi: class {
        /**
         * @typedef {Object} AWS_ApiGateway_RestApi
         * @property {string} [ApiKeySourceType] ApiKeySourceType.
         * @property {string[]} [BinaryMediaTypes] BinaryMediaTypes.
         * @property {string} [Body] Body.
         * @property {AWS_ApiGateway_RestApi_S3Location} [BodyS3Location] BodyS3Location.
         * @property {string} [CloneFrom] CloneFrom.
         * @property {string} [Description] Description.
         * @property {AWS_ApiGateway_RestApi_EndpointConfiguration} [EndpointConfiguration] EndpointConfiguration.
         * @property {boolean} [FailOnWarnings] FailOnWarnings.
         * @property {number} [MinimumCompressionSize] MinimumCompressionSize.
         * @property {string} [Name] Name.
         * @property {AWS_ApiGateway_RestApi_Map} [Parameters] Parameters.
         * @property {string} [Policy] Policy.
         */
        /**
         * Create a new AWS::ApiGateway::RestApi
         * @param {AWS_ApiGateway_RestApi} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGateway_RestApi_S3Location
         * @property {string} [Bucket] Bucket.
         * @property {string} [ETag] ETag.
         * @property {string} [Key] Key.
         * @property {string} [Version] Version.
         */
        /**
         * @param {AWS_ApiGateway_RestApi_S3Location} properties
         * @returns {AWS_ApiGateway_RestApi_S3Location}
         */
        static S3Location(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_RestApi_EndpointConfiguration
         * @property {string[]} [Types] Types.
         */
        /**
         * @param {AWS_ApiGateway_RestApi_EndpointConfiguration} properties
         * @returns {AWS_ApiGateway_RestApi_EndpointConfiguration}
         */
        static EndpointConfiguration(properties) { return properties; }
      },
      /**
       * @namespace UsagePlan
       */
      UsagePlan: class {
        /**
         * @typedef {Object} AWS_ApiGateway_UsagePlan
         * @property {AWS_ApiGateway_UsagePlan_ApiStage[]} [ApiStages] ApiStages.
         * @property {string} [Description] Description.
         * @property {AWS_ApiGateway_UsagePlan_QuotaSettings} [Quota] Quota.
         * @property {AWS_ApiGateway_UsagePlan_ThrottleSettings} [Throttle] Throttle.
         * @property {string} [UsagePlanName] UsagePlanName.
         */
        /**
         * Create a new AWS::ApiGateway::UsagePlan
         * @param {AWS_ApiGateway_UsagePlan} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGateway_UsagePlan_ApiStage
         * @property {string} [ApiId] ApiId.
         * @property {string} [Stage] Stage.
         * @property {AWS_ApiGateway_UsagePlan_Map} [Throttle] Throttle.
         */
        /**
         * @param {AWS_ApiGateway_UsagePlan_ApiStage} properties
         * @returns {AWS_ApiGateway_UsagePlan_ApiStage}
         */
        static ApiStage(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_UsagePlan_ThrottleSettings
         * @property {number} [BurstLimit] BurstLimit.
         * @property {number} [RateLimit] RateLimit.
         */
        /**
         * @param {AWS_ApiGateway_UsagePlan_ThrottleSettings} properties
         * @returns {AWS_ApiGateway_UsagePlan_ThrottleSettings}
         */
        static ThrottleSettings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_UsagePlan_QuotaSettings
         * @property {number} [Limit] Limit.
         * @property {number} [Offset] Offset.
         * @property {string} [Period] Period.
         */
        /**
         * @param {AWS_ApiGateway_UsagePlan_QuotaSettings} properties
         * @returns {AWS_ApiGateway_UsagePlan_QuotaSettings}
         */
        static QuotaSettings(properties) { return properties; }
      },
      /**
       * @namespace BasePathMapping
       */
      BasePathMapping: class {
        /**
         * @typedef {Object} AWS_ApiGateway_BasePathMapping
         * @property {string} [BasePath] BasePath.
         * @property {string} DomainName DomainName.
         * @property {string} [RestApiId] RestApiId.
         * @property {string} [Stage] Stage.
         */
        /**
         * Create a new AWS::ApiGateway::BasePathMapping
         * @param {AWS_ApiGateway_BasePathMapping} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Stage
       */
      Stage: class {
        /**
         * @typedef {Object} AWS_ApiGateway_Stage
         * @property {AWS_ApiGateway_Stage_AccessLogSetting} [AccessLogSetting] AccessLogSetting.
         * @property {boolean} [CacheClusterEnabled] CacheClusterEnabled.
         * @property {string} [CacheClusterSize] CacheClusterSize.
         * @property {AWS_ApiGateway_Stage_CanarySetting} [CanarySetting] CanarySetting.
         * @property {string} [ClientCertificateId] ClientCertificateId.
         * @property {string} [DeploymentId] DeploymentId.
         * @property {string} [Description] Description.
         * @property {string} [DocumentationVersion] DocumentationVersion.
         * @property {AWS_ApiGateway_Stage_MethodSetting[]} [MethodSettings] MethodSettings.
         * @property {string} RestApiId RestApiId.
         * @property {string} [StageName] StageName.
         * @property {AWS_ApiGateway_Stage_Tag[]} [Tags] Tags.
         * @property {boolean} [TracingEnabled] TracingEnabled.
         * @property {AWS_ApiGateway_Stage_Map} [Variables] Variables.
         */
        /**
         * Create a new AWS::ApiGateway::Stage
         * @param {AWS_ApiGateway_Stage} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGateway_Stage_MethodSetting
         * @property {boolean} [CacheDataEncrypted] CacheDataEncrypted.
         * @property {number} [CacheTtlInSeconds] CacheTtlInSeconds.
         * @property {boolean} [CachingEnabled] CachingEnabled.
         * @property {boolean} [DataTraceEnabled] DataTraceEnabled.
         * @property {string} [HttpMethod] HttpMethod.
         * @property {string} [LoggingLevel] LoggingLevel.
         * @property {boolean} [MetricsEnabled] MetricsEnabled.
         * @property {string} [ResourcePath] ResourcePath.
         * @property {number} [ThrottlingBurstLimit] ThrottlingBurstLimit.
         * @property {number} [ThrottlingRateLimit] ThrottlingRateLimit.
         */
        /**
         * @param {AWS_ApiGateway_Stage_MethodSetting} properties
         * @returns {AWS_ApiGateway_Stage_MethodSetting}
         */
        static MethodSetting(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_Stage_CanarySetting
         * @property {string} [DeploymentId] DeploymentId.
         * @property {number} [PercentTraffic] PercentTraffic.
         * @property {AWS_ApiGateway_Stage_Map} [StageVariableOverrides] StageVariableOverrides.
         * @property {boolean} [UseStageCache] UseStageCache.
         */
        /**
         * @param {AWS_ApiGateway_Stage_CanarySetting} properties
         * @returns {AWS_ApiGateway_Stage_CanarySetting}
         */
        static CanarySetting(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_Stage_AccessLogSetting
         * @property {string} [DestinationArn] DestinationArn.
         * @property {string} [Format] Format.
         */
        /**
         * @param {AWS_ApiGateway_Stage_AccessLogSetting} properties
         * @returns {AWS_ApiGateway_Stage_AccessLogSetting}
         */
        static AccessLogSetting(properties) { return properties; }
      },
      /**
       * @namespace VpcLink
       */
      VpcLink: class {
        /**
         * @typedef {Object} AWS_ApiGateway_VpcLink
         * @property {string} [Description] Description.
         * @property {string[]} TargetArns TargetArns.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::ApiGateway::VpcLink
         * @param {AWS_ApiGateway_VpcLink} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace GatewayResponse
       */
      GatewayResponse: class {
        /**
         * @typedef {Object} AWS_ApiGateway_GatewayResponse
         * @property {AWS_ApiGateway_GatewayResponse_Map} [ResponseParameters] ResponseParameters.
         * @property {AWS_ApiGateway_GatewayResponse_Map} [ResponseTemplates] ResponseTemplates.
         * @property {string} ResponseType ResponseType.
         * @property {string} RestApiId RestApiId.
         * @property {string} [StatusCode] StatusCode.
         */
        /**
         * Create a new AWS::ApiGateway::GatewayResponse
         * @param {AWS_ApiGateway_GatewayResponse} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Method
       */
      Method: class {
        /**
         * @typedef {Object} AWS_ApiGateway_Method
         * @property {boolean} [ApiKeyRequired] ApiKeyRequired.
         * @property {string[]} [AuthorizationScopes] AuthorizationScopes.
         * @property {string} [AuthorizationType] AuthorizationType.
         * @property {string} [AuthorizerId] AuthorizerId.
         * @property {string} HttpMethod HttpMethod.
         * @property {AWS_ApiGateway_Method_Integration} [Integration] Integration.
         * @property {AWS_ApiGateway_Method_MethodResponse[]} [MethodResponses] MethodResponses.
         * @property {string} [OperationName] OperationName.
         * @property {AWS_ApiGateway_Method_Map} [RequestModels] RequestModels.
         * @property {AWS_ApiGateway_Method_Map} [RequestParameters] RequestParameters.
         * @property {string} [RequestValidatorId] RequestValidatorId.
         * @property {string} ResourceId ResourceId.
         * @property {string} RestApiId RestApiId.
         */
        /**
         * Create a new AWS::ApiGateway::Method
         * @param {AWS_ApiGateway_Method} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGateway_Method_MethodResponse
         * @property {AWS_ApiGateway_Method_Map} [ResponseModels] ResponseModels.
         * @property {AWS_ApiGateway_Method_Map} [ResponseParameters] ResponseParameters.
         * @property {string} StatusCode StatusCode.
         */
        /**
         * @param {AWS_ApiGateway_Method_MethodResponse} properties
         * @returns {AWS_ApiGateway_Method_MethodResponse}
         */
        static MethodResponse(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_Method_Integration
         * @property {string[]} [CacheKeyParameters] CacheKeyParameters.
         * @property {string} [CacheNamespace] CacheNamespace.
         * @property {string} [ConnectionId] ConnectionId.
         * @property {string} [ConnectionType] ConnectionType.
         * @property {string} [ContentHandling] ContentHandling.
         * @property {string} [Credentials] Credentials.
         * @property {string} [IntegrationHttpMethod] IntegrationHttpMethod.
         * @property {AWS_ApiGateway_Method_IntegrationResponse[]} [IntegrationResponses] IntegrationResponses.
         * @property {string} [PassthroughBehavior] PassthroughBehavior.
         * @property {AWS_ApiGateway_Method_Map} [RequestParameters] RequestParameters.
         * @property {AWS_ApiGateway_Method_Map} [RequestTemplates] RequestTemplates.
         * @property {number} [TimeoutInMillis] TimeoutInMillis.
         * @property {string} [Type] Type.
         * @property {string} [Uri] Uri.
         */
        /**
         * @param {AWS_ApiGateway_Method_Integration} properties
         * @returns {AWS_ApiGateway_Method_Integration}
         */
        static Integration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGateway_Method_IntegrationResponse
         * @property {string} [ContentHandling] ContentHandling.
         * @property {AWS_ApiGateway_Method_Map} [ResponseParameters] ResponseParameters.
         * @property {AWS_ApiGateway_Method_Map} [ResponseTemplates] ResponseTemplates.
         * @property {string} [SelectionPattern] SelectionPattern.
         * @property {string} StatusCode StatusCode.
         */
        /**
         * @param {AWS_ApiGateway_Method_IntegrationResponse} properties
         * @returns {AWS_ApiGateway_Method_IntegrationResponse}
         */
        static IntegrationResponse(properties) { return properties; }
      },
      /**
       * @namespace ClientCertificate
       */
      ClientCertificate: class {
        /**
         * @typedef {Object} AWS_ApiGateway_ClientCertificate
         * @property {string} [Description] Description.
         */
        /**
         * Create a new AWS::ApiGateway::ClientCertificate
         * @param {AWS_ApiGateway_ClientCertificate} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DocumentationVersion
       */
      DocumentationVersion: class {
        /**
         * @typedef {Object} AWS_ApiGateway_DocumentationVersion
         * @property {string} [Description] Description.
         * @property {string} DocumentationVersion DocumentationVersion.
         * @property {string} RestApiId RestApiId.
         */
        /**
         * Create a new AWS::ApiGateway::DocumentationVersion
         * @param {AWS_ApiGateway_DocumentationVersion} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace UsagePlanKey
       */
      UsagePlanKey: class {
        /**
         * @typedef {Object} AWS_ApiGateway_UsagePlanKey
         * @property {string} KeyId KeyId.
         * @property {string} KeyType KeyType.
         * @property {string} UsagePlanId UsagePlanId.
         */
        /**
         * Create a new AWS::ApiGateway::UsagePlanKey
         * @param {AWS_ApiGateway_UsagePlanKey} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace WAFRegional
     */
    WAFRegional: {
      /**
       * @namespace SizeConstraintSet
       */
      SizeConstraintSet: class {
        /**
         * @typedef {Object} AWS_WAFRegional_SizeConstraintSet
         * @property {AWS_WAFRegional_SizeConstraintSet_SizeConstraint[]} [SizeConstraints] SizeConstraints.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAFRegional::SizeConstraintSet
         * @param {AWS_WAFRegional_SizeConstraintSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAFRegional_SizeConstraintSet_SizeConstraint
         * @property {string} ComparisonOperator ComparisonOperator.
         * @property {number} Size Size.
         * @property {string} TextTransformation TextTransformation.
         * @property {AWS_WAFRegional_SizeConstraintSet_FieldToMatch} FieldToMatch FieldToMatch.
         */
        /**
         * @param {AWS_WAFRegional_SizeConstraintSet_SizeConstraint} properties
         * @returns {AWS_WAFRegional_SizeConstraintSet_SizeConstraint}
         */
        static SizeConstraint(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAFRegional_SizeConstraintSet_FieldToMatch
         * @property {string} Type Type.
         * @property {string} [Data] Data.
         */
        /**
         * @param {AWS_WAFRegional_SizeConstraintSet_FieldToMatch} properties
         * @returns {AWS_WAFRegional_SizeConstraintSet_FieldToMatch}
         */
        static FieldToMatch(properties) { return properties; }
      },
      /**
       * @namespace SqlInjectionMatchSet
       */
      SqlInjectionMatchSet: class {
        /**
         * @typedef {Object} AWS_WAFRegional_SqlInjectionMatchSet
         * @property {AWS_WAFRegional_SqlInjectionMatchSet_SqlInjectionMatchTuple[]} [SqlInjectionMatchTuples] SqlInjectionMatchTuples.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAFRegional::SqlInjectionMatchSet
         * @param {AWS_WAFRegional_SqlInjectionMatchSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAFRegional_SqlInjectionMatchSet_FieldToMatch
         * @property {string} Type Type.
         * @property {string} [Data] Data.
         */
        /**
         * @param {AWS_WAFRegional_SqlInjectionMatchSet_FieldToMatch} properties
         * @returns {AWS_WAFRegional_SqlInjectionMatchSet_FieldToMatch}
         */
        static FieldToMatch(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAFRegional_SqlInjectionMatchSet_SqlInjectionMatchTuple
         * @property {string} TextTransformation TextTransformation.
         * @property {AWS_WAFRegional_SqlInjectionMatchSet_FieldToMatch} FieldToMatch FieldToMatch.
         */
        /**
         * @param {AWS_WAFRegional_SqlInjectionMatchSet_SqlInjectionMatchTuple} properties
         * @returns {AWS_WAFRegional_SqlInjectionMatchSet_SqlInjectionMatchTuple}
         */
        static SqlInjectionMatchTuple(properties) { return properties; }
      },
      /**
       * @namespace XssMatchSet
       */
      XssMatchSet: class {
        /**
         * @typedef {Object} AWS_WAFRegional_XssMatchSet
         * @property {AWS_WAFRegional_XssMatchSet_XssMatchTuple[]} [XssMatchTuples] XssMatchTuples.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAFRegional::XssMatchSet
         * @param {AWS_WAFRegional_XssMatchSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAFRegional_XssMatchSet_XssMatchTuple
         * @property {string} TextTransformation TextTransformation.
         * @property {AWS_WAFRegional_XssMatchSet_FieldToMatch} FieldToMatch FieldToMatch.
         */
        /**
         * @param {AWS_WAFRegional_XssMatchSet_XssMatchTuple} properties
         * @returns {AWS_WAFRegional_XssMatchSet_XssMatchTuple}
         */
        static XssMatchTuple(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAFRegional_XssMatchSet_FieldToMatch
         * @property {string} Type Type.
         * @property {string} [Data] Data.
         */
        /**
         * @param {AWS_WAFRegional_XssMatchSet_FieldToMatch} properties
         * @returns {AWS_WAFRegional_XssMatchSet_FieldToMatch}
         */
        static FieldToMatch(properties) { return properties; }
      },
      /**
       * @namespace ByteMatchSet
       */
      ByteMatchSet: class {
        /**
         * @typedef {Object} AWS_WAFRegional_ByteMatchSet
         * @property {AWS_WAFRegional_ByteMatchSet_ByteMatchTuple[]} [ByteMatchTuples] ByteMatchTuples.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAFRegional::ByteMatchSet
         * @param {AWS_WAFRegional_ByteMatchSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAFRegional_ByteMatchSet_ByteMatchTuple
         * @property {string} [TargetString] TargetString.
         * @property {string} [TargetStringBase64] TargetStringBase64.
         * @property {string} PositionalConstraint PositionalConstraint.
         * @property {string} TextTransformation TextTransformation.
         * @property {AWS_WAFRegional_ByteMatchSet_FieldToMatch} FieldToMatch FieldToMatch.
         */
        /**
         * @param {AWS_WAFRegional_ByteMatchSet_ByteMatchTuple} properties
         * @returns {AWS_WAFRegional_ByteMatchSet_ByteMatchTuple}
         */
        static ByteMatchTuple(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAFRegional_ByteMatchSet_FieldToMatch
         * @property {string} Type Type.
         * @property {string} [Data] Data.
         */
        /**
         * @param {AWS_WAFRegional_ByteMatchSet_FieldToMatch} properties
         * @returns {AWS_WAFRegional_ByteMatchSet_FieldToMatch}
         */
        static FieldToMatch(properties) { return properties; }
      },
      /**
       * @namespace WebACLAssociation
       */
      WebACLAssociation: class {
        /**
         * @typedef {Object} AWS_WAFRegional_WebACLAssociation
         * @property {string} ResourceArn ResourceArn.
         * @property {string} WebACLId WebACLId.
         */
        /**
         * Create a new AWS::WAFRegional::WebACLAssociation
         * @param {AWS_WAFRegional_WebACLAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace WebACL
       */
      WebACL: class {
        /**
         * @typedef {Object} AWS_WAFRegional_WebACL
         * @property {string} MetricName MetricName.
         * @property {AWS_WAFRegional_WebACL_Action} DefaultAction DefaultAction.
         * @property {AWS_WAFRegional_WebACL_Rule[]} [Rules] Rules.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAFRegional::WebACL
         * @param {AWS_WAFRegional_WebACL} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAFRegional_WebACL_Rule
         * @property {AWS_WAFRegional_WebACL_Action} Action Action.
         * @property {number} Priority Priority.
         * @property {string} RuleId RuleId.
         */
        /**
         * @param {AWS_WAFRegional_WebACL_Rule} properties
         * @returns {AWS_WAFRegional_WebACL_Rule}
         */
        static Rule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_WAFRegional_WebACL_Action
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_WAFRegional_WebACL_Action} properties
         * @returns {AWS_WAFRegional_WebACL_Action}
         */
        static Action(properties) { return properties; }
      },
      /**
       * @namespace Rule
       */
      Rule: class {
        /**
         * @typedef {Object} AWS_WAFRegional_Rule
         * @property {string} MetricName MetricName.
         * @property {AWS_WAFRegional_Rule_Predicate[]} [Predicates] Predicates.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAFRegional::Rule
         * @param {AWS_WAFRegional_Rule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAFRegional_Rule_Predicate
         * @property {string} Type Type.
         * @property {string} DataId DataId.
         * @property {boolean} Negated Negated.
         */
        /**
         * @param {AWS_WAFRegional_Rule_Predicate} properties
         * @returns {AWS_WAFRegional_Rule_Predicate}
         */
        static Predicate(properties) { return properties; }
      },
      /**
       * @namespace IPSet
       */
      IPSet: class {
        /**
         * @typedef {Object} AWS_WAFRegional_IPSet
         * @property {AWS_WAFRegional_IPSet_IPSetDescriptor[]} [IPSetDescriptors] IPSetDescriptors.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::WAFRegional::IPSet
         * @param {AWS_WAFRegional_IPSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WAFRegional_IPSet_IPSetDescriptor
         * @property {string} Type Type.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_WAFRegional_IPSet_IPSetDescriptor} properties
         * @returns {AWS_WAFRegional_IPSet_IPSetDescriptor}
         */
        static IPSetDescriptor(properties) { return properties; }
      }
    },
    /**
     * @namespace RDS
     */
    RDS: {
      /**
       * @namespace DBSecurityGroupIngress
       */
      DBSecurityGroupIngress: class {
        /**
         * @typedef {Object} AWS_RDS_DBSecurityGroupIngress
         * @property {string} [CIDRIP] CIDRIP.
         * @property {string} DBSecurityGroupName DBSecurityGroupName.
         * @property {string} [EC2SecurityGroupId] EC2SecurityGroupId.
         * @property {string} [EC2SecurityGroupName] EC2SecurityGroupName.
         * @property {string} [EC2SecurityGroupOwnerId] EC2SecurityGroupOwnerId.
         */
        /**
         * Create a new AWS::RDS::DBSecurityGroupIngress
         * @param {AWS_RDS_DBSecurityGroupIngress} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBCluster
       */
      DBCluster: class {
        /**
         * @typedef {Object} AWS_RDS_DBCluster
         * @property {string[]} [AvailabilityZones] AvailabilityZones.
         * @property {number} [BacktrackWindow] BacktrackWindow.
         * @property {number} [BackupRetentionPeriod] BackupRetentionPeriod.
         * @property {string} [DBClusterIdentifier] DBClusterIdentifier.
         * @property {string} [DBClusterParameterGroupName] DBClusterParameterGroupName.
         * @property {string} [DBSubnetGroupName] DBSubnetGroupName.
         * @property {string} [DatabaseName] DatabaseName.
         * @property {boolean} [DeletionProtection] DeletionProtection.
         * @property {string[]} [EnableCloudwatchLogsExports] EnableCloudwatchLogsExports.
         * @property {boolean} [EnableIAMDatabaseAuthentication] EnableIAMDatabaseAuthentication.
         * @property {string} Engine Engine.
         * @property {string} [EngineMode] EngineMode.
         * @property {string} [EngineVersion] EngineVersion.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {string} [MasterUserPassword] MasterUserPassword.
         * @property {string} [MasterUsername] MasterUsername.
         * @property {number} [Port] Port.
         * @property {string} [PreferredBackupWindow] PreferredBackupWindow.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {string} [ReplicationSourceIdentifier] ReplicationSourceIdentifier.
         * @property {AWS_RDS_DBCluster_ScalingConfiguration} [ScalingConfiguration] ScalingConfiguration.
         * @property {string} [SnapshotIdentifier] SnapshotIdentifier.
         * @property {string} [SourceRegion] SourceRegion.
         * @property {boolean} [StorageEncrypted] StorageEncrypted.
         * @property {AWS_RDS_DBCluster_Tag[]} [Tags] Tags.
         * @property {string[]} [VpcSecurityGroupIds] VpcSecurityGroupIds.
         */
        /**
         * Create a new AWS::RDS::DBCluster
         * @param {AWS_RDS_DBCluster} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_RDS_DBCluster_ScalingConfiguration
         * @property {boolean} [AutoPause] AutoPause.
         * @property {number} [MaxCapacity] MaxCapacity.
         * @property {number} [MinCapacity] MinCapacity.
         * @property {number} [SecondsUntilAutoPause] SecondsUntilAutoPause.
         */
        /**
         * @param {AWS_RDS_DBCluster_ScalingConfiguration} properties
         * @returns {AWS_RDS_DBCluster_ScalingConfiguration}
         */
        static ScalingConfiguration(properties) { return properties; }
      },
      /**
       * @namespace DBSubnetGroup
       */
      DBSubnetGroup: class {
        /**
         * @typedef {Object} AWS_RDS_DBSubnetGroup
         * @property {string} DBSubnetGroupDescription DBSubnetGroupDescription.
         * @property {string} [DBSubnetGroupName] DBSubnetGroupName.
         * @property {string[]} SubnetIds SubnetIds.
         * @property {AWS_RDS_DBSubnetGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::RDS::DBSubnetGroup
         * @param {AWS_RDS_DBSubnetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace OptionGroup
       */
      OptionGroup: class {
        /**
         * @typedef {Object} AWS_RDS_OptionGroup
         * @property {string} EngineName EngineName.
         * @property {string} MajorEngineVersion MajorEngineVersion.
         * @property {AWS_RDS_OptionGroup_OptionConfiguration[]} OptionConfigurations OptionConfigurations.
         * @property {string} OptionGroupDescription OptionGroupDescription.
         * @property {AWS_RDS_OptionGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::RDS::OptionGroup
         * @param {AWS_RDS_OptionGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_RDS_OptionGroup_OptionSetting
         * @property {string} [Name] Name.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_RDS_OptionGroup_OptionSetting} properties
         * @returns {AWS_RDS_OptionGroup_OptionSetting}
         */
        static OptionSetting(properties) { return properties; }
        /**
         * @typedef {Object} AWS_RDS_OptionGroup_OptionConfiguration
         * @property {string[]} [DBSecurityGroupMemberships] DBSecurityGroupMemberships.
         * @property {string} OptionName OptionName.
         * @property {AWS_RDS_OptionGroup_OptionSetting[]} [OptionSettings] OptionSettings.
         * @property {string} [OptionVersion] OptionVersion.
         * @property {number} [Port] Port.
         * @property {string[]} [VpcSecurityGroupMemberships] VpcSecurityGroupMemberships.
         */
        /**
         * @param {AWS_RDS_OptionGroup_OptionConfiguration} properties
         * @returns {AWS_RDS_OptionGroup_OptionConfiguration}
         */
        static OptionConfiguration(properties) { return properties; }
      },
      /**
       * @namespace DBParameterGroup
       */
      DBParameterGroup: class {
        /**
         * @typedef {Object} AWS_RDS_DBParameterGroup
         * @property {string} Description Description.
         * @property {string} Family Family.
         * @property {AWS_RDS_DBParameterGroup_Map} [Parameters] Parameters.
         * @property {AWS_RDS_DBParameterGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::RDS::DBParameterGroup
         * @param {AWS_RDS_DBParameterGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace EventSubscription
       */
      EventSubscription: class {
        /**
         * @typedef {Object} AWS_RDS_EventSubscription
         * @property {boolean} [Enabled] Enabled.
         * @property {string[]} [EventCategories] EventCategories.
         * @property {string} SnsTopicArn SnsTopicArn.
         * @property {string[]} [SourceIds] SourceIds.
         * @property {string} [SourceType] SourceType.
         */
        /**
         * Create a new AWS::RDS::EventSubscription
         * @param {AWS_RDS_EventSubscription} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBInstance
       */
      DBInstance: class {
        /**
         * @typedef {Object} AWS_RDS_DBInstance
         * @property {string} [AllocatedStorage] AllocatedStorage.
         * @property {boolean} [AllowMajorVersionUpgrade] AllowMajorVersionUpgrade.
         * @property {boolean} [AutoMinorVersionUpgrade] AutoMinorVersionUpgrade.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [BackupRetentionPeriod] BackupRetentionPeriod.
         * @property {string} [CharacterSetName] CharacterSetName.
         * @property {boolean} [CopyTagsToSnapshot] CopyTagsToSnapshot.
         * @property {string} [DBClusterIdentifier] DBClusterIdentifier.
         * @property {string} DBInstanceClass DBInstanceClass.
         * @property {string} [DBInstanceIdentifier] DBInstanceIdentifier.
         * @property {string} [DBName] DBName.
         * @property {string} [DBParameterGroupName] DBParameterGroupName.
         * @property {string[]} [DBSecurityGroups] DBSecurityGroups.
         * @property {string} [DBSnapshotIdentifier] DBSnapshotIdentifier.
         * @property {string} [DBSubnetGroupName] DBSubnetGroupName.
         * @property {boolean} [DeleteAutomatedBackups] DeleteAutomatedBackups.
         * @property {boolean} [DeletionProtection] DeletionProtection.
         * @property {string} [Domain] Domain.
         * @property {string} [DomainIAMRoleName] DomainIAMRoleName.
         * @property {string[]} [EnableCloudwatchLogsExports] EnableCloudwatchLogsExports.
         * @property {boolean} [EnableIAMDatabaseAuthentication] EnableIAMDatabaseAuthentication.
         * @property {boolean} [EnablePerformanceInsights] EnablePerformanceInsights.
         * @property {string} [Engine] Engine.
         * @property {string} [EngineVersion] EngineVersion.
         * @property {number} [Iops] Iops.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {string} [LicenseModel] LicenseModel.
         * @property {string} [MasterUserPassword] MasterUserPassword.
         * @property {string} [MasterUsername] MasterUsername.
         * @property {number} [MonitoringInterval] MonitoringInterval.
         * @property {string} [MonitoringRoleArn] MonitoringRoleArn.
         * @property {boolean} [MultiAZ] MultiAZ.
         * @property {string} [OptionGroupName] OptionGroupName.
         * @property {string} [PerformanceInsightsKMSKeyId] PerformanceInsightsKMSKeyId.
         * @property {number} [PerformanceInsightsRetentionPeriod] PerformanceInsightsRetentionPeriod.
         * @property {string} [Port] Port.
         * @property {string} [PreferredBackupWindow] PreferredBackupWindow.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {AWS_RDS_DBInstance_ProcessorFeature[]} [ProcessorFeatures] ProcessorFeatures.
         * @property {number} [PromotionTier] PromotionTier.
         * @property {boolean} [PubliclyAccessible] PubliclyAccessible.
         * @property {string} [SourceDBInstanceIdentifier] SourceDBInstanceIdentifier.
         * @property {string} [SourceRegion] SourceRegion.
         * @property {boolean} [StorageEncrypted] StorageEncrypted.
         * @property {string} [StorageType] StorageType.
         * @property {AWS_RDS_DBInstance_Tag[]} [Tags] Tags.
         * @property {string} [Timezone] Timezone.
         * @property {boolean} [UseDefaultProcessorFeatures] UseDefaultProcessorFeatures.
         * @property {string[]} [VPCSecurityGroups] VPCSecurityGroups.
         */
        /**
         * Create a new AWS::RDS::DBInstance
         * @param {AWS_RDS_DBInstance} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_RDS_DBInstance_ProcessorFeature
         * @property {string} [Name] Name.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_RDS_DBInstance_ProcessorFeature} properties
         * @returns {AWS_RDS_DBInstance_ProcessorFeature}
         */
        static ProcessorFeature(properties) { return properties; }
      },
      /**
       * @namespace DBSecurityGroup
       */
      DBSecurityGroup: class {
        /**
         * @typedef {Object} AWS_RDS_DBSecurityGroup
         * @property {AWS_RDS_DBSecurityGroup_Ingress[]} DBSecurityGroupIngress DBSecurityGroupIngress.
         * @property {string} [EC2VpcId] EC2VpcId.
         * @property {string} GroupDescription GroupDescription.
         * @property {AWS_RDS_DBSecurityGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::RDS::DBSecurityGroup
         * @param {AWS_RDS_DBSecurityGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_RDS_DBSecurityGroup_Ingress
         * @property {string} [CIDRIP] CIDRIP.
         * @property {string} [EC2SecurityGroupId] EC2SecurityGroupId.
         * @property {string} [EC2SecurityGroupName] EC2SecurityGroupName.
         * @property {string} [EC2SecurityGroupOwnerId] EC2SecurityGroupOwnerId.
         */
        /**
         * @param {AWS_RDS_DBSecurityGroup_Ingress} properties
         * @returns {AWS_RDS_DBSecurityGroup_Ingress}
         */
        static Ingress(properties) { return properties; }
      },
      /**
       * @namespace DBClusterParameterGroup
       */
      DBClusterParameterGroup: class {
        /**
         * @typedef {Object} AWS_RDS_DBClusterParameterGroup
         * @property {string} Description Description.
         * @property {string} Family Family.
         * @property {string} Parameters Parameters.
         * @property {AWS_RDS_DBClusterParameterGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::RDS::DBClusterParameterGroup
         * @param {AWS_RDS_DBClusterParameterGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace EMR
     */
    EMR: {
      /**
       * @namespace InstanceFleetConfig
       */
      InstanceFleetConfig: class {
        /**
         * @typedef {Object} AWS_EMR_InstanceFleetConfig
         * @property {string} ClusterId ClusterId.
         * @property {string} InstanceFleetType InstanceFleetType.
         * @property {AWS_EMR_InstanceFleetConfig_InstanceTypeConfig[]} [InstanceTypeConfigs] InstanceTypeConfigs.
         * @property {AWS_EMR_InstanceFleetConfig_InstanceFleetProvisioningSpecifications} [LaunchSpecifications] LaunchSpecifications.
         * @property {string} [Name] Name.
         * @property {number} [TargetOnDemandCapacity] TargetOnDemandCapacity.
         * @property {number} [TargetSpotCapacity] TargetSpotCapacity.
         */
        /**
         * Create a new AWS::EMR::InstanceFleetConfig
         * @param {AWS_EMR_InstanceFleetConfig} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EMR_InstanceFleetConfig_VolumeSpecification
         * @property {number} [Iops] Iops.
         * @property {number} SizeInGB SizeInGB.
         * @property {string} VolumeType VolumeType.
         */
        /**
         * @param {AWS_EMR_InstanceFleetConfig_VolumeSpecification} properties
         * @returns {AWS_EMR_InstanceFleetConfig_VolumeSpecification}
         */
        static VolumeSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceFleetConfig_SpotProvisioningSpecification
         * @property {number} [BlockDurationMinutes] BlockDurationMinutes.
         * @property {string} TimeoutAction TimeoutAction.
         * @property {number} TimeoutDurationMinutes TimeoutDurationMinutes.
         */
        /**
         * @param {AWS_EMR_InstanceFleetConfig_SpotProvisioningSpecification} properties
         * @returns {AWS_EMR_InstanceFleetConfig_SpotProvisioningSpecification}
         */
        static SpotProvisioningSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceFleetConfig_Configuration
         * @property {string} [Classification] Classification.
         * @property {AWS_EMR_InstanceFleetConfig_Map} [ConfigurationProperties] ConfigurationProperties.
         * @property {AWS_EMR_InstanceFleetConfig_Configuration[]} [Configurations] Configurations.
         */
        /**
         * @param {AWS_EMR_InstanceFleetConfig_Configuration} properties
         * @returns {AWS_EMR_InstanceFleetConfig_Configuration}
         */
        static Configuration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceFleetConfig_EbsConfiguration
         * @property {AWS_EMR_InstanceFleetConfig_EbsBlockDeviceConfig[]} [EbsBlockDeviceConfigs] EbsBlockDeviceConfigs.
         * @property {boolean} [EbsOptimized] EbsOptimized.
         */
        /**
         * @param {AWS_EMR_InstanceFleetConfig_EbsConfiguration} properties
         * @returns {AWS_EMR_InstanceFleetConfig_EbsConfiguration}
         */
        static EbsConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceFleetConfig_InstanceTypeConfig
         * @property {string} [BidPrice] BidPrice.
         * @property {number} [BidPriceAsPercentageOfOnDemandPrice] BidPriceAsPercentageOfOnDemandPrice.
         * @property {AWS_EMR_InstanceFleetConfig_Configuration[]} [Configurations] Configurations.
         * @property {AWS_EMR_InstanceFleetConfig_EbsConfiguration} [EbsConfiguration] EbsConfiguration.
         * @property {string} InstanceType InstanceType.
         * @property {number} [WeightedCapacity] WeightedCapacity.
         */
        /**
         * @param {AWS_EMR_InstanceFleetConfig_InstanceTypeConfig} properties
         * @returns {AWS_EMR_InstanceFleetConfig_InstanceTypeConfig}
         */
        static InstanceTypeConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceFleetConfig_InstanceFleetProvisioningSpecifications
         * @property {AWS_EMR_InstanceFleetConfig_SpotProvisioningSpecification} SpotSpecification SpotSpecification.
         */
        /**
         * @param {AWS_EMR_InstanceFleetConfig_InstanceFleetProvisioningSpecifications} properties
         * @returns {AWS_EMR_InstanceFleetConfig_InstanceFleetProvisioningSpecifications}
         */
        static InstanceFleetProvisioningSpecifications(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceFleetConfig_EbsBlockDeviceConfig
         * @property {AWS_EMR_InstanceFleetConfig_VolumeSpecification} VolumeSpecification VolumeSpecification.
         * @property {number} [VolumesPerInstance] VolumesPerInstance.
         */
        /**
         * @param {AWS_EMR_InstanceFleetConfig_EbsBlockDeviceConfig} properties
         * @returns {AWS_EMR_InstanceFleetConfig_EbsBlockDeviceConfig}
         */
        static EbsBlockDeviceConfig(properties) { return properties; }
      },
      /**
       * @namespace Cluster
       */
      Cluster: class {
        /**
         * @typedef {Object} AWS_EMR_Cluster
         * @property {string} [AdditionalInfo] AdditionalInfo.
         * @property {AWS_EMR_Cluster_Application[]} [Applications] Applications.
         * @property {string} [AutoScalingRole] AutoScalingRole.
         * @property {AWS_EMR_Cluster_BootstrapActionConfig[]} [BootstrapActions] BootstrapActions.
         * @property {AWS_EMR_Cluster_Configuration[]} [Configurations] Configurations.
         * @property {string} [CustomAmiId] CustomAmiId.
         * @property {number} [EbsRootVolumeSize] EbsRootVolumeSize.
         * @property {AWS_EMR_Cluster_JobFlowInstancesConfig} Instances Instances.
         * @property {string} JobFlowRole JobFlowRole.
         * @property {AWS_EMR_Cluster_KerberosAttributes} [KerberosAttributes] KerberosAttributes.
         * @property {string} [LogUri] LogUri.
         * @property {string} Name Name.
         * @property {string} [ReleaseLabel] ReleaseLabel.
         * @property {string} [ScaleDownBehavior] ScaleDownBehavior.
         * @property {string} [SecurityConfiguration] SecurityConfiguration.
         * @property {string} ServiceRole ServiceRole.
         * @property {AWS_EMR_Cluster_StepConfig[]} [Steps] Steps.
         * @property {AWS_EMR_Cluster_Tag[]} [Tags] Tags.
         * @property {boolean} [VisibleToAllUsers] VisibleToAllUsers.
         */
        /**
         * Create a new AWS::EMR::Cluster
         * @param {AWS_EMR_Cluster} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EMR_Cluster_InstanceGroupConfig
         * @property {AWS_EMR_Cluster_AutoScalingPolicy} [AutoScalingPolicy] AutoScalingPolicy.
         * @property {string} [BidPrice] BidPrice.
         * @property {AWS_EMR_Cluster_Configuration[]} [Configurations] Configurations.
         * @property {AWS_EMR_Cluster_EbsConfiguration} [EbsConfiguration] EbsConfiguration.
         * @property {number} InstanceCount InstanceCount.
         * @property {string} InstanceType InstanceType.
         * @property {string} [Market] Market.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_EMR_Cluster_InstanceGroupConfig} properties
         * @returns {AWS_EMR_Cluster_InstanceGroupConfig}
         */
        static InstanceGroupConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_SpotProvisioningSpecification
         * @property {number} [BlockDurationMinutes] BlockDurationMinutes.
         * @property {string} TimeoutAction TimeoutAction.
         * @property {number} TimeoutDurationMinutes TimeoutDurationMinutes.
         */
        /**
         * @param {AWS_EMR_Cluster_SpotProvisioningSpecification} properties
         * @returns {AWS_EMR_Cluster_SpotProvisioningSpecification}
         */
        static SpotProvisioningSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_BootstrapActionConfig
         * @property {string} Name Name.
         * @property {AWS_EMR_Cluster_ScriptBootstrapActionConfig} ScriptBootstrapAction ScriptBootstrapAction.
         */
        /**
         * @param {AWS_EMR_Cluster_BootstrapActionConfig} properties
         * @returns {AWS_EMR_Cluster_BootstrapActionConfig}
         */
        static BootstrapActionConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_ScalingConstraints
         * @property {number} MaxCapacity MaxCapacity.
         * @property {number} MinCapacity MinCapacity.
         */
        /**
         * @param {AWS_EMR_Cluster_ScalingConstraints} properties
         * @returns {AWS_EMR_Cluster_ScalingConstraints}
         */
        static ScalingConstraints(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_InstanceFleetConfig
         * @property {AWS_EMR_Cluster_InstanceTypeConfig[]} [InstanceTypeConfigs] InstanceTypeConfigs.
         * @property {AWS_EMR_Cluster_InstanceFleetProvisioningSpecifications} [LaunchSpecifications] LaunchSpecifications.
         * @property {string} [Name] Name.
         * @property {number} [TargetOnDemandCapacity] TargetOnDemandCapacity.
         * @property {number} [TargetSpotCapacity] TargetSpotCapacity.
         */
        /**
         * @param {AWS_EMR_Cluster_InstanceFleetConfig} properties
         * @returns {AWS_EMR_Cluster_InstanceFleetConfig}
         */
        static InstanceFleetConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_JobFlowInstancesConfig
         * @property {string[]} [AdditionalMasterSecurityGroups] AdditionalMasterSecurityGroups.
         * @property {string[]} [AdditionalSlaveSecurityGroups] AdditionalSlaveSecurityGroups.
         * @property {AWS_EMR_Cluster_InstanceFleetConfig} [CoreInstanceFleet] CoreInstanceFleet.
         * @property {AWS_EMR_Cluster_InstanceGroupConfig} [CoreInstanceGroup] CoreInstanceGroup.
         * @property {string} [Ec2KeyName] Ec2KeyName.
         * @property {string} [Ec2SubnetId] Ec2SubnetId.
         * @property {string} [EmrManagedMasterSecurityGroup] EmrManagedMasterSecurityGroup.
         * @property {string} [EmrManagedSlaveSecurityGroup] EmrManagedSlaveSecurityGroup.
         * @property {string} [HadoopVersion] HadoopVersion.
         * @property {boolean} [KeepJobFlowAliveWhenNoSteps] KeepJobFlowAliveWhenNoSteps.
         * @property {AWS_EMR_Cluster_InstanceFleetConfig} [MasterInstanceFleet] MasterInstanceFleet.
         * @property {AWS_EMR_Cluster_InstanceGroupConfig} [MasterInstanceGroup] MasterInstanceGroup.
         * @property {AWS_EMR_Cluster_PlacementType} [Placement] Placement.
         * @property {string} [ServiceAccessSecurityGroup] ServiceAccessSecurityGroup.
         * @property {boolean} [TerminationProtected] TerminationProtected.
         */
        /**
         * @param {AWS_EMR_Cluster_JobFlowInstancesConfig} properties
         * @returns {AWS_EMR_Cluster_JobFlowInstancesConfig}
         */
        static JobFlowInstancesConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_ScalingAction
         * @property {string} [Market] Market.
         * @property {AWS_EMR_Cluster_SimpleScalingPolicyConfiguration} SimpleScalingPolicyConfiguration SimpleScalingPolicyConfiguration.
         */
        /**
         * @param {AWS_EMR_Cluster_ScalingAction} properties
         * @returns {AWS_EMR_Cluster_ScalingAction}
         */
        static ScalingAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_StepConfig
         * @property {string} [ActionOnFailure] ActionOnFailure.
         * @property {AWS_EMR_Cluster_HadoopJarStepConfig} HadoopJarStep HadoopJarStep.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_EMR_Cluster_StepConfig} properties
         * @returns {AWS_EMR_Cluster_StepConfig}
         */
        static StepConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_KerberosAttributes
         * @property {string} [ADDomainJoinPassword] ADDomainJoinPassword.
         * @property {string} [ADDomainJoinUser] ADDomainJoinUser.
         * @property {string} [CrossRealmTrustPrincipalPassword] CrossRealmTrustPrincipalPassword.
         * @property {string} KdcAdminPassword KdcAdminPassword.
         * @property {string} Realm Realm.
         */
        /**
         * @param {AWS_EMR_Cluster_KerberosAttributes} properties
         * @returns {AWS_EMR_Cluster_KerberosAttributes}
         */
        static KerberosAttributes(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_SimpleScalingPolicyConfiguration
         * @property {string} [AdjustmentType] AdjustmentType.
         * @property {number} [CoolDown] CoolDown.
         * @property {number} ScalingAdjustment ScalingAdjustment.
         */
        /**
         * @param {AWS_EMR_Cluster_SimpleScalingPolicyConfiguration} properties
         * @returns {AWS_EMR_Cluster_SimpleScalingPolicyConfiguration}
         */
        static SimpleScalingPolicyConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_Application
         * @property {AWS_EMR_Cluster_Map} [AdditionalInfo] AdditionalInfo.
         * @property {string[]} [Args] Args.
         * @property {string} [Name] Name.
         * @property {string} [Version] Version.
         */
        /**
         * @param {AWS_EMR_Cluster_Application} properties
         * @returns {AWS_EMR_Cluster_Application}
         */
        static Application(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_EbsBlockDeviceConfig
         * @property {AWS_EMR_Cluster_VolumeSpecification} VolumeSpecification VolumeSpecification.
         * @property {number} [VolumesPerInstance] VolumesPerInstance.
         */
        /**
         * @param {AWS_EMR_Cluster_EbsBlockDeviceConfig} properties
         * @returns {AWS_EMR_Cluster_EbsBlockDeviceConfig}
         */
        static EbsBlockDeviceConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_PlacementType
         * @property {string} AvailabilityZone AvailabilityZone.
         */
        /**
         * @param {AWS_EMR_Cluster_PlacementType} properties
         * @returns {AWS_EMR_Cluster_PlacementType}
         */
        static PlacementType(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_Configuration
         * @property {string} [Classification] Classification.
         * @property {AWS_EMR_Cluster_Map} [ConfigurationProperties] ConfigurationProperties.
         * @property {AWS_EMR_Cluster_Configuration[]} [Configurations] Configurations.
         */
        /**
         * @param {AWS_EMR_Cluster_Configuration} properties
         * @returns {AWS_EMR_Cluster_Configuration}
         */
        static Configuration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_ScriptBootstrapActionConfig
         * @property {string[]} [Args] Args.
         * @property {string} Path Path.
         */
        /**
         * @param {AWS_EMR_Cluster_ScriptBootstrapActionConfig} properties
         * @returns {AWS_EMR_Cluster_ScriptBootstrapActionConfig}
         */
        static ScriptBootstrapActionConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_CloudWatchAlarmDefinition
         * @property {string} ComparisonOperator ComparisonOperator.
         * @property {AWS_EMR_Cluster_MetricDimension[]} [Dimensions] Dimensions.
         * @property {number} [EvaluationPeriods] EvaluationPeriods.
         * @property {string} MetricName MetricName.
         * @property {string} [Namespace] Namespace.
         * @property {number} Period Period.
         * @property {string} [Statistic] Statistic.
         * @property {number} Threshold Threshold.
         * @property {string} [Unit] Unit.
         */
        /**
         * @param {AWS_EMR_Cluster_CloudWatchAlarmDefinition} properties
         * @returns {AWS_EMR_Cluster_CloudWatchAlarmDefinition}
         */
        static CloudWatchAlarmDefinition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_EbsConfiguration
         * @property {AWS_EMR_Cluster_EbsBlockDeviceConfig[]} [EbsBlockDeviceConfigs] EbsBlockDeviceConfigs.
         * @property {boolean} [EbsOptimized] EbsOptimized.
         */
        /**
         * @param {AWS_EMR_Cluster_EbsConfiguration} properties
         * @returns {AWS_EMR_Cluster_EbsConfiguration}
         */
        static EbsConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_ScalingRule
         * @property {AWS_EMR_Cluster_ScalingAction} Action Action.
         * @property {string} [Description] Description.
         * @property {string} Name Name.
         * @property {AWS_EMR_Cluster_ScalingTrigger} Trigger Trigger.
         */
        /**
         * @param {AWS_EMR_Cluster_ScalingRule} properties
         * @returns {AWS_EMR_Cluster_ScalingRule}
         */
        static ScalingRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_KeyValue
         * @property {string} [Key] Key.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_EMR_Cluster_KeyValue} properties
         * @returns {AWS_EMR_Cluster_KeyValue}
         */
        static KeyValue(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_InstanceTypeConfig
         * @property {string} [BidPrice] BidPrice.
         * @property {number} [BidPriceAsPercentageOfOnDemandPrice] BidPriceAsPercentageOfOnDemandPrice.
         * @property {AWS_EMR_Cluster_Configuration[]} [Configurations] Configurations.
         * @property {AWS_EMR_Cluster_EbsConfiguration} [EbsConfiguration] EbsConfiguration.
         * @property {string} InstanceType InstanceType.
         * @property {number} [WeightedCapacity] WeightedCapacity.
         */
        /**
         * @param {AWS_EMR_Cluster_InstanceTypeConfig} properties
         * @returns {AWS_EMR_Cluster_InstanceTypeConfig}
         */
        static InstanceTypeConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_MetricDimension
         * @property {string} Key Key.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_EMR_Cluster_MetricDimension} properties
         * @returns {AWS_EMR_Cluster_MetricDimension}
         */
        static MetricDimension(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_VolumeSpecification
         * @property {number} [Iops] Iops.
         * @property {number} SizeInGB SizeInGB.
         * @property {string} VolumeType VolumeType.
         */
        /**
         * @param {AWS_EMR_Cluster_VolumeSpecification} properties
         * @returns {AWS_EMR_Cluster_VolumeSpecification}
         */
        static VolumeSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_AutoScalingPolicy
         * @property {AWS_EMR_Cluster_ScalingConstraints} Constraints Constraints.
         * @property {AWS_EMR_Cluster_ScalingRule[]} Rules Rules.
         */
        /**
         * @param {AWS_EMR_Cluster_AutoScalingPolicy} properties
         * @returns {AWS_EMR_Cluster_AutoScalingPolicy}
         */
        static AutoScalingPolicy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_InstanceFleetProvisioningSpecifications
         * @property {AWS_EMR_Cluster_SpotProvisioningSpecification} SpotSpecification SpotSpecification.
         */
        /**
         * @param {AWS_EMR_Cluster_InstanceFleetProvisioningSpecifications} properties
         * @returns {AWS_EMR_Cluster_InstanceFleetProvisioningSpecifications}
         */
        static InstanceFleetProvisioningSpecifications(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_HadoopJarStepConfig
         * @property {string[]} [Args] Args.
         * @property {string} Jar Jar.
         * @property {string} [MainClass] MainClass.
         * @property {AWS_EMR_Cluster_KeyValue[]} [StepProperties] StepProperties.
         */
        /**
         * @param {AWS_EMR_Cluster_HadoopJarStepConfig} properties
         * @returns {AWS_EMR_Cluster_HadoopJarStepConfig}
         */
        static HadoopJarStepConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Cluster_ScalingTrigger
         * @property {AWS_EMR_Cluster_CloudWatchAlarmDefinition} CloudWatchAlarmDefinition CloudWatchAlarmDefinition.
         */
        /**
         * @param {AWS_EMR_Cluster_ScalingTrigger} properties
         * @returns {AWS_EMR_Cluster_ScalingTrigger}
         */
        static ScalingTrigger(properties) { return properties; }
      },
      /**
       * @namespace InstanceGroupConfig
       */
      InstanceGroupConfig: class {
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig
         * @property {AWS_EMR_InstanceGroupConfig_AutoScalingPolicy} [AutoScalingPolicy] AutoScalingPolicy.
         * @property {string} [BidPrice] BidPrice.
         * @property {AWS_EMR_InstanceGroupConfig_Configuration[]} [Configurations] Configurations.
         * @property {AWS_EMR_InstanceGroupConfig_EbsConfiguration} [EbsConfiguration] EbsConfiguration.
         * @property {number} InstanceCount InstanceCount.
         * @property {string} InstanceRole InstanceRole.
         * @property {string} InstanceType InstanceType.
         * @property {string} JobFlowId JobFlowId.
         * @property {string} [Market] Market.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::EMR::InstanceGroupConfig
         * @param {AWS_EMR_InstanceGroupConfig} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_EbsBlockDeviceConfig
         * @property {AWS_EMR_InstanceGroupConfig_VolumeSpecification} VolumeSpecification VolumeSpecification.
         * @property {number} [VolumesPerInstance] VolumesPerInstance.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_EbsBlockDeviceConfig} properties
         * @returns {AWS_EMR_InstanceGroupConfig_EbsBlockDeviceConfig}
         */
        static EbsBlockDeviceConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_Configuration
         * @property {string} [Classification] Classification.
         * @property {AWS_EMR_InstanceGroupConfig_Map} [ConfigurationProperties] ConfigurationProperties.
         * @property {AWS_EMR_InstanceGroupConfig_Configuration[]} [Configurations] Configurations.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_Configuration} properties
         * @returns {AWS_EMR_InstanceGroupConfig_Configuration}
         */
        static Configuration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_MetricDimension
         * @property {string} Key Key.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_MetricDimension} properties
         * @returns {AWS_EMR_InstanceGroupConfig_MetricDimension}
         */
        static MetricDimension(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_SimpleScalingPolicyConfiguration
         * @property {string} [AdjustmentType] AdjustmentType.
         * @property {number} [CoolDown] CoolDown.
         * @property {number} ScalingAdjustment ScalingAdjustment.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_SimpleScalingPolicyConfiguration} properties
         * @returns {AWS_EMR_InstanceGroupConfig_SimpleScalingPolicyConfiguration}
         */
        static SimpleScalingPolicyConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_ScalingRule
         * @property {AWS_EMR_InstanceGroupConfig_ScalingAction} Action Action.
         * @property {string} [Description] Description.
         * @property {string} Name Name.
         * @property {AWS_EMR_InstanceGroupConfig_ScalingTrigger} Trigger Trigger.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_ScalingRule} properties
         * @returns {AWS_EMR_InstanceGroupConfig_ScalingRule}
         */
        static ScalingRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_ScalingAction
         * @property {string} [Market] Market.
         * @property {AWS_EMR_InstanceGroupConfig_SimpleScalingPolicyConfiguration} SimpleScalingPolicyConfiguration SimpleScalingPolicyConfiguration.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_ScalingAction} properties
         * @returns {AWS_EMR_InstanceGroupConfig_ScalingAction}
         */
        static ScalingAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_ScalingTrigger
         * @property {AWS_EMR_InstanceGroupConfig_CloudWatchAlarmDefinition} CloudWatchAlarmDefinition CloudWatchAlarmDefinition.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_ScalingTrigger} properties
         * @returns {AWS_EMR_InstanceGroupConfig_ScalingTrigger}
         */
        static ScalingTrigger(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_ScalingConstraints
         * @property {number} MaxCapacity MaxCapacity.
         * @property {number} MinCapacity MinCapacity.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_ScalingConstraints} properties
         * @returns {AWS_EMR_InstanceGroupConfig_ScalingConstraints}
         */
        static ScalingConstraints(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_CloudWatchAlarmDefinition
         * @property {string} ComparisonOperator ComparisonOperator.
         * @property {AWS_EMR_InstanceGroupConfig_MetricDimension[]} [Dimensions] Dimensions.
         * @property {number} [EvaluationPeriods] EvaluationPeriods.
         * @property {string} MetricName MetricName.
         * @property {string} [Namespace] Namespace.
         * @property {number} Period Period.
         * @property {string} [Statistic] Statistic.
         * @property {number} Threshold Threshold.
         * @property {string} [Unit] Unit.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_CloudWatchAlarmDefinition} properties
         * @returns {AWS_EMR_InstanceGroupConfig_CloudWatchAlarmDefinition}
         */
        static CloudWatchAlarmDefinition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_VolumeSpecification
         * @property {number} [Iops] Iops.
         * @property {number} SizeInGB SizeInGB.
         * @property {string} VolumeType VolumeType.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_VolumeSpecification} properties
         * @returns {AWS_EMR_InstanceGroupConfig_VolumeSpecification}
         */
        static VolumeSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_AutoScalingPolicy
         * @property {AWS_EMR_InstanceGroupConfig_ScalingConstraints} Constraints Constraints.
         * @property {AWS_EMR_InstanceGroupConfig_ScalingRule[]} Rules Rules.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_AutoScalingPolicy} properties
         * @returns {AWS_EMR_InstanceGroupConfig_AutoScalingPolicy}
         */
        static AutoScalingPolicy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_InstanceGroupConfig_EbsConfiguration
         * @property {AWS_EMR_InstanceGroupConfig_EbsBlockDeviceConfig[]} [EbsBlockDeviceConfigs] EbsBlockDeviceConfigs.
         * @property {boolean} [EbsOptimized] EbsOptimized.
         */
        /**
         * @param {AWS_EMR_InstanceGroupConfig_EbsConfiguration} properties
         * @returns {AWS_EMR_InstanceGroupConfig_EbsConfiguration}
         */
        static EbsConfiguration(properties) { return properties; }
      },
      /**
       * @namespace Step
       */
      Step: class {
        /**
         * @typedef {Object} AWS_EMR_Step
         * @property {string} ActionOnFailure ActionOnFailure.
         * @property {AWS_EMR_Step_HadoopJarStepConfig} HadoopJarStep HadoopJarStep.
         * @property {string} JobFlowId JobFlowId.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::EMR::Step
         * @param {AWS_EMR_Step} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EMR_Step_HadoopJarStepConfig
         * @property {string[]} [Args] Args.
         * @property {string} Jar Jar.
         * @property {string} [MainClass] MainClass.
         * @property {AWS_EMR_Step_KeyValue[]} [StepProperties] StepProperties.
         */
        /**
         * @param {AWS_EMR_Step_HadoopJarStepConfig} properties
         * @returns {AWS_EMR_Step_HadoopJarStepConfig}
         */
        static HadoopJarStepConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_EMR_Step_KeyValue
         * @property {string} [Key] Key.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_EMR_Step_KeyValue} properties
         * @returns {AWS_EMR_Step_KeyValue}
         */
        static KeyValue(properties) { return properties; }
      },
      /**
       * @namespace SecurityConfiguration
       */
      SecurityConfiguration: class {
        /**
         * @typedef {Object} AWS_EMR_SecurityConfiguration
         * @property {string} [Name] Name.
         * @property {string} SecurityConfiguration SecurityConfiguration.
         */
        /**
         * Create a new AWS::EMR::SecurityConfiguration
         * @param {AWS_EMR_SecurityConfiguration} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace WorkSpaces
     */
    WorkSpaces: {
      /**
       * @namespace Workspace
       */
      Workspace: class {
        /**
         * @typedef {Object} AWS_WorkSpaces_Workspace
         * @property {string} BundleId BundleId.
         * @property {string} DirectoryId DirectoryId.
         * @property {boolean} [RootVolumeEncryptionEnabled] RootVolumeEncryptionEnabled.
         * @property {AWS_WorkSpaces_Workspace_Tag[]} [Tags] Tags.
         * @property {string} UserName UserName.
         * @property {boolean} [UserVolumeEncryptionEnabled] UserVolumeEncryptionEnabled.
         * @property {string} [VolumeEncryptionKey] VolumeEncryptionKey.
         * @property {AWS_WorkSpaces_Workspace_WorkspaceProperties} [WorkspaceProperties] WorkspaceProperties.
         */
        /**
         * Create a new AWS::WorkSpaces::Workspace
         * @param {AWS_WorkSpaces_Workspace} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_WorkSpaces_Workspace_WorkspaceProperties
         * @property {string} [ComputeTypeName] ComputeTypeName.
         * @property {number} [RootVolumeSizeGib] RootVolumeSizeGib.
         * @property {string} [RunningMode] RunningMode.
         * @property {number} [RunningModeAutoStopTimeoutInMinutes] RunningModeAutoStopTimeoutInMinutes.
         * @property {number} [UserVolumeSizeGib] UserVolumeSizeGib.
         */
        /**
         * @param {AWS_WorkSpaces_Workspace_WorkspaceProperties} properties
         * @returns {AWS_WorkSpaces_Workspace_WorkspaceProperties}
         */
        static WorkspaceProperties(properties) { return properties; }
      }
    },
    /**
     * @namespace ApiGatewayV2
     */
    ApiGatewayV2: {
      /**
       * @namespace Route
       */
      Route: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Route
         * @property {string} [Target] Target.
         * @property {string} [RouteResponseSelectionExpression] RouteResponseSelectionExpression.
         * @property {string} [AuthorizerId] AuthorizerId.
         * @property {string} [RequestModels] RequestModels.
         * @property {string} [OperationName] OperationName.
         * @property {string[]} [AuthorizationScopes] AuthorizationScopes.
         * @property {boolean} [ApiKeyRequired] ApiKeyRequired.
         * @property {string} RouteKey RouteKey.
         * @property {string} [AuthorizationType] AuthorizationType.
         * @property {string} [ModelSelectionExpression] ModelSelectionExpression.
         * @property {string} ApiId ApiId.
         * @property {string} [RequestParameters] RequestParameters.
         */
        /**
         * Create a new AWS::ApiGatewayV2::Route
         * @param {AWS_ApiGatewayV2_Route} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Route_ParameterConstraints
         * @property {boolean} Required Required.
         */
        /**
         * @param {AWS_ApiGatewayV2_Route_ParameterConstraints} properties
         * @returns {AWS_ApiGatewayV2_Route_ParameterConstraints}
         */
        static ParameterConstraints(properties) { return properties; }
      },
      /**
       * @namespace Integration
       */
      Integration: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Integration
         * @property {string} [Description] Description.
         * @property {string} [TemplateSelectionExpression] TemplateSelectionExpression.
         * @property {string} [ConnectionType] ConnectionType.
         * @property {string} [IntegrationMethod] IntegrationMethod.
         * @property {string} [PassthroughBehavior] PassthroughBehavior.
         * @property {string} [RequestParameters] RequestParameters.
         * @property {string} [IntegrationUri] IntegrationUri.
         * @property {string} [CredentialsArn] CredentialsArn.
         * @property {string} [RequestTemplates] RequestTemplates.
         * @property {number} [TimeoutInMillis] TimeoutInMillis.
         * @property {string} [ContentHandlingStrategy] ContentHandlingStrategy.
         * @property {string} ApiId ApiId.
         * @property {string} IntegrationType IntegrationType.
         */
        /**
         * Create a new AWS::ApiGatewayV2::Integration
         * @param {AWS_ApiGatewayV2_Integration} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Stage
       */
      Stage: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Stage
         * @property {string} [ClientCertificateId] ClientCertificateId.
         * @property {string} DeploymentId DeploymentId.
         * @property {string} [Description] Description.
         * @property {AWS_ApiGatewayV2_Stage_AccessLogSettings} [AccessLogSettings] AccessLogSettings.
         * @property {string} [RouteSettings] RouteSettings.
         * @property {string} StageName StageName.
         * @property {string} [StageVariables] StageVariables.
         * @property {string} ApiId ApiId.
         * @property {AWS_ApiGatewayV2_Stage_RouteSettings} [DefaultRouteSettings] DefaultRouteSettings.
         */
        /**
         * Create a new AWS::ApiGatewayV2::Stage
         * @param {AWS_ApiGatewayV2_Stage} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Stage_AccessLogSettings
         * @property {string} [Format] Format.
         * @property {string} [DestinationArn] DestinationArn.
         */
        /**
         * @param {AWS_ApiGatewayV2_Stage_AccessLogSettings} properties
         * @returns {AWS_ApiGatewayV2_Stage_AccessLogSettings}
         */
        static AccessLogSettings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Stage_RouteSettings
         * @property {string} [LoggingLevel] LoggingLevel.
         * @property {boolean} [DataTraceEnabled] DataTraceEnabled.
         * @property {number} [ThrottlingBurstLimit] ThrottlingBurstLimit.
         * @property {boolean} [DetailedMetricsEnabled] DetailedMetricsEnabled.
         * @property {number} [ThrottlingRateLimit] ThrottlingRateLimit.
         */
        /**
         * @param {AWS_ApiGatewayV2_Stage_RouteSettings} properties
         * @returns {AWS_ApiGatewayV2_Stage_RouteSettings}
         */
        static RouteSettings(properties) { return properties; }
      },
      /**
       * @namespace Deployment
       */
      Deployment: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Deployment
         * @property {string} [Description] Description.
         * @property {string} [StageName] StageName.
         * @property {string} ApiId ApiId.
         */
        /**
         * Create a new AWS::ApiGatewayV2::Deployment
         * @param {AWS_ApiGatewayV2_Deployment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Model
       */
      Model: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Model
         * @property {string} [Description] Description.
         * @property {string} [ContentType] ContentType.
         * @property {string} Schema Schema.
         * @property {string} ApiId ApiId.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::ApiGatewayV2::Model
         * @param {AWS_ApiGatewayV2_Model} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Authorizer
       */
      Authorizer: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Authorizer
         * @property {string} [IdentityValidationExpression] IdentityValidationExpression.
         * @property {string} AuthorizerUri AuthorizerUri.
         * @property {string} [AuthorizerCredentialsArn] AuthorizerCredentialsArn.
         * @property {string} AuthorizerType AuthorizerType.
         * @property {number} [AuthorizerResultTtlInSeconds] AuthorizerResultTtlInSeconds.
         * @property {string[]} IdentitySource IdentitySource.
         * @property {string} ApiId ApiId.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::ApiGatewayV2::Authorizer
         * @param {AWS_ApiGatewayV2_Authorizer} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Api
       */
      Api: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_Api
         * @property {string} RouteSelectionExpression RouteSelectionExpression.
         * @property {string} [Description] Description.
         * @property {string} [Version] Version.
         * @property {string} ProtocolType ProtocolType.
         * @property {boolean} [DisableSchemaValidation] DisableSchemaValidation.
         * @property {string} Name Name.
         * @property {string} [ApiKeySelectionExpression] ApiKeySelectionExpression.
         */
        /**
         * Create a new AWS::ApiGatewayV2::Api
         * @param {AWS_ApiGatewayV2_Api} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace RouteResponse
       */
      RouteResponse: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_RouteResponse
         * @property {string} RouteResponseKey RouteResponseKey.
         * @property {string} [ResponseParameters] ResponseParameters.
         * @property {string} RouteId RouteId.
         * @property {string} [ModelSelectionExpression] ModelSelectionExpression.
         * @property {string} ApiId ApiId.
         * @property {string} [ResponseModels] ResponseModels.
         */
        /**
         * Create a new AWS::ApiGatewayV2::RouteResponse
         * @param {AWS_ApiGatewayV2_RouteResponse} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApiGatewayV2_RouteResponse_ParameterConstraints
         * @property {boolean} Required Required.
         */
        /**
         * @param {AWS_ApiGatewayV2_RouteResponse_ParameterConstraints} properties
         * @returns {AWS_ApiGatewayV2_RouteResponse_ParameterConstraints}
         */
        static ParameterConstraints(properties) { return properties; }
      },
      /**
       * @namespace IntegrationResponse
       */
      IntegrationResponse: class {
        /**
         * @typedef {Object} AWS_ApiGatewayV2_IntegrationResponse
         * @property {string} [ResponseTemplates] ResponseTemplates.
         * @property {string} [TemplateSelectionExpression] TemplateSelectionExpression.
         * @property {string} [ResponseParameters] ResponseParameters.
         * @property {string} [ContentHandlingStrategy] ContentHandlingStrategy.
         * @property {string} IntegrationId IntegrationId.
         * @property {string} IntegrationResponseKey IntegrationResponseKey.
         * @property {string} ApiId ApiId.
         */
        /**
         * Create a new AWS::ApiGatewayV2::IntegrationResponse
         * @param {AWS_ApiGatewayV2_IntegrationResponse} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Logs
     */
    Logs: {
      /**
       * @namespace LogGroup
       */
      LogGroup: class {
        /**
         * @typedef {Object} AWS_Logs_LogGroup
         * @property {string} [LogGroupName] LogGroupName.
         * @property {number} [RetentionInDays] RetentionInDays.
         */
        /**
         * Create a new AWS::Logs::LogGroup
         * @param {AWS_Logs_LogGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace MetricFilter
       */
      MetricFilter: class {
        /**
         * @typedef {Object} AWS_Logs_MetricFilter
         * @property {string} FilterPattern FilterPattern.
         * @property {string} LogGroupName LogGroupName.
         * @property {AWS_Logs_MetricFilter_MetricTransformation[]} MetricTransformations MetricTransformations.
         */
        /**
         * Create a new AWS::Logs::MetricFilter
         * @param {AWS_Logs_MetricFilter} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Logs_MetricFilter_MetricTransformation
         * @property {number} [DefaultValue] DefaultValue.
         * @property {string} MetricName MetricName.
         * @property {string} MetricNamespace MetricNamespace.
         * @property {string} MetricValue MetricValue.
         */
        /**
         * @param {AWS_Logs_MetricFilter_MetricTransformation} properties
         * @returns {AWS_Logs_MetricFilter_MetricTransformation}
         */
        static MetricTransformation(properties) { return properties; }
      },
      /**
       * @namespace LogStream
       */
      LogStream: class {
        /**
         * @typedef {Object} AWS_Logs_LogStream
         * @property {string} LogGroupName LogGroupName.
         * @property {string} [LogStreamName] LogStreamName.
         */
        /**
         * Create a new AWS::Logs::LogStream
         * @param {AWS_Logs_LogStream} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SubscriptionFilter
       */
      SubscriptionFilter: class {
        /**
         * @typedef {Object} AWS_Logs_SubscriptionFilter
         * @property {string} DestinationArn DestinationArn.
         * @property {string} FilterPattern FilterPattern.
         * @property {string} LogGroupName LogGroupName.
         * @property {string} [RoleArn] RoleArn.
         */
        /**
         * Create a new AWS::Logs::SubscriptionFilter
         * @param {AWS_Logs_SubscriptionFilter} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Destination
       */
      Destination: class {
        /**
         * @typedef {Object} AWS_Logs_Destination
         * @property {string} DestinationName DestinationName.
         * @property {string} DestinationPolicy DestinationPolicy.
         * @property {string} RoleArn RoleArn.
         * @property {string} TargetArn TargetArn.
         */
        /**
         * Create a new AWS::Logs::Destination
         * @param {AWS_Logs_Destination} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Kinesis
     */
    Kinesis: {
      /**
       * @namespace Stream
       */
      Stream: class {
        /**
         * @typedef {Object} AWS_Kinesis_Stream
         * @property {string} [Name] Name.
         * @property {number} [RetentionPeriodHours] RetentionPeriodHours.
         * @property {number} ShardCount ShardCount.
         * @property {AWS_Kinesis_Stream_StreamEncryption} [StreamEncryption] StreamEncryption.
         * @property {AWS_Kinesis_Stream_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::Kinesis::Stream
         * @param {AWS_Kinesis_Stream} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Kinesis_Stream_StreamEncryption
         * @property {string} EncryptionType EncryptionType.
         * @property {string} KeyId KeyId.
         */
        /**
         * @param {AWS_Kinesis_Stream_StreamEncryption} properties
         * @returns {AWS_Kinesis_Stream_StreamEncryption}
         */
        static StreamEncryption(properties) { return properties; }
      },
      /**
       * @namespace StreamConsumer
       */
      StreamConsumer: class {
        /**
         * @typedef {Object} AWS_Kinesis_StreamConsumer
         * @property {string} ConsumerName ConsumerName.
         * @property {string} StreamARN StreamARN.
         */
        /**
         * Create a new AWS::Kinesis::StreamConsumer
         * @param {AWS_Kinesis_StreamConsumer} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace RAM
     */
    RAM: {
      /**
       * @namespace ResourceShare
       */
      ResourceShare: class {
        /**
         * @typedef {Object} AWS_RAM_ResourceShare
         * @property {string[]} [Principals] Principals.
         * @property {boolean} [AllowExternalPrincipals] AllowExternalPrincipals.
         * @property {string[]} [ResourceArns] ResourceArns.
         * @property {AWS_RAM_ResourceShare_Tag[]} [Tags] Tags.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::RAM::ResourceShare
         * @param {AWS_RAM_ResourceShare} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace AutoScaling
     */
    AutoScaling: {
      /**
       * @namespace LaunchConfiguration
       */
      LaunchConfiguration: class {
        /**
         * @typedef {Object} AWS_AutoScaling_LaunchConfiguration
         * @property {boolean} [AssociatePublicIpAddress] AssociatePublicIpAddress.
         * @property {AWS_AutoScaling_LaunchConfiguration_BlockDeviceMapping[]} [BlockDeviceMappings] BlockDeviceMappings.
         * @property {string} [ClassicLinkVPCId] ClassicLinkVPCId.
         * @property {string[]} [ClassicLinkVPCSecurityGroups] ClassicLinkVPCSecurityGroups.
         * @property {boolean} [EbsOptimized] EbsOptimized.
         * @property {string} [IamInstanceProfile] IamInstanceProfile.
         * @property {string} ImageId ImageId.
         * @property {string} [InstanceId] InstanceId.
         * @property {boolean} [InstanceMonitoring] InstanceMonitoring.
         * @property {string} InstanceType InstanceType.
         * @property {string} [KernelId] KernelId.
         * @property {string} [KeyName] KeyName.
         * @property {string} [LaunchConfigurationName] LaunchConfigurationName.
         * @property {string} [PlacementTenancy] PlacementTenancy.
         * @property {string} [RamDiskId] RamDiskId.
         * @property {string[]} [SecurityGroups] SecurityGroups.
         * @property {string} [SpotPrice] SpotPrice.
         * @property {string} [UserData] UserData.
         */
        /**
         * Create a new AWS::AutoScaling::LaunchConfiguration
         * @param {AWS_AutoScaling_LaunchConfiguration} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AutoScaling_LaunchConfiguration_BlockDeviceMapping
         * @property {string} DeviceName DeviceName.
         * @property {AWS_AutoScaling_LaunchConfiguration_BlockDevice} [Ebs] Ebs.
         * @property {boolean} [NoDevice] NoDevice.
         * @property {string} [VirtualName] VirtualName.
         */
        /**
         * @param {AWS_AutoScaling_LaunchConfiguration_BlockDeviceMapping} properties
         * @returns {AWS_AutoScaling_LaunchConfiguration_BlockDeviceMapping}
         */
        static BlockDeviceMapping(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_LaunchConfiguration_BlockDevice
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         * @property {boolean} [Encrypted] Encrypted.
         * @property {number} [Iops] Iops.
         * @property {string} [SnapshotId] SnapshotId.
         * @property {number} [VolumeSize] VolumeSize.
         * @property {string} [VolumeType] VolumeType.
         */
        /**
         * @param {AWS_AutoScaling_LaunchConfiguration_BlockDevice} properties
         * @returns {AWS_AutoScaling_LaunchConfiguration_BlockDevice}
         */
        static BlockDevice(properties) { return properties; }
      },
      /**
       * @namespace LifecycleHook
       */
      LifecycleHook: class {
        /**
         * @typedef {Object} AWS_AutoScaling_LifecycleHook
         * @property {string} AutoScalingGroupName AutoScalingGroupName.
         * @property {string} [DefaultResult] DefaultResult.
         * @property {number} [HeartbeatTimeout] HeartbeatTimeout.
         * @property {string} [LifecycleHookName] LifecycleHookName.
         * @property {string} LifecycleTransition LifecycleTransition.
         * @property {string} [NotificationMetadata] NotificationMetadata.
         * @property {string} [NotificationTargetARN] NotificationTargetARN.
         * @property {string} [RoleARN] RoleARN.
         */
        /**
         * Create a new AWS::AutoScaling::LifecycleHook
         * @param {AWS_AutoScaling_LifecycleHook} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ScalingPolicy
       */
      ScalingPolicy: class {
        /**
         * @typedef {Object} AWS_AutoScaling_ScalingPolicy
         * @property {string} [AdjustmentType] AdjustmentType.
         * @property {string} AutoScalingGroupName AutoScalingGroupName.
         * @property {string} [Cooldown] Cooldown.
         * @property {number} [EstimatedInstanceWarmup] EstimatedInstanceWarmup.
         * @property {string} [MetricAggregationType] MetricAggregationType.
         * @property {number} [MinAdjustmentMagnitude] MinAdjustmentMagnitude.
         * @property {string} [PolicyType] PolicyType.
         * @property {number} [ScalingAdjustment] ScalingAdjustment.
         * @property {AWS_AutoScaling_ScalingPolicy_StepAdjustment[]} [StepAdjustments] StepAdjustments.
         * @property {AWS_AutoScaling_ScalingPolicy_TargetTrackingConfiguration} [TargetTrackingConfiguration] TargetTrackingConfiguration.
         */
        /**
         * Create a new AWS::AutoScaling::ScalingPolicy
         * @param {AWS_AutoScaling_ScalingPolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AutoScaling_ScalingPolicy_MetricDimension
         * @property {string} Name Name.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_AutoScaling_ScalingPolicy_MetricDimension} properties
         * @returns {AWS_AutoScaling_ScalingPolicy_MetricDimension}
         */
        static MetricDimension(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_ScalingPolicy_CustomizedMetricSpecification
         * @property {AWS_AutoScaling_ScalingPolicy_MetricDimension[]} [Dimensions] Dimensions.
         * @property {string} MetricName MetricName.
         * @property {string} Namespace Namespace.
         * @property {string} Statistic Statistic.
         * @property {string} [Unit] Unit.
         */
        /**
         * @param {AWS_AutoScaling_ScalingPolicy_CustomizedMetricSpecification} properties
         * @returns {AWS_AutoScaling_ScalingPolicy_CustomizedMetricSpecification}
         */
        static CustomizedMetricSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_ScalingPolicy_PredefinedMetricSpecification
         * @property {string} PredefinedMetricType PredefinedMetricType.
         * @property {string} [ResourceLabel] ResourceLabel.
         */
        /**
         * @param {AWS_AutoScaling_ScalingPolicy_PredefinedMetricSpecification} properties
         * @returns {AWS_AutoScaling_ScalingPolicy_PredefinedMetricSpecification}
         */
        static PredefinedMetricSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_ScalingPolicy_TargetTrackingConfiguration
         * @property {AWS_AutoScaling_ScalingPolicy_CustomizedMetricSpecification} [CustomizedMetricSpecification] CustomizedMetricSpecification.
         * @property {boolean} [DisableScaleIn] DisableScaleIn.
         * @property {AWS_AutoScaling_ScalingPolicy_PredefinedMetricSpecification} [PredefinedMetricSpecification] PredefinedMetricSpecification.
         * @property {number} TargetValue TargetValue.
         */
        /**
         * @param {AWS_AutoScaling_ScalingPolicy_TargetTrackingConfiguration} properties
         * @returns {AWS_AutoScaling_ScalingPolicy_TargetTrackingConfiguration}
         */
        static TargetTrackingConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_ScalingPolicy_StepAdjustment
         * @property {number} [MetricIntervalLowerBound] MetricIntervalLowerBound.
         * @property {number} [MetricIntervalUpperBound] MetricIntervalUpperBound.
         * @property {number} ScalingAdjustment ScalingAdjustment.
         */
        /**
         * @param {AWS_AutoScaling_ScalingPolicy_StepAdjustment} properties
         * @returns {AWS_AutoScaling_ScalingPolicy_StepAdjustment}
         */
        static StepAdjustment(properties) { return properties; }
      },
      /**
       * @namespace AutoScalingGroup
       */
      AutoScalingGroup: class {
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup
         * @property {string} [AutoScalingGroupName] AutoScalingGroupName.
         * @property {string[]} [AvailabilityZones] AvailabilityZones.
         * @property {string} [Cooldown] Cooldown.
         * @property {string} [DesiredCapacity] DesiredCapacity.
         * @property {number} [HealthCheckGracePeriod] HealthCheckGracePeriod.
         * @property {string} [HealthCheckType] HealthCheckType.
         * @property {string} [InstanceId] InstanceId.
         * @property {string} [LaunchConfigurationName] LaunchConfigurationName.
         * @property {AWS_AutoScaling_AutoScalingGroup_LaunchTemplateSpecification} [LaunchTemplate] LaunchTemplate.
         * @property {AWS_AutoScaling_AutoScalingGroup_LifecycleHookSpecification[]} [LifecycleHookSpecificationList] LifecycleHookSpecificationList.
         * @property {string[]} [LoadBalancerNames] LoadBalancerNames.
         * @property {string} MaxSize MaxSize.
         * @property {AWS_AutoScaling_AutoScalingGroup_MetricsCollection[]} [MetricsCollection] MetricsCollection.
         * @property {string} MinSize MinSize.
         * @property {AWS_AutoScaling_AutoScalingGroup_MixedInstancesPolicy} [MixedInstancesPolicy] MixedInstancesPolicy.
         * @property {AWS_AutoScaling_AutoScalingGroup_NotificationConfiguration[]} [NotificationConfigurations] NotificationConfigurations.
         * @property {string} [PlacementGroup] PlacementGroup.
         * @property {string} [ServiceLinkedRoleARN] ServiceLinkedRoleARN.
         * @property {AWS_AutoScaling_AutoScalingGroup_TagProperty[]} [Tags] Tags.
         * @property {string[]} [TargetGroupARNs] TargetGroupARNs.
         * @property {string[]} [TerminationPolicies] TerminationPolicies.
         * @property {string[]} [VPCZoneIdentifier] VPCZoneIdentifier.
         */
        /**
         * Create a new AWS::AutoScaling::AutoScalingGroup
         * @param {AWS_AutoScaling_AutoScalingGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_LaunchTemplateOverrides
         * @property {string} [InstanceType] InstanceType.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_LaunchTemplateOverrides} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_LaunchTemplateOverrides}
         */
        static LaunchTemplateOverrides(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_LifecycleHookSpecification
         * @property {string} [DefaultResult] DefaultResult.
         * @property {number} [HeartbeatTimeout] HeartbeatTimeout.
         * @property {string} LifecycleHookName LifecycleHookName.
         * @property {string} LifecycleTransition LifecycleTransition.
         * @property {string} [NotificationMetadata] NotificationMetadata.
         * @property {string} [NotificationTargetARN] NotificationTargetARN.
         * @property {string} [RoleARN] RoleARN.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_LifecycleHookSpecification} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_LifecycleHookSpecification}
         */
        static LifecycleHookSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_MixedInstancesPolicy
         * @property {AWS_AutoScaling_AutoScalingGroup_InstancesDistribution} [InstancesDistribution] InstancesDistribution.
         * @property {AWS_AutoScaling_AutoScalingGroup_LaunchTemplate} LaunchTemplate LaunchTemplate.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_MixedInstancesPolicy} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_MixedInstancesPolicy}
         */
        static MixedInstancesPolicy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_LaunchTemplateSpecification
         * @property {string} [LaunchTemplateId] LaunchTemplateId.
         * @property {string} [LaunchTemplateName] LaunchTemplateName.
         * @property {string} Version Version.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_LaunchTemplateSpecification} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_LaunchTemplateSpecification}
         */
        static LaunchTemplateSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_NotificationConfiguration
         * @property {string[]} [NotificationTypes] NotificationTypes.
         * @property {string} TopicARN TopicARN.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_NotificationConfiguration} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_NotificationConfiguration}
         */
        static NotificationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_MetricsCollection
         * @property {string} Granularity Granularity.
         * @property {string[]} [Metrics] Metrics.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_MetricsCollection} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_MetricsCollection}
         */
        static MetricsCollection(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_InstancesDistribution
         * @property {string} [OnDemandAllocationStrategy] OnDemandAllocationStrategy.
         * @property {number} [OnDemandBaseCapacity] OnDemandBaseCapacity.
         * @property {number} [OnDemandPercentageAboveBaseCapacity] OnDemandPercentageAboveBaseCapacity.
         * @property {string} [SpotAllocationStrategy] SpotAllocationStrategy.
         * @property {number} [SpotInstancePools] SpotInstancePools.
         * @property {string} [SpotMaxPrice] SpotMaxPrice.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_InstancesDistribution} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_InstancesDistribution}
         */
        static InstancesDistribution(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_LaunchTemplate
         * @property {AWS_AutoScaling_AutoScalingGroup_LaunchTemplateSpecification} LaunchTemplateSpecification LaunchTemplateSpecification.
         * @property {AWS_AutoScaling_AutoScalingGroup_LaunchTemplateOverrides[]} [Overrides] Overrides.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_LaunchTemplate} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_LaunchTemplate}
         */
        static LaunchTemplate(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScaling_AutoScalingGroup_TagProperty
         * @property {string} Key Key.
         * @property {boolean} PropagateAtLaunch PropagateAtLaunch.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_AutoScaling_AutoScalingGroup_TagProperty} properties
         * @returns {AWS_AutoScaling_AutoScalingGroup_TagProperty}
         */
        static TagProperty(properties) { return properties; }
      },
      /**
       * @namespace ScheduledAction
       */
      ScheduledAction: class {
        /**
         * @typedef {Object} AWS_AutoScaling_ScheduledAction
         * @property {string} AutoScalingGroupName AutoScalingGroupName.
         * @property {number} [DesiredCapacity] DesiredCapacity.
         * @property {string} [EndTime] EndTime.
         * @property {number} [MaxSize] MaxSize.
         * @property {number} [MinSize] MinSize.
         * @property {string} [Recurrence] Recurrence.
         * @property {string} [StartTime] StartTime.
         */
        /**
         * Create a new AWS::AutoScaling::ScheduledAction
         * @param {AWS_AutoScaling_ScheduledAction} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace SQS
     */
    SQS: {
      /**
       * @namespace Queue
       */
      Queue: class {
        /**
         * @typedef {Object} AWS_SQS_Queue
         * @property {boolean} [ContentBasedDeduplication] ContentBasedDeduplication.
         * @property {number} [DelaySeconds] DelaySeconds.
         * @property {boolean} [FifoQueue] FifoQueue.
         * @property {number} [KmsDataKeyReusePeriodSeconds] KmsDataKeyReusePeriodSeconds.
         * @property {string} [KmsMasterKeyId] KmsMasterKeyId.
         * @property {number} [MaximumMessageSize] MaximumMessageSize.
         * @property {number} [MessageRetentionPeriod] MessageRetentionPeriod.
         * @property {string} [QueueName] QueueName.
         * @property {number} [ReceiveMessageWaitTimeSeconds] ReceiveMessageWaitTimeSeconds.
         * @property {string} [RedrivePolicy] RedrivePolicy.
         * @property {AWS_SQS_Queue_Tag[]} [Tags] Tags.
         * @property {number} [VisibilityTimeout] VisibilityTimeout.
         */
        /**
         * Create a new AWS::SQS::Queue
         * @param {AWS_SQS_Queue} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace QueuePolicy
       */
      QueuePolicy: class {
        /**
         * @typedef {Object} AWS_SQS_QueuePolicy
         * @property {string} PolicyDocument PolicyDocument.
         * @property {string[]} Queues Queues.
         */
        /**
         * Create a new AWS::SQS::QueuePolicy
         * @param {AWS_SQS_QueuePolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace AppStream
     */
    AppStream: {
      /**
       * @namespace ImageBuilder
       */
      ImageBuilder: class {
        /**
         * @typedef {Object} AWS_AppStream_ImageBuilder
         * @property {string} [ImageName] ImageName.
         * @property {string} [Description] Description.
         * @property {AWS_AppStream_ImageBuilder_VpcConfig} [VpcConfig] VpcConfig.
         * @property {boolean} [EnableDefaultInternetAccess] EnableDefaultInternetAccess.
         * @property {string} [DisplayName] DisplayName.
         * @property {AWS_AppStream_ImageBuilder_DomainJoinInfo} [DomainJoinInfo] DomainJoinInfo.
         * @property {string} [AppstreamAgentVersion] AppstreamAgentVersion.
         * @property {string} InstanceType InstanceType.
         * @property {string} [Name] Name.
         * @property {string} [ImageArn] ImageArn.
         */
        /**
         * Create a new AWS::AppStream::ImageBuilder
         * @param {AWS_AppStream_ImageBuilder} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AppStream_ImageBuilder_VpcConfig
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string[]} [SubnetIds] SubnetIds.
         */
        /**
         * @param {AWS_AppStream_ImageBuilder_VpcConfig} properties
         * @returns {AWS_AppStream_ImageBuilder_VpcConfig}
         */
        static VpcConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppStream_ImageBuilder_DomainJoinInfo
         * @property {string} [OrganizationalUnitDistinguishedName] OrganizationalUnitDistinguishedName.
         * @property {string} [DirectoryName] DirectoryName.
         */
        /**
         * @param {AWS_AppStream_ImageBuilder_DomainJoinInfo} properties
         * @returns {AWS_AppStream_ImageBuilder_DomainJoinInfo}
         */
        static DomainJoinInfo(properties) { return properties; }
      },
      /**
       * @namespace Stack
       */
      Stack: class {
        /**
         * @typedef {Object} AWS_AppStream_Stack
         * @property {AWS_AppStream_Stack_ApplicationSettings} [ApplicationSettings] ApplicationSettings.
         * @property {string} [Description] Description.
         * @property {AWS_AppStream_Stack_StorageConnector[]} [StorageConnectors] StorageConnectors.
         * @property {boolean} [DeleteStorageConnectors] DeleteStorageConnectors.
         * @property {AWS_AppStream_Stack_UserSetting[]} [UserSettings] UserSettings.
         * @property {string[]} [AttributesToDelete] AttributesToDelete.
         * @property {string} [DisplayName] DisplayName.
         * @property {string} [RedirectURL] RedirectURL.
         * @property {string} [Name] Name.
         * @property {string} [FeedbackURL] FeedbackURL.
         */
        /**
         * Create a new AWS::AppStream::Stack
         * @param {AWS_AppStream_Stack} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AppStream_Stack_ApplicationSettings
         * @property {string} [SettingsGroup] SettingsGroup.
         * @property {boolean} Enabled Enabled.
         */
        /**
         * @param {AWS_AppStream_Stack_ApplicationSettings} properties
         * @returns {AWS_AppStream_Stack_ApplicationSettings}
         */
        static ApplicationSettings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppStream_Stack_StorageConnector
         * @property {string[]} [Domains] Domains.
         * @property {string} [ResourceIdentifier] ResourceIdentifier.
         * @property {string} ConnectorType ConnectorType.
         */
        /**
         * @param {AWS_AppStream_Stack_StorageConnector} properties
         * @returns {AWS_AppStream_Stack_StorageConnector}
         */
        static StorageConnector(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppStream_Stack_UserSetting
         * @property {string} Action Action.
         * @property {string} Permission Permission.
         */
        /**
         * @param {AWS_AppStream_Stack_UserSetting} properties
         * @returns {AWS_AppStream_Stack_UserSetting}
         */
        static UserSetting(properties) { return properties; }
      },
      /**
       * @namespace DirectoryConfig
       */
      DirectoryConfig: class {
        /**
         * @typedef {Object} AWS_AppStream_DirectoryConfig
         * @property {string[]} OrganizationalUnitDistinguishedNames OrganizationalUnitDistinguishedNames.
         * @property {AWS_AppStream_DirectoryConfig_ServiceAccountCredentials} ServiceAccountCredentials ServiceAccountCredentials.
         * @property {string} DirectoryName DirectoryName.
         */
        /**
         * Create a new AWS::AppStream::DirectoryConfig
         * @param {AWS_AppStream_DirectoryConfig} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AppStream_DirectoryConfig_ServiceAccountCredentials
         * @property {string} AccountName AccountName.
         * @property {string} AccountPassword AccountPassword.
         */
        /**
         * @param {AWS_AppStream_DirectoryConfig_ServiceAccountCredentials} properties
         * @returns {AWS_AppStream_DirectoryConfig_ServiceAccountCredentials}
         */
        static ServiceAccountCredentials(properties) { return properties; }
      },
      /**
       * @namespace StackFleetAssociation
       */
      StackFleetAssociation: class {
        /**
         * @typedef {Object} AWS_AppStream_StackFleetAssociation
         * @property {string} FleetName FleetName.
         * @property {string} StackName StackName.
         */
        /**
         * Create a new AWS::AppStream::StackFleetAssociation
         * @param {AWS_AppStream_StackFleetAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace StackUserAssociation
       */
      StackUserAssociation: class {
        /**
         * @typedef {Object} AWS_AppStream_StackUserAssociation
         * @property {boolean} [SendEmailNotification] SendEmailNotification.
         * @property {string} UserName UserName.
         * @property {string} StackName StackName.
         * @property {string} AuthenticationType AuthenticationType.
         */
        /**
         * Create a new AWS::AppStream::StackUserAssociation
         * @param {AWS_AppStream_StackUserAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace User
       */
      User: class {
        /**
         * @typedef {Object} AWS_AppStream_User
         * @property {string} UserName UserName.
         * @property {string} [FirstName] FirstName.
         * @property {string} [MessageAction] MessageAction.
         * @property {string} [LastName] LastName.
         * @property {string} AuthenticationType AuthenticationType.
         */
        /**
         * Create a new AWS::AppStream::User
         * @param {AWS_AppStream_User} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Fleet
       */
      Fleet: class {
        /**
         * @typedef {Object} AWS_AppStream_Fleet
         * @property {string} [Description] Description.
         * @property {AWS_AppStream_Fleet_ComputeCapacity} ComputeCapacity ComputeCapacity.
         * @property {AWS_AppStream_Fleet_VpcConfig} [VpcConfig] VpcConfig.
         * @property {string} [FleetType] FleetType.
         * @property {boolean} [EnableDefaultInternetAccess] EnableDefaultInternetAccess.
         * @property {AWS_AppStream_Fleet_DomainJoinInfo} [DomainJoinInfo] DomainJoinInfo.
         * @property {string} [Name] Name.
         * @property {string} [ImageName] ImageName.
         * @property {number} [MaxUserDurationInSeconds] MaxUserDurationInSeconds.
         * @property {number} [DisconnectTimeoutInSeconds] DisconnectTimeoutInSeconds.
         * @property {string} [DisplayName] DisplayName.
         * @property {string} InstanceType InstanceType.
         * @property {string} [ImageArn] ImageArn.
         */
        /**
         * Create a new AWS::AppStream::Fleet
         * @param {AWS_AppStream_Fleet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AppStream_Fleet_ComputeCapacity
         * @property {number} DesiredInstances DesiredInstances.
         */
        /**
         * @param {AWS_AppStream_Fleet_ComputeCapacity} properties
         * @returns {AWS_AppStream_Fleet_ComputeCapacity}
         */
        static ComputeCapacity(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppStream_Fleet_DomainJoinInfo
         * @property {string} [OrganizationalUnitDistinguishedName] OrganizationalUnitDistinguishedName.
         * @property {string} [DirectoryName] DirectoryName.
         */
        /**
         * @param {AWS_AppStream_Fleet_DomainJoinInfo} properties
         * @returns {AWS_AppStream_Fleet_DomainJoinInfo}
         */
        static DomainJoinInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AppStream_Fleet_VpcConfig
         * @property {string[]} [SubnetIds] SubnetIds.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         */
        /**
         * @param {AWS_AppStream_Fleet_VpcConfig} properties
         * @returns {AWS_AppStream_Fleet_VpcConfig}
         */
        static VpcConfig(properties) { return properties; }
      }
    },
    /**
     * @namespace AutoScalingPlans
     */
    AutoScalingPlans: {
      /**
       * @namespace ScalingPlan
       */
      ScalingPlan: class {
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan
         * @property {AWS_AutoScalingPlans_ScalingPlan_ApplicationSource} ApplicationSource ApplicationSource.
         * @property {AWS_AutoScalingPlans_ScalingPlan_ScalingInstruction[]} ScalingInstructions ScalingInstructions.
         */
        /**
         * Create a new AWS::AutoScalingPlans::ScalingPlan
         * @param {AWS_AutoScalingPlans_ScalingPlan} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_ApplicationSource
         * @property {string} [CloudFormationStackARN] CloudFormationStackARN.
         * @property {AWS_AutoScalingPlans_ScalingPlan_TagFilter[]} [TagFilters] TagFilters.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_ApplicationSource} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_ApplicationSource}
         */
        static ApplicationSource(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_ScalingInstruction
         * @property {boolean} [DisableDynamicScaling] DisableDynamicScaling.
         * @property {string} ServiceNamespace ServiceNamespace.
         * @property {string} [PredictiveScalingMaxCapacityBehavior] PredictiveScalingMaxCapacityBehavior.
         * @property {string} ScalableDimension ScalableDimension.
         * @property {string} [ScalingPolicyUpdateBehavior] ScalingPolicyUpdateBehavior.
         * @property {number} MinCapacity MinCapacity.
         * @property {AWS_AutoScalingPlans_ScalingPlan_TargetTrackingConfiguration[]} TargetTrackingConfigurations TargetTrackingConfigurations.
         * @property {number} [PredictiveScalingMaxCapacityBuffer] PredictiveScalingMaxCapacityBuffer.
         * @property {AWS_AutoScalingPlans_ScalingPlan_CustomizedLoadMetricSpecification} [CustomizedLoadMetricSpecification] CustomizedLoadMetricSpecification.
         * @property {AWS_AutoScalingPlans_ScalingPlan_PredefinedLoadMetricSpecification} [PredefinedLoadMetricSpecification] PredefinedLoadMetricSpecification.
         * @property {string} ResourceId ResourceId.
         * @property {number} [ScheduledActionBufferTime] ScheduledActionBufferTime.
         * @property {number} MaxCapacity MaxCapacity.
         * @property {string} [PredictiveScalingMode] PredictiveScalingMode.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_ScalingInstruction} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_ScalingInstruction}
         */
        static ScalingInstruction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_TargetTrackingConfiguration
         * @property {number} [ScaleOutCooldown] ScaleOutCooldown.
         * @property {number} TargetValue TargetValue.
         * @property {AWS_AutoScalingPlans_ScalingPlan_PredefinedScalingMetricSpecification} [PredefinedScalingMetricSpecification] PredefinedScalingMetricSpecification.
         * @property {boolean} [DisableScaleIn] DisableScaleIn.
         * @property {number} [ScaleInCooldown] ScaleInCooldown.
         * @property {number} [EstimatedInstanceWarmup] EstimatedInstanceWarmup.
         * @property {AWS_AutoScalingPlans_ScalingPlan_CustomizedScalingMetricSpecification} [CustomizedScalingMetricSpecification] CustomizedScalingMetricSpecification.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_TargetTrackingConfiguration} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_TargetTrackingConfiguration}
         */
        static TargetTrackingConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_CustomizedScalingMetricSpecification
         * @property {string} MetricName MetricName.
         * @property {string} Statistic Statistic.
         * @property {AWS_AutoScalingPlans_ScalingPlan_MetricDimension[]} [Dimensions] Dimensions.
         * @property {string} [Unit] Unit.
         * @property {string} Namespace Namespace.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_CustomizedScalingMetricSpecification} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_CustomizedScalingMetricSpecification}
         */
        static CustomizedScalingMetricSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_MetricDimension
         * @property {string} Value Value.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_MetricDimension} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_MetricDimension}
         */
        static MetricDimension(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_PredefinedScalingMetricSpecification
         * @property {string} [ResourceLabel] ResourceLabel.
         * @property {string} PredefinedScalingMetricType PredefinedScalingMetricType.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_PredefinedScalingMetricSpecification} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_PredefinedScalingMetricSpecification}
         */
        static PredefinedScalingMetricSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_TagFilter
         * @property {string[]} [Values] Values.
         * @property {string} Key Key.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_TagFilter} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_TagFilter}
         */
        static TagFilter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_PredefinedLoadMetricSpecification
         * @property {string} PredefinedLoadMetricType PredefinedLoadMetricType.
         * @property {string} [ResourceLabel] ResourceLabel.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_PredefinedLoadMetricSpecification} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_PredefinedLoadMetricSpecification}
         */
        static PredefinedLoadMetricSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_AutoScalingPlans_ScalingPlan_CustomizedLoadMetricSpecification
         * @property {string} MetricName MetricName.
         * @property {string} Statistic Statistic.
         * @property {AWS_AutoScalingPlans_ScalingPlan_MetricDimension[]} [Dimensions] Dimensions.
         * @property {string} [Unit] Unit.
         * @property {string} Namespace Namespace.
         */
        /**
         * @param {AWS_AutoScalingPlans_ScalingPlan_CustomizedLoadMetricSpecification} properties
         * @returns {AWS_AutoScalingPlans_ScalingPlan_CustomizedLoadMetricSpecification}
         */
        static CustomizedLoadMetricSpecification(properties) { return properties; }
      }
    },
    /**
     * @namespace Route53
     */
    Route53: {
      /**
       * @namespace RecordSet
       */
      RecordSet: class {
        /**
         * @typedef {Object} AWS_Route53_RecordSet
         * @property {AWS_Route53_RecordSet_AliasTarget} [AliasTarget] AliasTarget.
         * @property {string} [Comment] Comment.
         * @property {string} [Failover] Failover.
         * @property {AWS_Route53_RecordSet_GeoLocation} [GeoLocation] GeoLocation.
         * @property {string} [HealthCheckId] HealthCheckId.
         * @property {string} [HostedZoneId] HostedZoneId.
         * @property {string} [HostedZoneName] HostedZoneName.
         * @property {boolean} [MultiValueAnswer] MultiValueAnswer.
         * @property {string} Name Name.
         * @property {string} [Region] Region.
         * @property {string[]} [ResourceRecords] ResourceRecords.
         * @property {string} [SetIdentifier] SetIdentifier.
         * @property {string} [TTL] TTL.
         * @property {string} Type Type.
         * @property {number} [Weight] Weight.
         */
        /**
         * Create a new AWS::Route53::RecordSet
         * @param {AWS_Route53_RecordSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Route53_RecordSet_GeoLocation
         * @property {string} [ContinentCode] ContinentCode.
         * @property {string} [CountryCode] CountryCode.
         * @property {string} [SubdivisionCode] SubdivisionCode.
         */
        /**
         * @param {AWS_Route53_RecordSet_GeoLocation} properties
         * @returns {AWS_Route53_RecordSet_GeoLocation}
         */
        static GeoLocation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Route53_RecordSet_AliasTarget
         * @property {string} DNSName DNSName.
         * @property {boolean} [EvaluateTargetHealth] EvaluateTargetHealth.
         * @property {string} HostedZoneId HostedZoneId.
         */
        /**
         * @param {AWS_Route53_RecordSet_AliasTarget} properties
         * @returns {AWS_Route53_RecordSet_AliasTarget}
         */
        static AliasTarget(properties) { return properties; }
      },
      /**
       * @namespace HostedZone
       */
      HostedZone: class {
        /**
         * @typedef {Object} AWS_Route53_HostedZone
         * @property {AWS_Route53_HostedZone_HostedZoneConfig} [HostedZoneConfig] HostedZoneConfig.
         * @property {AWS_Route53_HostedZone_HostedZoneTag[]} [HostedZoneTags] HostedZoneTags.
         * @property {string} Name Name.
         * @property {AWS_Route53_HostedZone_QueryLoggingConfig} [QueryLoggingConfig] QueryLoggingConfig.
         * @property {AWS_Route53_HostedZone_VPC[]} [VPCs] VPCs.
         */
        /**
         * Create a new AWS::Route53::HostedZone
         * @param {AWS_Route53_HostedZone} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Route53_HostedZone_HostedZoneTag
         * @property {string} Key Key.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_Route53_HostedZone_HostedZoneTag} properties
         * @returns {AWS_Route53_HostedZone_HostedZoneTag}
         */
        static HostedZoneTag(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Route53_HostedZone_HostedZoneConfig
         * @property {string} [Comment] Comment.
         */
        /**
         * @param {AWS_Route53_HostedZone_HostedZoneConfig} properties
         * @returns {AWS_Route53_HostedZone_HostedZoneConfig}
         */
        static HostedZoneConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Route53_HostedZone_QueryLoggingConfig
         * @property {string} CloudWatchLogsLogGroupArn CloudWatchLogsLogGroupArn.
         */
        /**
         * @param {AWS_Route53_HostedZone_QueryLoggingConfig} properties
         * @returns {AWS_Route53_HostedZone_QueryLoggingConfig}
         */
        static QueryLoggingConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Route53_HostedZone_VPC
         * @property {string} VPCId VPCId.
         * @property {string} VPCRegion VPCRegion.
         */
        /**
         * @param {AWS_Route53_HostedZone_VPC} properties
         * @returns {AWS_Route53_HostedZone_VPC}
         */
        static VPC(properties) { return properties; }
      },
      /**
       * @namespace RecordSetGroup
       */
      RecordSetGroup: class {
        /**
         * @typedef {Object} AWS_Route53_RecordSetGroup
         * @property {string} [Comment] Comment.
         * @property {string} [HostedZoneId] HostedZoneId.
         * @property {string} [HostedZoneName] HostedZoneName.
         * @property {AWS_Route53_RecordSetGroup_RecordSet[]} [RecordSets] RecordSets.
         */
        /**
         * Create a new AWS::Route53::RecordSetGroup
         * @param {AWS_Route53_RecordSetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Route53_RecordSetGroup_RecordSet
         * @property {AWS_Route53_RecordSetGroup_AliasTarget} [AliasTarget] AliasTarget.
         * @property {string} [Comment] Comment.
         * @property {string} [Failover] Failover.
         * @property {AWS_Route53_RecordSetGroup_GeoLocation} [GeoLocation] GeoLocation.
         * @property {string} [HealthCheckId] HealthCheckId.
         * @property {string} [HostedZoneId] HostedZoneId.
         * @property {string} [HostedZoneName] HostedZoneName.
         * @property {boolean} [MultiValueAnswer] MultiValueAnswer.
         * @property {string} Name Name.
         * @property {string} [Region] Region.
         * @property {string[]} [ResourceRecords] ResourceRecords.
         * @property {string} [SetIdentifier] SetIdentifier.
         * @property {string} [TTL] TTL.
         * @property {string} Type Type.
         * @property {number} [Weight] Weight.
         */
        /**
         * @param {AWS_Route53_RecordSetGroup_RecordSet} properties
         * @returns {AWS_Route53_RecordSetGroup_RecordSet}
         */
        static RecordSet(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Route53_RecordSetGroup_GeoLocation
         * @property {string} [ContinentCode] ContinentCode.
         * @property {string} [CountryCode] CountryCode.
         * @property {string} [SubdivisionCode] SubdivisionCode.
         */
        /**
         * @param {AWS_Route53_RecordSetGroup_GeoLocation} properties
         * @returns {AWS_Route53_RecordSetGroup_GeoLocation}
         */
        static GeoLocation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Route53_RecordSetGroup_AliasTarget
         * @property {string} DNSName DNSName.
         * @property {boolean} [EvaluateTargetHealth] EvaluateTargetHealth.
         * @property {string} HostedZoneId HostedZoneId.
         */
        /**
         * @param {AWS_Route53_RecordSetGroup_AliasTarget} properties
         * @returns {AWS_Route53_RecordSetGroup_AliasTarget}
         */
        static AliasTarget(properties) { return properties; }
      },
      /**
       * @namespace HealthCheck
       */
      HealthCheck: class {
        /**
         * @typedef {Object} AWS_Route53_HealthCheck
         * @property {AWS_Route53_HealthCheck_HealthCheckConfig} HealthCheckConfig HealthCheckConfig.
         * @property {AWS_Route53_HealthCheck_HealthCheckTag[]} [HealthCheckTags] HealthCheckTags.
         */
        /**
         * Create a new AWS::Route53::HealthCheck
         * @param {AWS_Route53_HealthCheck} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Route53_HealthCheck_HealthCheckConfig
         * @property {AWS_Route53_HealthCheck_AlarmIdentifier} [AlarmIdentifier] AlarmIdentifier.
         * @property {string[]} [ChildHealthChecks] ChildHealthChecks.
         * @property {boolean} [EnableSNI] EnableSNI.
         * @property {number} [FailureThreshold] FailureThreshold.
         * @property {string} [FullyQualifiedDomainName] FullyQualifiedDomainName.
         * @property {number} [HealthThreshold] HealthThreshold.
         * @property {string} [IPAddress] IPAddress.
         * @property {string} [InsufficientDataHealthStatus] InsufficientDataHealthStatus.
         * @property {boolean} [Inverted] Inverted.
         * @property {boolean} [MeasureLatency] MeasureLatency.
         * @property {number} [Port] Port.
         * @property {string[]} [Regions] Regions.
         * @property {number} [RequestInterval] RequestInterval.
         * @property {string} [ResourcePath] ResourcePath.
         * @property {string} [SearchString] SearchString.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_Route53_HealthCheck_HealthCheckConfig} properties
         * @returns {AWS_Route53_HealthCheck_HealthCheckConfig}
         */
        static HealthCheckConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Route53_HealthCheck_HealthCheckTag
         * @property {string} Key Key.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_Route53_HealthCheck_HealthCheckTag} properties
         * @returns {AWS_Route53_HealthCheck_HealthCheckTag}
         */
        static HealthCheckTag(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Route53_HealthCheck_AlarmIdentifier
         * @property {string} Name Name.
         * @property {string} Region Region.
         */
        /**
         * @param {AWS_Route53_HealthCheck_AlarmIdentifier} properties
         * @returns {AWS_Route53_HealthCheck_AlarmIdentifier}
         */
        static AlarmIdentifier(properties) { return properties; }
      }
    },
    /**
     * @namespace CloudWatch
     */
    CloudWatch: {
      /**
       * @namespace Dashboard
       */
      Dashboard: class {
        /**
         * @typedef {Object} AWS_CloudWatch_Dashboard
         * @property {string} [DashboardName] DashboardName.
         * @property {string} DashboardBody DashboardBody.
         */
        /**
         * Create a new AWS::CloudWatch::Dashboard
         * @param {AWS_CloudWatch_Dashboard} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Alarm
       */
      Alarm: class {
        /**
         * @typedef {Object} AWS_CloudWatch_Alarm
         * @property {boolean} [ActionsEnabled] ActionsEnabled.
         * @property {string[]} [AlarmActions] AlarmActions.
         * @property {string} [AlarmDescription] AlarmDescription.
         * @property {string} [AlarmName] AlarmName.
         * @property {string} ComparisonOperator ComparisonOperator.
         * @property {number} [DatapointsToAlarm] DatapointsToAlarm.
         * @property {AWS_CloudWatch_Alarm_Dimension[]} [Dimensions] Dimensions.
         * @property {string} [EvaluateLowSampleCountPercentile] EvaluateLowSampleCountPercentile.
         * @property {number} EvaluationPeriods EvaluationPeriods.
         * @property {string} [ExtendedStatistic] ExtendedStatistic.
         * @property {string[]} [InsufficientDataActions] InsufficientDataActions.
         * @property {string} [MetricName] MetricName.
         * @property {AWS_CloudWatch_Alarm_MetricDataQuery[]} [Metrics] Metrics.
         * @property {string} [Namespace] Namespace.
         * @property {string[]} [OKActions] OKActions.
         * @property {number} [Period] Period.
         * @property {string} [Statistic] Statistic.
         * @property {number} Threshold Threshold.
         * @property {string} [TreatMissingData] TreatMissingData.
         * @property {string} [Unit] Unit.
         */
        /**
         * Create a new AWS::CloudWatch::Alarm
         * @param {AWS_CloudWatch_Alarm} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CloudWatch_Alarm_MetricStat
         * @property {AWS_CloudWatch_Alarm_Metric} Metric Metric.
         * @property {number} Period Period.
         * @property {string} Stat Stat.
         * @property {string} [Unit] Unit.
         */
        /**
         * @param {AWS_CloudWatch_Alarm_MetricStat} properties
         * @returns {AWS_CloudWatch_Alarm_MetricStat}
         */
        static MetricStat(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudWatch_Alarm_Dimension
         * @property {string} Name Name.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_CloudWatch_Alarm_Dimension} properties
         * @returns {AWS_CloudWatch_Alarm_Dimension}
         */
        static Dimension(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudWatch_Alarm_MetricDataQuery
         * @property {string} [Expression] Expression.
         * @property {string} Id Id.
         * @property {string} [Label] Label.
         * @property {AWS_CloudWatch_Alarm_MetricStat} [MetricStat] MetricStat.
         * @property {boolean} [ReturnData] ReturnData.
         */
        /**
         * @param {AWS_CloudWatch_Alarm_MetricDataQuery} properties
         * @returns {AWS_CloudWatch_Alarm_MetricDataQuery}
         */
        static MetricDataQuery(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudWatch_Alarm_Metric
         * @property {AWS_CloudWatch_Alarm_Dimension[]} [Dimensions] Dimensions.
         * @property {string} [MetricName] MetricName.
         * @property {string} [Namespace] Namespace.
         */
        /**
         * @param {AWS_CloudWatch_Alarm_Metric} properties
         * @returns {AWS_CloudWatch_Alarm_Metric}
         */
        static Metric(properties) { return properties; }
      }
    },
    /**
     * @namespace ECS
     */
    ECS: {
      /**
       * @namespace Cluster
       */
      Cluster: class {
        /**
         * @typedef {Object} AWS_ECS_Cluster
         * @property {string} [ClusterName] ClusterName.
         */
        /**
         * Create a new AWS::ECS::Cluster
         * @param {AWS_ECS_Cluster} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Service
       */
      Service: class {
        /**
         * @typedef {Object} AWS_ECS_Service
         * @property {string} [Cluster] Cluster.
         * @property {AWS_ECS_Service_DeploymentConfiguration} [DeploymentConfiguration] DeploymentConfiguration.
         * @property {number} [DesiredCount] DesiredCount.
         * @property {number} [HealthCheckGracePeriodSeconds] HealthCheckGracePeriodSeconds.
         * @property {string} [LaunchType] LaunchType.
         * @property {AWS_ECS_Service_LoadBalancer[]} [LoadBalancers] LoadBalancers.
         * @property {AWS_ECS_Service_NetworkConfiguration} [NetworkConfiguration] NetworkConfiguration.
         * @property {AWS_ECS_Service_PlacementConstraint[]} [PlacementConstraints] PlacementConstraints.
         * @property {AWS_ECS_Service_PlacementStrategy[]} [PlacementStrategies] PlacementStrategies.
         * @property {string} [PlatformVersion] PlatformVersion.
         * @property {string} [Role] Role.
         * @property {string} [SchedulingStrategy] SchedulingStrategy.
         * @property {string} [ServiceName] ServiceName.
         * @property {AWS_ECS_Service_ServiceRegistry[]} [ServiceRegistries] ServiceRegistries.
         * @property {string} TaskDefinition TaskDefinition.
         */
        /**
         * Create a new AWS::ECS::Service
         * @param {AWS_ECS_Service} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ECS_Service_LoadBalancer
         * @property {string} [ContainerName] ContainerName.
         * @property {number} ContainerPort ContainerPort.
         * @property {string} [LoadBalancerName] LoadBalancerName.
         * @property {string} [TargetGroupArn] TargetGroupArn.
         */
        /**
         * @param {AWS_ECS_Service_LoadBalancer} properties
         * @returns {AWS_ECS_Service_LoadBalancer}
         */
        static LoadBalancer(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_Service_PlacementStrategy
         * @property {string} [Field] Field.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_ECS_Service_PlacementStrategy} properties
         * @returns {AWS_ECS_Service_PlacementStrategy}
         */
        static PlacementStrategy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_Service_ServiceRegistry
         * @property {string} [ContainerName] ContainerName.
         * @property {number} [ContainerPort] ContainerPort.
         * @property {number} [Port] Port.
         * @property {string} [RegistryArn] RegistryArn.
         */
        /**
         * @param {AWS_ECS_Service_ServiceRegistry} properties
         * @returns {AWS_ECS_Service_ServiceRegistry}
         */
        static ServiceRegistry(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_Service_DeploymentConfiguration
         * @property {number} [MaximumPercent] MaximumPercent.
         * @property {number} [MinimumHealthyPercent] MinimumHealthyPercent.
         */
        /**
         * @param {AWS_ECS_Service_DeploymentConfiguration} properties
         * @returns {AWS_ECS_Service_DeploymentConfiguration}
         */
        static DeploymentConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_Service_PlacementConstraint
         * @property {string} [Expression] Expression.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_ECS_Service_PlacementConstraint} properties
         * @returns {AWS_ECS_Service_PlacementConstraint}
         */
        static PlacementConstraint(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_Service_AwsVpcConfiguration
         * @property {string} [AssignPublicIp] AssignPublicIp.
         * @property {string[]} [SecurityGroups] SecurityGroups.
         * @property {string[]} Subnets Subnets.
         */
        /**
         * @param {AWS_ECS_Service_AwsVpcConfiguration} properties
         * @returns {AWS_ECS_Service_AwsVpcConfiguration}
         */
        static AwsVpcConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_Service_NetworkConfiguration
         * @property {AWS_ECS_Service_AwsVpcConfiguration} [AwsvpcConfiguration] AwsvpcConfiguration.
         */
        /**
         * @param {AWS_ECS_Service_NetworkConfiguration} properties
         * @returns {AWS_ECS_Service_NetworkConfiguration}
         */
        static NetworkConfiguration(properties) { return properties; }
      },
      /**
       * @namespace TaskDefinition
       */
      TaskDefinition: class {
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition
         * @property {AWS_ECS_TaskDefinition_ContainerDefinition[]} [ContainerDefinitions] ContainerDefinitions.
         * @property {string} [Cpu] Cpu.
         * @property {string} [ExecutionRoleArn] ExecutionRoleArn.
         * @property {string} [Family] Family.
         * @property {string} [Memory] Memory.
         * @property {string} [NetworkMode] NetworkMode.
         * @property {AWS_ECS_TaskDefinition_TaskDefinitionPlacementConstraint[]} [PlacementConstraints] PlacementConstraints.
         * @property {string[]} [RequiresCompatibilities] RequiresCompatibilities.
         * @property {string} [TaskRoleArn] TaskRoleArn.
         * @property {AWS_ECS_TaskDefinition_Volume[]} [Volumes] Volumes.
         */
        /**
         * Create a new AWS::ECS::TaskDefinition
         * @param {AWS_ECS_TaskDefinition} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_DockerVolumeConfiguration
         * @property {boolean} [Autoprovision] Autoprovision.
         * @property {string} [Driver] Driver.
         * @property {AWS_ECS_TaskDefinition_Map} [DriverOpts] DriverOpts.
         * @property {AWS_ECS_TaskDefinition_Map} [Labels] Labels.
         * @property {string} [Scope] Scope.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_DockerVolumeConfiguration} properties
         * @returns {AWS_ECS_TaskDefinition_DockerVolumeConfiguration}
         */
        static DockerVolumeConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_ContainerDefinition
         * @property {string[]} [Command] Command.
         * @property {number} [Cpu] Cpu.
         * @property {boolean} [DisableNetworking] DisableNetworking.
         * @property {string[]} [DnsSearchDomains] DnsSearchDomains.
         * @property {string[]} [DnsServers] DnsServers.
         * @property {AWS_ECS_TaskDefinition_Map} [DockerLabels] DockerLabels.
         * @property {string[]} [DockerSecurityOptions] DockerSecurityOptions.
         * @property {string[]} [EntryPoint] EntryPoint.
         * @property {AWS_ECS_TaskDefinition_KeyValuePair[]} [Environment] Environment.
         * @property {boolean} [Essential] Essential.
         * @property {AWS_ECS_TaskDefinition_HostEntry[]} [ExtraHosts] ExtraHosts.
         * @property {AWS_ECS_TaskDefinition_HealthCheck} [HealthCheck] HealthCheck.
         * @property {string} [Hostname] Hostname.
         * @property {string} [Image] Image.
         * @property {string[]} [Links] Links.
         * @property {AWS_ECS_TaskDefinition_LinuxParameters} [LinuxParameters] LinuxParameters.
         * @property {AWS_ECS_TaskDefinition_LogConfiguration} [LogConfiguration] LogConfiguration.
         * @property {number} [Memory] Memory.
         * @property {number} [MemoryReservation] MemoryReservation.
         * @property {AWS_ECS_TaskDefinition_MountPoint[]} [MountPoints] MountPoints.
         * @property {string} [Name] Name.
         * @property {AWS_ECS_TaskDefinition_PortMapping[]} [PortMappings] PortMappings.
         * @property {boolean} [Privileged] Privileged.
         * @property {boolean} [ReadonlyRootFilesystem] ReadonlyRootFilesystem.
         * @property {AWS_ECS_TaskDefinition_RepositoryCredentials} [RepositoryCredentials] RepositoryCredentials.
         * @property {AWS_ECS_TaskDefinition_Ulimit[]} [Ulimits] Ulimits.
         * @property {string} [User] User.
         * @property {AWS_ECS_TaskDefinition_VolumeFrom[]} [VolumesFrom] VolumesFrom.
         * @property {string} [WorkingDirectory] WorkingDirectory.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_ContainerDefinition} properties
         * @returns {AWS_ECS_TaskDefinition_ContainerDefinition}
         */
        static ContainerDefinition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_LogConfiguration
         * @property {string} LogDriver LogDriver.
         * @property {AWS_ECS_TaskDefinition_Map} [Options] Options.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_LogConfiguration} properties
         * @returns {AWS_ECS_TaskDefinition_LogConfiguration}
         */
        static LogConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_Device
         * @property {string} [ContainerPath] ContainerPath.
         * @property {string} HostPath HostPath.
         * @property {string[]} [Permissions] Permissions.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_Device} properties
         * @returns {AWS_ECS_TaskDefinition_Device}
         */
        static Device(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_KeyValuePair
         * @property {string} [Name] Name.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_KeyValuePair} properties
         * @returns {AWS_ECS_TaskDefinition_KeyValuePair}
         */
        static KeyValuePair(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_MountPoint
         * @property {string} [ContainerPath] ContainerPath.
         * @property {boolean} [ReadOnly] ReadOnly.
         * @property {string} [SourceVolume] SourceVolume.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_MountPoint} properties
         * @returns {AWS_ECS_TaskDefinition_MountPoint}
         */
        static MountPoint(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_VolumeFrom
         * @property {boolean} [ReadOnly] ReadOnly.
         * @property {string} [SourceContainer] SourceContainer.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_VolumeFrom} properties
         * @returns {AWS_ECS_TaskDefinition_VolumeFrom}
         */
        static VolumeFrom(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_HostEntry
         * @property {string} Hostname Hostname.
         * @property {string} IpAddress IpAddress.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_HostEntry} properties
         * @returns {AWS_ECS_TaskDefinition_HostEntry}
         */
        static HostEntry(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_KernelCapabilities
         * @property {string[]} [Add] Add.
         * @property {string[]} [Drop] Drop.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_KernelCapabilities} properties
         * @returns {AWS_ECS_TaskDefinition_KernelCapabilities}
         */
        static KernelCapabilities(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_TaskDefinitionPlacementConstraint
         * @property {string} [Expression] Expression.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_TaskDefinitionPlacementConstraint} properties
         * @returns {AWS_ECS_TaskDefinition_TaskDefinitionPlacementConstraint}
         */
        static TaskDefinitionPlacementConstraint(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_Volume
         * @property {AWS_ECS_TaskDefinition_DockerVolumeConfiguration} [DockerVolumeConfiguration] DockerVolumeConfiguration.
         * @property {AWS_ECS_TaskDefinition_HostVolumeProperties} [Host] Host.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_Volume} properties
         * @returns {AWS_ECS_TaskDefinition_Volume}
         */
        static Volume(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_HealthCheck
         * @property {string[]} Command Command.
         * @property {number} [Interval] Interval.
         * @property {number} [Retries] Retries.
         * @property {number} [StartPeriod] StartPeriod.
         * @property {number} [Timeout] Timeout.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_HealthCheck} properties
         * @returns {AWS_ECS_TaskDefinition_HealthCheck}
         */
        static HealthCheck(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_PortMapping
         * @property {number} [ContainerPort] ContainerPort.
         * @property {number} [HostPort] HostPort.
         * @property {string} [Protocol] Protocol.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_PortMapping} properties
         * @returns {AWS_ECS_TaskDefinition_PortMapping}
         */
        static PortMapping(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_Ulimit
         * @property {number} HardLimit HardLimit.
         * @property {string} Name Name.
         * @property {number} SoftLimit SoftLimit.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_Ulimit} properties
         * @returns {AWS_ECS_TaskDefinition_Ulimit}
         */
        static Ulimit(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_LinuxParameters
         * @property {AWS_ECS_TaskDefinition_KernelCapabilities} [Capabilities] Capabilities.
         * @property {AWS_ECS_TaskDefinition_Device[]} [Devices] Devices.
         * @property {boolean} [InitProcessEnabled] InitProcessEnabled.
         * @property {number} [SharedMemorySize] SharedMemorySize.
         * @property {AWS_ECS_TaskDefinition_Tmpfs[]} [Tmpfs] Tmpfs.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_LinuxParameters} properties
         * @returns {AWS_ECS_TaskDefinition_LinuxParameters}
         */
        static LinuxParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_HostVolumeProperties
         * @property {string} [SourcePath] SourcePath.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_HostVolumeProperties} properties
         * @returns {AWS_ECS_TaskDefinition_HostVolumeProperties}
         */
        static HostVolumeProperties(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_Tmpfs
         * @property {string} [ContainerPath] ContainerPath.
         * @property {string[]} [MountOptions] MountOptions.
         * @property {number} [Size] Size.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_Tmpfs} properties
         * @returns {AWS_ECS_TaskDefinition_Tmpfs}
         */
        static Tmpfs(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ECS_TaskDefinition_RepositoryCredentials
         * @property {string} [CredentialsParameter] CredentialsParameter.
         */
        /**
         * @param {AWS_ECS_TaskDefinition_RepositoryCredentials} properties
         * @returns {AWS_ECS_TaskDefinition_RepositoryCredentials}
         */
        static RepositoryCredentials(properties) { return properties; }
      }
    },
    /**
     * @namespace ElasticLoadBalancingV2
     */
    ElasticLoadBalancingV2: {
      /**
       * @namespace ListenerCertificate
       */
      ListenerCertificate: class {
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerCertificate
         * @property {AWS_ElasticLoadBalancingV2_ListenerCertificate_Certificate[]} Certificates Certificates.
         * @property {string} ListenerArn ListenerArn.
         */
        /**
         * Create a new AWS::ElasticLoadBalancingV2::ListenerCertificate
         * @param {AWS_ElasticLoadBalancingV2_ListenerCertificate} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerCertificate_Certificate
         * @property {string} [CertificateArn] CertificateArn.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_ListenerCertificate_Certificate} properties
         * @returns {AWS_ElasticLoadBalancingV2_ListenerCertificate_Certificate}
         */
        static Certificate(properties) { return properties; }
      },
      /**
       * @namespace LoadBalancer
       */
      LoadBalancer: class {
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_LoadBalancer
         * @property {string} [IpAddressType] IpAddressType.
         * @property {AWS_ElasticLoadBalancingV2_LoadBalancer_LoadBalancerAttribute[]} [LoadBalancerAttributes] LoadBalancerAttributes.
         * @property {string} [Name] Name.
         * @property {string} [Scheme] Scheme.
         * @property {string[]} [SecurityGroups] SecurityGroups.
         * @property {AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping[]} [SubnetMappings] SubnetMappings.
         * @property {string[]} [Subnets] Subnets.
         * @property {AWS_ElasticLoadBalancingV2_LoadBalancer_Tag[]} [Tags] Tags.
         * @property {string} [Type] Type.
         */
        /**
         * Create a new AWS::ElasticLoadBalancingV2::LoadBalancer
         * @param {AWS_ElasticLoadBalancingV2_LoadBalancer} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_LoadBalancer_LoadBalancerAttribute
         * @property {string} [Key] Key.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_LoadBalancer_LoadBalancerAttribute} properties
         * @returns {AWS_ElasticLoadBalancingV2_LoadBalancer_LoadBalancerAttribute}
         */
        static LoadBalancerAttribute(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping
         * @property {string} AllocationId AllocationId.
         * @property {string} SubnetId SubnetId.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping} properties
         * @returns {AWS_ElasticLoadBalancingV2_LoadBalancer_SubnetMapping}
         */
        static SubnetMapping(properties) { return properties; }
      },
      /**
       * @namespace Listener
       */
      Listener: class {
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_Listener
         * @property {AWS_ElasticLoadBalancingV2_Listener_Certificate[]} [Certificates] Certificates.
         * @property {AWS_ElasticLoadBalancingV2_Listener_Action[]} DefaultActions DefaultActions.
         * @property {string} LoadBalancerArn LoadBalancerArn.
         * @property {number} Port Port.
         * @property {string} Protocol Protocol.
         * @property {string} [SslPolicy] SslPolicy.
         */
        /**
         * Create a new AWS::ElasticLoadBalancingV2::Listener
         * @param {AWS_ElasticLoadBalancingV2_Listener} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_Listener_AuthenticateOidcConfig
         * @property {AWS_ElasticLoadBalancingV2_Listener_Map} [AuthenticationRequestExtraParams] AuthenticationRequestExtraParams.
         * @property {string} AuthorizationEndpoint AuthorizationEndpoint.
         * @property {string} ClientId ClientId.
         * @property {string} ClientSecret ClientSecret.
         * @property {string} Issuer Issuer.
         * @property {string} [OnUnauthenticatedRequest] OnUnauthenticatedRequest.
         * @property {string} [Scope] Scope.
         * @property {string} [SessionCookieName] SessionCookieName.
         * @property {number} [SessionTimeout] SessionTimeout.
         * @property {string} TokenEndpoint TokenEndpoint.
         * @property {string} UserInfoEndpoint UserInfoEndpoint.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_Listener_AuthenticateOidcConfig} properties
         * @returns {AWS_ElasticLoadBalancingV2_Listener_AuthenticateOidcConfig}
         */
        static AuthenticateOidcConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_Listener_AuthenticateCognitoConfig
         * @property {AWS_ElasticLoadBalancingV2_Listener_Map} [AuthenticationRequestExtraParams] AuthenticationRequestExtraParams.
         * @property {string} [OnUnauthenticatedRequest] OnUnauthenticatedRequest.
         * @property {string} [Scope] Scope.
         * @property {string} [SessionCookieName] SessionCookieName.
         * @property {number} [SessionTimeout] SessionTimeout.
         * @property {string} UserPoolArn UserPoolArn.
         * @property {string} UserPoolClientId UserPoolClientId.
         * @property {string} UserPoolDomain UserPoolDomain.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_Listener_AuthenticateCognitoConfig} properties
         * @returns {AWS_ElasticLoadBalancingV2_Listener_AuthenticateCognitoConfig}
         */
        static AuthenticateCognitoConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_Listener_RedirectConfig
         * @property {string} [Host] Host.
         * @property {string} [Path] Path.
         * @property {string} [Port] Port.
         * @property {string} [Protocol] Protocol.
         * @property {string} [Query] Query.
         * @property {string} StatusCode StatusCode.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_Listener_RedirectConfig} properties
         * @returns {AWS_ElasticLoadBalancingV2_Listener_RedirectConfig}
         */
        static RedirectConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_Listener_Action
         * @property {AWS_ElasticLoadBalancingV2_Listener_AuthenticateCognitoConfig} [AuthenticateCognitoConfig] AuthenticateCognitoConfig.
         * @property {AWS_ElasticLoadBalancingV2_Listener_AuthenticateOidcConfig} [AuthenticateOidcConfig] AuthenticateOidcConfig.
         * @property {AWS_ElasticLoadBalancingV2_Listener_FixedResponseConfig} [FixedResponseConfig] FixedResponseConfig.
         * @property {number} [Order] Order.
         * @property {AWS_ElasticLoadBalancingV2_Listener_RedirectConfig} [RedirectConfig] RedirectConfig.
         * @property {string} [TargetGroupArn] TargetGroupArn.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_Listener_Action} properties
         * @returns {AWS_ElasticLoadBalancingV2_Listener_Action}
         */
        static Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_Listener_FixedResponseConfig
         * @property {string} [ContentType] ContentType.
         * @property {string} [MessageBody] MessageBody.
         * @property {string} StatusCode StatusCode.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_Listener_FixedResponseConfig} properties
         * @returns {AWS_ElasticLoadBalancingV2_Listener_FixedResponseConfig}
         */
        static FixedResponseConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_Listener_Certificate
         * @property {string} [CertificateArn] CertificateArn.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_Listener_Certificate} properties
         * @returns {AWS_ElasticLoadBalancingV2_Listener_Certificate}
         */
        static Certificate(properties) { return properties; }
      },
      /**
       * @namespace ListenerRule
       */
      ListenerRule: class {
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerRule
         * @property {AWS_ElasticLoadBalancingV2_ListenerRule_Action[]} Actions Actions.
         * @property {AWS_ElasticLoadBalancingV2_ListenerRule_RuleCondition[]} Conditions Conditions.
         * @property {string} ListenerArn ListenerArn.
         * @property {number} Priority Priority.
         */
        /**
         * Create a new AWS::ElasticLoadBalancingV2::ListenerRule
         * @param {AWS_ElasticLoadBalancingV2_ListenerRule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerRule_AuthenticateOidcConfig
         * @property {AWS_ElasticLoadBalancingV2_ListenerRule_Map} [AuthenticationRequestExtraParams] AuthenticationRequestExtraParams.
         * @property {string} AuthorizationEndpoint AuthorizationEndpoint.
         * @property {string} ClientId ClientId.
         * @property {string} ClientSecret ClientSecret.
         * @property {string} Issuer Issuer.
         * @property {string} [OnUnauthenticatedRequest] OnUnauthenticatedRequest.
         * @property {string} [Scope] Scope.
         * @property {string} [SessionCookieName] SessionCookieName.
         * @property {number} [SessionTimeout] SessionTimeout.
         * @property {string} TokenEndpoint TokenEndpoint.
         * @property {string} UserInfoEndpoint UserInfoEndpoint.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_ListenerRule_AuthenticateOidcConfig} properties
         * @returns {AWS_ElasticLoadBalancingV2_ListenerRule_AuthenticateOidcConfig}
         */
        static AuthenticateOidcConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerRule_AuthenticateCognitoConfig
         * @property {AWS_ElasticLoadBalancingV2_ListenerRule_Map} [AuthenticationRequestExtraParams] AuthenticationRequestExtraParams.
         * @property {string} [OnUnauthenticatedRequest] OnUnauthenticatedRequest.
         * @property {string} [Scope] Scope.
         * @property {string} [SessionCookieName] SessionCookieName.
         * @property {number} [SessionTimeout] SessionTimeout.
         * @property {string} UserPoolArn UserPoolArn.
         * @property {string} UserPoolClientId UserPoolClientId.
         * @property {string} UserPoolDomain UserPoolDomain.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_ListenerRule_AuthenticateCognitoConfig} properties
         * @returns {AWS_ElasticLoadBalancingV2_ListenerRule_AuthenticateCognitoConfig}
         */
        static AuthenticateCognitoConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerRule_FixedResponseConfig
         * @property {string} [ContentType] ContentType.
         * @property {string} [MessageBody] MessageBody.
         * @property {string} StatusCode StatusCode.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_ListenerRule_FixedResponseConfig} properties
         * @returns {AWS_ElasticLoadBalancingV2_ListenerRule_FixedResponseConfig}
         */
        static FixedResponseConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerRule_Action
         * @property {AWS_ElasticLoadBalancingV2_ListenerRule_AuthenticateCognitoConfig} [AuthenticateCognitoConfig] AuthenticateCognitoConfig.
         * @property {AWS_ElasticLoadBalancingV2_ListenerRule_AuthenticateOidcConfig} [AuthenticateOidcConfig] AuthenticateOidcConfig.
         * @property {AWS_ElasticLoadBalancingV2_ListenerRule_FixedResponseConfig} [FixedResponseConfig] FixedResponseConfig.
         * @property {number} [Order] Order.
         * @property {AWS_ElasticLoadBalancingV2_ListenerRule_RedirectConfig} [RedirectConfig] RedirectConfig.
         * @property {string} [TargetGroupArn] TargetGroupArn.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_ListenerRule_Action} properties
         * @returns {AWS_ElasticLoadBalancingV2_ListenerRule_Action}
         */
        static Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerRule_RuleCondition
         * @property {string} [Field] Field.
         * @property {string[]} [Values] Values.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_ListenerRule_RuleCondition} properties
         * @returns {AWS_ElasticLoadBalancingV2_ListenerRule_RuleCondition}
         */
        static RuleCondition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_ListenerRule_RedirectConfig
         * @property {string} [Host] Host.
         * @property {string} [Path] Path.
         * @property {string} [Port] Port.
         * @property {string} [Protocol] Protocol.
         * @property {string} [Query] Query.
         * @property {string} StatusCode StatusCode.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_ListenerRule_RedirectConfig} properties
         * @returns {AWS_ElasticLoadBalancingV2_ListenerRule_RedirectConfig}
         */
        static RedirectConfig(properties) { return properties; }
      },
      /**
       * @namespace TargetGroup
       */
      TargetGroup: class {
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_TargetGroup
         * @property {boolean} [HealthCheckEnabled] HealthCheckEnabled.
         * @property {number} [HealthCheckIntervalSeconds] HealthCheckIntervalSeconds.
         * @property {string} [HealthCheckPath] HealthCheckPath.
         * @property {string} [HealthCheckPort] HealthCheckPort.
         * @property {string} [HealthCheckProtocol] HealthCheckProtocol.
         * @property {number} [HealthCheckTimeoutSeconds] HealthCheckTimeoutSeconds.
         * @property {number} [HealthyThresholdCount] HealthyThresholdCount.
         * @property {AWS_ElasticLoadBalancingV2_TargetGroup_Matcher} [Matcher] Matcher.
         * @property {string} [Name] Name.
         * @property {number} [Port] Port.
         * @property {string} [Protocol] Protocol.
         * @property {AWS_ElasticLoadBalancingV2_TargetGroup_Tag[]} [Tags] Tags.
         * @property {AWS_ElasticLoadBalancingV2_TargetGroup_TargetGroupAttribute[]} [TargetGroupAttributes] TargetGroupAttributes.
         * @property {string} [TargetType] TargetType.
         * @property {AWS_ElasticLoadBalancingV2_TargetGroup_TargetDescription[]} [Targets] Targets.
         * @property {number} [UnhealthyThresholdCount] UnhealthyThresholdCount.
         * @property {string} [VpcId] VpcId.
         */
        /**
         * Create a new AWS::ElasticLoadBalancingV2::TargetGroup
         * @param {AWS_ElasticLoadBalancingV2_TargetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_TargetGroup_TargetGroupAttribute
         * @property {string} [Key] Key.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_TargetGroup_TargetGroupAttribute} properties
         * @returns {AWS_ElasticLoadBalancingV2_TargetGroup_TargetGroupAttribute}
         */
        static TargetGroupAttribute(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_TargetGroup_Matcher
         * @property {string} HttpCode HttpCode.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_TargetGroup_Matcher} properties
         * @returns {AWS_ElasticLoadBalancingV2_TargetGroup_Matcher}
         */
        static Matcher(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancingV2_TargetGroup_TargetDescription
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} Id Id.
         * @property {number} [Port] Port.
         */
        /**
         * @param {AWS_ElasticLoadBalancingV2_TargetGroup_TargetDescription} properties
         * @returns {AWS_ElasticLoadBalancingV2_TargetGroup_TargetDescription}
         */
        static TargetDescription(properties) { return properties; }
      }
    },
    /**
     * @namespace Neptune
     */
    Neptune: {
      /**
       * @namespace DBParameterGroup
       */
      DBParameterGroup: class {
        /**
         * @typedef {Object} AWS_Neptune_DBParameterGroup
         * @property {string} Description Description.
         * @property {string} Parameters Parameters.
         * @property {string} Family Family.
         * @property {AWS_Neptune_DBParameterGroup_Tag[]} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Neptune::DBParameterGroup
         * @param {AWS_Neptune_DBParameterGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBClusterParameterGroup
       */
      DBClusterParameterGroup: class {
        /**
         * @typedef {Object} AWS_Neptune_DBClusterParameterGroup
         * @property {string} Description Description.
         * @property {string} Parameters Parameters.
         * @property {string} Family Family.
         * @property {AWS_Neptune_DBClusterParameterGroup_Tag[]} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Neptune::DBClusterParameterGroup
         * @param {AWS_Neptune_DBClusterParameterGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBCluster
       */
      DBCluster: class {
        /**
         * @typedef {Object} AWS_Neptune_DBCluster
         * @property {boolean} [StorageEncrypted] StorageEncrypted.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {string[]} [AvailabilityZones] AvailabilityZones.
         * @property {string} [SnapshotIdentifier] SnapshotIdentifier.
         * @property {number} [Port] Port.
         * @property {string} [DBClusterIdentifier] DBClusterIdentifier.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {boolean} [IamAuthEnabled] IamAuthEnabled.
         * @property {string} [DBSubnetGroupName] DBSubnetGroupName.
         * @property {string} [PreferredBackupWindow] PreferredBackupWindow.
         * @property {string[]} [VpcSecurityGroupIds] VpcSecurityGroupIds.
         * @property {string} [DBClusterParameterGroupName] DBClusterParameterGroupName.
         * @property {number} [BackupRetentionPeriod] BackupRetentionPeriod.
         * @property {AWS_Neptune_DBCluster_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::Neptune::DBCluster
         * @param {AWS_Neptune_DBCluster} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBSubnetGroup
       */
      DBSubnetGroup: class {
        /**
         * @typedef {Object} AWS_Neptune_DBSubnetGroup
         * @property {string} [DBSubnetGroupName] DBSubnetGroupName.
         * @property {string} DBSubnetGroupDescription DBSubnetGroupDescription.
         * @property {string[]} SubnetIds SubnetIds.
         * @property {AWS_Neptune_DBSubnetGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::Neptune::DBSubnetGroup
         * @param {AWS_Neptune_DBSubnetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBInstance
       */
      DBInstance: class {
        /**
         * @typedef {Object} AWS_Neptune_DBInstance
         * @property {string} [DBParameterGroupName] DBParameterGroupName.
         * @property {string} DBInstanceClass DBInstanceClass.
         * @property {boolean} [AllowMajorVersionUpgrade] AllowMajorVersionUpgrade.
         * @property {string} [DBClusterIdentifier] DBClusterIdentifier.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {boolean} [AutoMinorVersionUpgrade] AutoMinorVersionUpgrade.
         * @property {string} [DBSubnetGroupName] DBSubnetGroupName.
         * @property {string} [DBInstanceIdentifier] DBInstanceIdentifier.
         * @property {string} [DBSnapshotIdentifier] DBSnapshotIdentifier.
         * @property {AWS_Neptune_DBInstance_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::Neptune::DBInstance
         * @param {AWS_Neptune_DBInstance} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace StepFunctions
     */
    StepFunctions: {
      /**
       * @namespace Activity
       */
      Activity: class {
        /**
         * @typedef {Object} AWS_StepFunctions_Activity
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::StepFunctions::Activity
         * @param {AWS_StepFunctions_Activity} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace StateMachine
       */
      StateMachine: class {
        /**
         * @typedef {Object} AWS_StepFunctions_StateMachine
         * @property {string} DefinitionString DefinitionString.
         * @property {string} [StateMachineName] StateMachineName.
         * @property {string} RoleArn RoleArn.
         */
        /**
         * Create a new AWS::StepFunctions::StateMachine
         * @param {AWS_StepFunctions_StateMachine} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace KinesisAnalytics
     */
    KinesisAnalytics: {
      /**
       * @namespace ApplicationOutput
       */
      ApplicationOutput: class {
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationOutput
         * @property {string} ApplicationName ApplicationName.
         * @property {AWS_KinesisAnalytics_ApplicationOutput_Output} Output Output.
         */
        /**
         * Create a new AWS::KinesisAnalytics::ApplicationOutput
         * @param {AWS_KinesisAnalytics_ApplicationOutput} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationOutput_KinesisFirehoseOutput
         * @property {string} ResourceARN ResourceARN.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationOutput_KinesisFirehoseOutput} properties
         * @returns {AWS_KinesisAnalytics_ApplicationOutput_KinesisFirehoseOutput}
         */
        static KinesisFirehoseOutput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationOutput_KinesisStreamsOutput
         * @property {string} ResourceARN ResourceARN.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationOutput_KinesisStreamsOutput} properties
         * @returns {AWS_KinesisAnalytics_ApplicationOutput_KinesisStreamsOutput}
         */
        static KinesisStreamsOutput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationOutput_Output
         * @property {AWS_KinesisAnalytics_ApplicationOutput_DestinationSchema} DestinationSchema DestinationSchema.
         * @property {AWS_KinesisAnalytics_ApplicationOutput_LambdaOutput} [LambdaOutput] LambdaOutput.
         * @property {AWS_KinesisAnalytics_ApplicationOutput_KinesisFirehoseOutput} [KinesisFirehoseOutput] KinesisFirehoseOutput.
         * @property {AWS_KinesisAnalytics_ApplicationOutput_KinesisStreamsOutput} [KinesisStreamsOutput] KinesisStreamsOutput.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationOutput_Output} properties
         * @returns {AWS_KinesisAnalytics_ApplicationOutput_Output}
         */
        static Output(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationOutput_LambdaOutput
         * @property {string} ResourceARN ResourceARN.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationOutput_LambdaOutput} properties
         * @returns {AWS_KinesisAnalytics_ApplicationOutput_LambdaOutput}
         */
        static LambdaOutput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationOutput_DestinationSchema
         * @property {string} [RecordFormatType] RecordFormatType.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationOutput_DestinationSchema} properties
         * @returns {AWS_KinesisAnalytics_ApplicationOutput_DestinationSchema}
         */
        static DestinationSchema(properties) { return properties; }
      },
      /**
       * @namespace ApplicationReferenceDataSource
       */
      ApplicationReferenceDataSource: class {
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource
         * @property {string} ApplicationName ApplicationName.
         * @property {AWS_KinesisAnalytics_ApplicationReferenceDataSource_ReferenceDataSource} ReferenceDataSource ReferenceDataSource.
         */
        /**
         * Create a new AWS::KinesisAnalytics::ApplicationReferenceDataSource
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource_S3ReferenceDataSource
         * @property {string} BucketARN BucketARN.
         * @property {string} FileKey FileKey.
         * @property {string} ReferenceRoleARN ReferenceRoleARN.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource_S3ReferenceDataSource} properties
         * @returns {AWS_KinesisAnalytics_ApplicationReferenceDataSource_S3ReferenceDataSource}
         */
        static S3ReferenceDataSource(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource_MappingParameters
         * @property {AWS_KinesisAnalytics_ApplicationReferenceDataSource_JSONMappingParameters} [JSONMappingParameters] JSONMappingParameters.
         * @property {AWS_KinesisAnalytics_ApplicationReferenceDataSource_CSVMappingParameters} [CSVMappingParameters] CSVMappingParameters.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource_MappingParameters} properties
         * @returns {AWS_KinesisAnalytics_ApplicationReferenceDataSource_MappingParameters}
         */
        static MappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource_JSONMappingParameters
         * @property {string} RecordRowPath RecordRowPath.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource_JSONMappingParameters} properties
         * @returns {AWS_KinesisAnalytics_ApplicationReferenceDataSource_JSONMappingParameters}
         */
        static JSONMappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource_RecordFormat
         * @property {AWS_KinesisAnalytics_ApplicationReferenceDataSource_MappingParameters} [MappingParameters] MappingParameters.
         * @property {string} RecordFormatType RecordFormatType.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource_RecordFormat} properties
         * @returns {AWS_KinesisAnalytics_ApplicationReferenceDataSource_RecordFormat}
         */
        static RecordFormat(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource_RecordColumn
         * @property {string} [Mapping] Mapping.
         * @property {string} SqlType SqlType.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource_RecordColumn} properties
         * @returns {AWS_KinesisAnalytics_ApplicationReferenceDataSource_RecordColumn}
         */
        static RecordColumn(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource_CSVMappingParameters
         * @property {string} RecordRowDelimiter RecordRowDelimiter.
         * @property {string} RecordColumnDelimiter RecordColumnDelimiter.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource_CSVMappingParameters} properties
         * @returns {AWS_KinesisAnalytics_ApplicationReferenceDataSource_CSVMappingParameters}
         */
        static CSVMappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource_ReferenceSchema
         * @property {string} [RecordEncoding] RecordEncoding.
         * @property {AWS_KinesisAnalytics_ApplicationReferenceDataSource_RecordColumn[]} RecordColumns RecordColumns.
         * @property {AWS_KinesisAnalytics_ApplicationReferenceDataSource_RecordFormat} RecordFormat RecordFormat.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource_ReferenceSchema} properties
         * @returns {AWS_KinesisAnalytics_ApplicationReferenceDataSource_ReferenceSchema}
         */
        static ReferenceSchema(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_ApplicationReferenceDataSource_ReferenceDataSource
         * @property {AWS_KinesisAnalytics_ApplicationReferenceDataSource_ReferenceSchema} ReferenceSchema ReferenceSchema.
         * @property {string} [TableName] TableName.
         * @property {AWS_KinesisAnalytics_ApplicationReferenceDataSource_S3ReferenceDataSource} [S3ReferenceDataSource] S3ReferenceDataSource.
         */
        /**
         * @param {AWS_KinesisAnalytics_ApplicationReferenceDataSource_ReferenceDataSource} properties
         * @returns {AWS_KinesisAnalytics_ApplicationReferenceDataSource_ReferenceDataSource}
         */
        static ReferenceDataSource(properties) { return properties; }
      },
      /**
       * @namespace Application
       */
      Application: class {
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application
         * @property {string} [ApplicationName] ApplicationName.
         * @property {AWS_KinesisAnalytics_Application_Input[]} Inputs Inputs.
         * @property {string} [ApplicationDescription] ApplicationDescription.
         * @property {string} [ApplicationCode] ApplicationCode.
         */
        /**
         * Create a new AWS::KinesisAnalytics::Application
         * @param {AWS_KinesisAnalytics_Application} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_MappingParameters
         * @property {AWS_KinesisAnalytics_Application_JSONMappingParameters} [JSONMappingParameters] JSONMappingParameters.
         * @property {AWS_KinesisAnalytics_Application_CSVMappingParameters} [CSVMappingParameters] CSVMappingParameters.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_MappingParameters} properties
         * @returns {AWS_KinesisAnalytics_Application_MappingParameters}
         */
        static MappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_CSVMappingParameters
         * @property {string} RecordRowDelimiter RecordRowDelimiter.
         * @property {string} RecordColumnDelimiter RecordColumnDelimiter.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_CSVMappingParameters} properties
         * @returns {AWS_KinesisAnalytics_Application_CSVMappingParameters}
         */
        static CSVMappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_KinesisStreamsInput
         * @property {string} ResourceARN ResourceARN.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_KinesisStreamsInput} properties
         * @returns {AWS_KinesisAnalytics_Application_KinesisStreamsInput}
         */
        static KinesisStreamsInput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_Input
         * @property {string} NamePrefix NamePrefix.
         * @property {AWS_KinesisAnalytics_Application_InputSchema} InputSchema InputSchema.
         * @property {AWS_KinesisAnalytics_Application_KinesisStreamsInput} [KinesisStreamsInput] KinesisStreamsInput.
         * @property {AWS_KinesisAnalytics_Application_KinesisFirehoseInput} [KinesisFirehoseInput] KinesisFirehoseInput.
         * @property {AWS_KinesisAnalytics_Application_InputProcessingConfiguration} [InputProcessingConfiguration] InputProcessingConfiguration.
         * @property {AWS_KinesisAnalytics_Application_InputParallelism} [InputParallelism] InputParallelism.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_Input} properties
         * @returns {AWS_KinesisAnalytics_Application_Input}
         */
        static Input(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_InputSchema
         * @property {string} [RecordEncoding] RecordEncoding.
         * @property {AWS_KinesisAnalytics_Application_RecordColumn[]} RecordColumns RecordColumns.
         * @property {AWS_KinesisAnalytics_Application_RecordFormat} RecordFormat RecordFormat.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_InputSchema} properties
         * @returns {AWS_KinesisAnalytics_Application_InputSchema}
         */
        static InputSchema(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_RecordColumn
         * @property {string} [Mapping] Mapping.
         * @property {string} SqlType SqlType.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_RecordColumn} properties
         * @returns {AWS_KinesisAnalytics_Application_RecordColumn}
         */
        static RecordColumn(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_RecordFormat
         * @property {AWS_KinesisAnalytics_Application_MappingParameters} [MappingParameters] MappingParameters.
         * @property {string} RecordFormatType RecordFormatType.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_RecordFormat} properties
         * @returns {AWS_KinesisAnalytics_Application_RecordFormat}
         */
        static RecordFormat(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_KinesisFirehoseInput
         * @property {string} ResourceARN ResourceARN.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_KinesisFirehoseInput} properties
         * @returns {AWS_KinesisAnalytics_Application_KinesisFirehoseInput}
         */
        static KinesisFirehoseInput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_InputParallelism
         * @property {number} [Count] Count.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_InputParallelism} properties
         * @returns {AWS_KinesisAnalytics_Application_InputParallelism}
         */
        static InputParallelism(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_InputProcessingConfiguration
         * @property {AWS_KinesisAnalytics_Application_InputLambdaProcessor} [InputLambdaProcessor] InputLambdaProcessor.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_InputProcessingConfiguration} properties
         * @returns {AWS_KinesisAnalytics_Application_InputProcessingConfiguration}
         */
        static InputProcessingConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_JSONMappingParameters
         * @property {string} RecordRowPath RecordRowPath.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_JSONMappingParameters} properties
         * @returns {AWS_KinesisAnalytics_Application_JSONMappingParameters}
         */
        static JSONMappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalytics_Application_InputLambdaProcessor
         * @property {string} ResourceARN ResourceARN.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_KinesisAnalytics_Application_InputLambdaProcessor} properties
         * @returns {AWS_KinesisAnalytics_Application_InputLambdaProcessor}
         */
        static InputLambdaProcessor(properties) { return properties; }
      }
    },
    /**
     * @namespace OpsWorks
     */
    OpsWorks: {
      /**
       * @namespace Volume
       */
      Volume: class {
        /**
         * @typedef {Object} AWS_OpsWorks_Volume
         * @property {string} Ec2VolumeId Ec2VolumeId.
         * @property {string} [MountPoint] MountPoint.
         * @property {string} [Name] Name.
         * @property {string} StackId StackId.
         */
        /**
         * Create a new AWS::OpsWorks::Volume
         * @param {AWS_OpsWorks_Volume} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace App
       */
      App: class {
        /**
         * @typedef {Object} AWS_OpsWorks_App
         * @property {AWS_OpsWorks_App_Source} [AppSource] AppSource.
         * @property {AWS_OpsWorks_App_Map} [Attributes] Attributes.
         * @property {AWS_OpsWorks_App_DataSource[]} [DataSources] DataSources.
         * @property {string} [Description] Description.
         * @property {string[]} [Domains] Domains.
         * @property {boolean} [EnableSsl] EnableSsl.
         * @property {AWS_OpsWorks_App_EnvironmentVariable[]} [Environment] Environment.
         * @property {string} Name Name.
         * @property {string} [Shortname] Shortname.
         * @property {AWS_OpsWorks_App_SslConfiguration} [SslConfiguration] SslConfiguration.
         * @property {string} StackId StackId.
         * @property {string} Type Type.
         */
        /**
         * Create a new AWS::OpsWorks::App
         * @param {AWS_OpsWorks_App} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_OpsWorks_App_DataSource
         * @property {string} [Arn] Arn.
         * @property {string} [DatabaseName] DatabaseName.
         * @property {string} [Type] Type.
         */
        /**
         * @param {AWS_OpsWorks_App_DataSource} properties
         * @returns {AWS_OpsWorks_App_DataSource}
         */
        static DataSource(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_App_EnvironmentVariable
         * @property {string} Key Key.
         * @property {boolean} [Secure] Secure.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_OpsWorks_App_EnvironmentVariable} properties
         * @returns {AWS_OpsWorks_App_EnvironmentVariable}
         */
        static EnvironmentVariable(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_App_SslConfiguration
         * @property {string} [Certificate] Certificate.
         * @property {string} [Chain] Chain.
         * @property {string} [PrivateKey] PrivateKey.
         */
        /**
         * @param {AWS_OpsWorks_App_SslConfiguration} properties
         * @returns {AWS_OpsWorks_App_SslConfiguration}
         */
        static SslConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_App_Source
         * @property {string} [Password] Password.
         * @property {string} [Revision] Revision.
         * @property {string} [SshKey] SshKey.
         * @property {string} [Type] Type.
         * @property {string} [Url] Url.
         * @property {string} [Username] Username.
         */
        /**
         * @param {AWS_OpsWorks_App_Source} properties
         * @returns {AWS_OpsWorks_App_Source}
         */
        static Source(properties) { return properties; }
      },
      /**
       * @namespace Layer
       */
      Layer: class {
        /**
         * @typedef {Object} AWS_OpsWorks_Layer
         * @property {AWS_OpsWorks_Layer_Map} [Attributes] Attributes.
         * @property {boolean} AutoAssignElasticIps AutoAssignElasticIps.
         * @property {boolean} AutoAssignPublicIps AutoAssignPublicIps.
         * @property {string} [CustomInstanceProfileArn] CustomInstanceProfileArn.
         * @property {string} [CustomJson] CustomJson.
         * @property {AWS_OpsWorks_Layer_Recipes} [CustomRecipes] CustomRecipes.
         * @property {string[]} [CustomSecurityGroupIds] CustomSecurityGroupIds.
         * @property {boolean} EnableAutoHealing EnableAutoHealing.
         * @property {boolean} [InstallUpdatesOnBoot] InstallUpdatesOnBoot.
         * @property {AWS_OpsWorks_Layer_LifecycleEventConfiguration} [LifecycleEventConfiguration] LifecycleEventConfiguration.
         * @property {AWS_OpsWorks_Layer_LoadBasedAutoScaling} [LoadBasedAutoScaling] LoadBasedAutoScaling.
         * @property {string} Name Name.
         * @property {string[]} [Packages] Packages.
         * @property {string} Shortname Shortname.
         * @property {string} StackId StackId.
         * @property {AWS_OpsWorks_Layer_Tag[]} [Tags] Tags.
         * @property {string} Type Type.
         * @property {boolean} [UseEbsOptimizedInstances] UseEbsOptimizedInstances.
         * @property {AWS_OpsWorks_Layer_VolumeConfiguration[]} [VolumeConfigurations] VolumeConfigurations.
         */
        /**
         * Create a new AWS::OpsWorks::Layer
         * @param {AWS_OpsWorks_Layer} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_OpsWorks_Layer_ShutdownEventConfiguration
         * @property {boolean} [DelayUntilElbConnectionsDrained] DelayUntilElbConnectionsDrained.
         * @property {number} [ExecutionTimeout] ExecutionTimeout.
         */
        /**
         * @param {AWS_OpsWorks_Layer_ShutdownEventConfiguration} properties
         * @returns {AWS_OpsWorks_Layer_ShutdownEventConfiguration}
         */
        static ShutdownEventConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Layer_VolumeConfiguration
         * @property {boolean} [Encrypted] Encrypted.
         * @property {number} [Iops] Iops.
         * @property {string} [MountPoint] MountPoint.
         * @property {number} [NumberOfDisks] NumberOfDisks.
         * @property {number} [RaidLevel] RaidLevel.
         * @property {number} [Size] Size.
         * @property {string} [VolumeType] VolumeType.
         */
        /**
         * @param {AWS_OpsWorks_Layer_VolumeConfiguration} properties
         * @returns {AWS_OpsWorks_Layer_VolumeConfiguration}
         */
        static VolumeConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Layer_AutoScalingThresholds
         * @property {number} [CpuThreshold] CpuThreshold.
         * @property {number} [IgnoreMetricsTime] IgnoreMetricsTime.
         * @property {number} [InstanceCount] InstanceCount.
         * @property {number} [LoadThreshold] LoadThreshold.
         * @property {number} [MemoryThreshold] MemoryThreshold.
         * @property {number} [ThresholdsWaitTime] ThresholdsWaitTime.
         */
        /**
         * @param {AWS_OpsWorks_Layer_AutoScalingThresholds} properties
         * @returns {AWS_OpsWorks_Layer_AutoScalingThresholds}
         */
        static AutoScalingThresholds(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Layer_Recipes
         * @property {string[]} [Configure] Configure.
         * @property {string[]} [Deploy] Deploy.
         * @property {string[]} [Setup] Setup.
         * @property {string[]} [Shutdown] Shutdown.
         * @property {string[]} [Undeploy] Undeploy.
         */
        /**
         * @param {AWS_OpsWorks_Layer_Recipes} properties
         * @returns {AWS_OpsWorks_Layer_Recipes}
         */
        static Recipes(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Layer_LifecycleEventConfiguration
         * @property {AWS_OpsWorks_Layer_ShutdownEventConfiguration} [ShutdownEventConfiguration] ShutdownEventConfiguration.
         */
        /**
         * @param {AWS_OpsWorks_Layer_LifecycleEventConfiguration} properties
         * @returns {AWS_OpsWorks_Layer_LifecycleEventConfiguration}
         */
        static LifecycleEventConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Layer_LoadBasedAutoScaling
         * @property {AWS_OpsWorks_Layer_AutoScalingThresholds} [DownScaling] DownScaling.
         * @property {boolean} [Enable] Enable.
         * @property {AWS_OpsWorks_Layer_AutoScalingThresholds} [UpScaling] UpScaling.
         */
        /**
         * @param {AWS_OpsWorks_Layer_LoadBasedAutoScaling} properties
         * @returns {AWS_OpsWorks_Layer_LoadBasedAutoScaling}
         */
        static LoadBasedAutoScaling(properties) { return properties; }
      },
      /**
       * @namespace Stack
       */
      Stack: class {
        /**
         * @typedef {Object} AWS_OpsWorks_Stack
         * @property {string} [AgentVersion] AgentVersion.
         * @property {AWS_OpsWorks_Stack_Map} [Attributes] Attributes.
         * @property {AWS_OpsWorks_Stack_ChefConfiguration} [ChefConfiguration] ChefConfiguration.
         * @property {string[]} [CloneAppIds] CloneAppIds.
         * @property {boolean} [ClonePermissions] ClonePermissions.
         * @property {AWS_OpsWorks_Stack_StackConfigurationManager} [ConfigurationManager] ConfigurationManager.
         * @property {AWS_OpsWorks_Stack_Source} [CustomCookbooksSource] CustomCookbooksSource.
         * @property {string} [CustomJson] CustomJson.
         * @property {string} [DefaultAvailabilityZone] DefaultAvailabilityZone.
         * @property {string} DefaultInstanceProfileArn DefaultInstanceProfileArn.
         * @property {string} [DefaultOs] DefaultOs.
         * @property {string} [DefaultRootDeviceType] DefaultRootDeviceType.
         * @property {string} [DefaultSshKeyName] DefaultSshKeyName.
         * @property {string} [DefaultSubnetId] DefaultSubnetId.
         * @property {string} [EcsClusterArn] EcsClusterArn.
         * @property {AWS_OpsWorks_Stack_ElasticIp[]} [ElasticIps] ElasticIps.
         * @property {string} [HostnameTheme] HostnameTheme.
         * @property {string} Name Name.
         * @property {AWS_OpsWorks_Stack_RdsDbInstance[]} [RdsDbInstances] RdsDbInstances.
         * @property {string} ServiceRoleArn ServiceRoleArn.
         * @property {string} [SourceStackId] SourceStackId.
         * @property {AWS_OpsWorks_Stack_Tag[]} [Tags] Tags.
         * @property {boolean} [UseCustomCookbooks] UseCustomCookbooks.
         * @property {boolean} [UseOpsworksSecurityGroups] UseOpsworksSecurityGroups.
         * @property {string} [VpcId] VpcId.
         */
        /**
         * Create a new AWS::OpsWorks::Stack
         * @param {AWS_OpsWorks_Stack} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_OpsWorks_Stack_Source
         * @property {string} [Password] Password.
         * @property {string} [Revision] Revision.
         * @property {string} [SshKey] SshKey.
         * @property {string} [Type] Type.
         * @property {string} [Url] Url.
         * @property {string} [Username] Username.
         */
        /**
         * @param {AWS_OpsWorks_Stack_Source} properties
         * @returns {AWS_OpsWorks_Stack_Source}
         */
        static Source(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Stack_ChefConfiguration
         * @property {string} [BerkshelfVersion] BerkshelfVersion.
         * @property {boolean} [ManageBerkshelf] ManageBerkshelf.
         */
        /**
         * @param {AWS_OpsWorks_Stack_ChefConfiguration} properties
         * @returns {AWS_OpsWorks_Stack_ChefConfiguration}
         */
        static ChefConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Stack_StackConfigurationManager
         * @property {string} [Name] Name.
         * @property {string} [Version] Version.
         */
        /**
         * @param {AWS_OpsWorks_Stack_StackConfigurationManager} properties
         * @returns {AWS_OpsWorks_Stack_StackConfigurationManager}
         */
        static StackConfigurationManager(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Stack_RdsDbInstance
         * @property {string} DbPassword DbPassword.
         * @property {string} DbUser DbUser.
         * @property {string} RdsDbInstanceArn RdsDbInstanceArn.
         */
        /**
         * @param {AWS_OpsWorks_Stack_RdsDbInstance} properties
         * @returns {AWS_OpsWorks_Stack_RdsDbInstance}
         */
        static RdsDbInstance(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Stack_ElasticIp
         * @property {string} Ip Ip.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_OpsWorks_Stack_ElasticIp} properties
         * @returns {AWS_OpsWorks_Stack_ElasticIp}
         */
        static ElasticIp(properties) { return properties; }
      },
      /**
       * @namespace ElasticLoadBalancerAttachment
       */
      ElasticLoadBalancerAttachment: class {
        /**
         * @typedef {Object} AWS_OpsWorks_ElasticLoadBalancerAttachment
         * @property {string} ElasticLoadBalancerName ElasticLoadBalancerName.
         * @property {string} LayerId LayerId.
         */
        /**
         * Create a new AWS::OpsWorks::ElasticLoadBalancerAttachment
         * @param {AWS_OpsWorks_ElasticLoadBalancerAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Instance
       */
      Instance: class {
        /**
         * @typedef {Object} AWS_OpsWorks_Instance
         * @property {string} [AgentVersion] AgentVersion.
         * @property {string} [AmiId] AmiId.
         * @property {string} [Architecture] Architecture.
         * @property {string} [AutoScalingType] AutoScalingType.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {AWS_OpsWorks_Instance_BlockDeviceMapping[]} [BlockDeviceMappings] BlockDeviceMappings.
         * @property {boolean} [EbsOptimized] EbsOptimized.
         * @property {string[]} [ElasticIps] ElasticIps.
         * @property {string} [Hostname] Hostname.
         * @property {boolean} [InstallUpdatesOnBoot] InstallUpdatesOnBoot.
         * @property {string} InstanceType InstanceType.
         * @property {string[]} LayerIds LayerIds.
         * @property {string} [Os] Os.
         * @property {string} [RootDeviceType] RootDeviceType.
         * @property {string} [SshKeyName] SshKeyName.
         * @property {string} StackId StackId.
         * @property {string} [SubnetId] SubnetId.
         * @property {string} [Tenancy] Tenancy.
         * @property {AWS_OpsWorks_Instance_TimeBasedAutoScaling} [TimeBasedAutoScaling] TimeBasedAutoScaling.
         * @property {string} [VirtualizationType] VirtualizationType.
         * @property {string[]} [Volumes] Volumes.
         */
        /**
         * Create a new AWS::OpsWorks::Instance
         * @param {AWS_OpsWorks_Instance} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_OpsWorks_Instance_BlockDeviceMapping
         * @property {string} [DeviceName] DeviceName.
         * @property {AWS_OpsWorks_Instance_EbsBlockDevice} [Ebs] Ebs.
         * @property {string} [NoDevice] NoDevice.
         * @property {string} [VirtualName] VirtualName.
         */
        /**
         * @param {AWS_OpsWorks_Instance_BlockDeviceMapping} properties
         * @returns {AWS_OpsWorks_Instance_BlockDeviceMapping}
         */
        static BlockDeviceMapping(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Instance_EbsBlockDevice
         * @property {boolean} [DeleteOnTermination] DeleteOnTermination.
         * @property {number} [Iops] Iops.
         * @property {string} [SnapshotId] SnapshotId.
         * @property {number} [VolumeSize] VolumeSize.
         * @property {string} [VolumeType] VolumeType.
         */
        /**
         * @param {AWS_OpsWorks_Instance_EbsBlockDevice} properties
         * @returns {AWS_OpsWorks_Instance_EbsBlockDevice}
         */
        static EbsBlockDevice(properties) { return properties; }
        /**
         * @typedef {Object} AWS_OpsWorks_Instance_TimeBasedAutoScaling
         * @property {AWS_OpsWorks_Instance_Map} [Friday] Friday.
         * @property {AWS_OpsWorks_Instance_Map} [Monday] Monday.
         * @property {AWS_OpsWorks_Instance_Map} [Saturday] Saturday.
         * @property {AWS_OpsWorks_Instance_Map} [Sunday] Sunday.
         * @property {AWS_OpsWorks_Instance_Map} [Thursday] Thursday.
         * @property {AWS_OpsWorks_Instance_Map} [Tuesday] Tuesday.
         * @property {AWS_OpsWorks_Instance_Map} [Wednesday] Wednesday.
         */
        /**
         * @param {AWS_OpsWorks_Instance_TimeBasedAutoScaling} properties
         * @returns {AWS_OpsWorks_Instance_TimeBasedAutoScaling}
         */
        static TimeBasedAutoScaling(properties) { return properties; }
      },
      /**
       * @namespace UserProfile
       */
      UserProfile: class {
        /**
         * @typedef {Object} AWS_OpsWorks_UserProfile
         * @property {boolean} [AllowSelfManagement] AllowSelfManagement.
         * @property {string} IamUserArn IamUserArn.
         * @property {string} [SshPublicKey] SshPublicKey.
         * @property {string} [SshUsername] SshUsername.
         */
        /**
         * Create a new AWS::OpsWorks::UserProfile
         * @param {AWS_OpsWorks_UserProfile} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace CloudFront
     */
    CloudFront: {
      /**
       * @namespace StreamingDistribution
       */
      StreamingDistribution: class {
        /**
         * @typedef {Object} AWS_CloudFront_StreamingDistribution
         * @property {AWS_CloudFront_StreamingDistribution_StreamingDistributionConfig} StreamingDistributionConfig StreamingDistributionConfig.
         * @property {AWS_CloudFront_StreamingDistribution_Tag[]} Tags Tags.
         */
        /**
         * Create a new AWS::CloudFront::StreamingDistribution
         * @param {AWS_CloudFront_StreamingDistribution} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CloudFront_StreamingDistribution_TrustedSigners
         * @property {boolean} Enabled Enabled.
         * @property {string[]} [AwsAccountNumbers] AwsAccountNumbers.
         */
        /**
         * @param {AWS_CloudFront_StreamingDistribution_TrustedSigners} properties
         * @returns {AWS_CloudFront_StreamingDistribution_TrustedSigners}
         */
        static TrustedSigners(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_StreamingDistribution_S3Origin
         * @property {string} DomainName DomainName.
         * @property {string} OriginAccessIdentity OriginAccessIdentity.
         */
        /**
         * @param {AWS_CloudFront_StreamingDistribution_S3Origin} properties
         * @returns {AWS_CloudFront_StreamingDistribution_S3Origin}
         */
        static S3Origin(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_StreamingDistribution_Logging
         * @property {string} Bucket Bucket.
         * @property {boolean} Enabled Enabled.
         * @property {string} Prefix Prefix.
         */
        /**
         * @param {AWS_CloudFront_StreamingDistribution_Logging} properties
         * @returns {AWS_CloudFront_StreamingDistribution_Logging}
         */
        static Logging(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_StreamingDistribution_StreamingDistributionConfig
         * @property {AWS_CloudFront_StreamingDistribution_Logging} [Logging] Logging.
         * @property {string} Comment Comment.
         * @property {string} [PriceClass] PriceClass.
         * @property {AWS_CloudFront_StreamingDistribution_S3Origin} S3Origin S3Origin.
         * @property {boolean} Enabled Enabled.
         * @property {string[]} [Aliases] Aliases.
         * @property {AWS_CloudFront_StreamingDistribution_TrustedSigners} TrustedSigners TrustedSigners.
         */
        /**
         * @param {AWS_CloudFront_StreamingDistribution_StreamingDistributionConfig} properties
         * @returns {AWS_CloudFront_StreamingDistribution_StreamingDistributionConfig}
         */
        static StreamingDistributionConfig(properties) { return properties; }
      },
      /**
       * @namespace Distribution
       */
      Distribution: class {
        /**
         * @typedef {Object} AWS_CloudFront_Distribution
         * @property {AWS_CloudFront_Distribution_DistributionConfig} DistributionConfig DistributionConfig.
         * @property {AWS_CloudFront_Distribution_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::CloudFront::Distribution
         * @param {AWS_CloudFront_Distribution} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_Cookies
         * @property {string[]} [WhitelistedNames] WhitelistedNames.
         * @property {string} Forward Forward.
         */
        /**
         * @param {AWS_CloudFront_Distribution_Cookies} properties
         * @returns {AWS_CloudFront_Distribution_Cookies}
         */
        static Cookies(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_LambdaFunctionAssociation
         * @property {string} [EventType] EventType.
         * @property {string} [LambdaFunctionARN] LambdaFunctionARN.
         */
        /**
         * @param {AWS_CloudFront_Distribution_LambdaFunctionAssociation} properties
         * @returns {AWS_CloudFront_Distribution_LambdaFunctionAssociation}
         */
        static LambdaFunctionAssociation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_CustomOriginConfig
         * @property {number} [OriginReadTimeout] OriginReadTimeout.
         * @property {number} [HTTPSPort] HTTPSPort.
         * @property {number} [OriginKeepaliveTimeout] OriginKeepaliveTimeout.
         * @property {string[]} [OriginSSLProtocols] OriginSSLProtocols.
         * @property {number} [HTTPPort] HTTPPort.
         * @property {string} OriginProtocolPolicy OriginProtocolPolicy.
         */
        /**
         * @param {AWS_CloudFront_Distribution_CustomOriginConfig} properties
         * @returns {AWS_CloudFront_Distribution_CustomOriginConfig}
         */
        static CustomOriginConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_ForwardedValues
         * @property {AWS_CloudFront_Distribution_Cookies} [Cookies] Cookies.
         * @property {string[]} [Headers] Headers.
         * @property {boolean} QueryString QueryString.
         * @property {string[]} [QueryStringCacheKeys] QueryStringCacheKeys.
         */
        /**
         * @param {AWS_CloudFront_Distribution_ForwardedValues} properties
         * @returns {AWS_CloudFront_Distribution_ForwardedValues}
         */
        static ForwardedValues(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_CacheBehavior
         * @property {boolean} [Compress] Compress.
         * @property {AWS_CloudFront_Distribution_LambdaFunctionAssociation[]} [LambdaFunctionAssociations] LambdaFunctionAssociations.
         * @property {string} TargetOriginId TargetOriginId.
         * @property {string} ViewerProtocolPolicy ViewerProtocolPolicy.
         * @property {string[]} [TrustedSigners] TrustedSigners.
         * @property {number} [DefaultTTL] DefaultTTL.
         * @property {string} [FieldLevelEncryptionId] FieldLevelEncryptionId.
         * @property {string[]} [AllowedMethods] AllowedMethods.
         * @property {string} PathPattern PathPattern.
         * @property {string[]} [CachedMethods] CachedMethods.
         * @property {boolean} [SmoothStreaming] SmoothStreaming.
         * @property {AWS_CloudFront_Distribution_ForwardedValues} ForwardedValues ForwardedValues.
         * @property {number} [MinTTL] MinTTL.
         * @property {number} [MaxTTL] MaxTTL.
         */
        /**
         * @param {AWS_CloudFront_Distribution_CacheBehavior} properties
         * @returns {AWS_CloudFront_Distribution_CacheBehavior}
         */
        static CacheBehavior(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_DefaultCacheBehavior
         * @property {boolean} [Compress] Compress.
         * @property {AWS_CloudFront_Distribution_LambdaFunctionAssociation[]} [LambdaFunctionAssociations] LambdaFunctionAssociations.
         * @property {string} TargetOriginId TargetOriginId.
         * @property {string} ViewerProtocolPolicy ViewerProtocolPolicy.
         * @property {string[]} [TrustedSigners] TrustedSigners.
         * @property {number} [DefaultTTL] DefaultTTL.
         * @property {string} [FieldLevelEncryptionId] FieldLevelEncryptionId.
         * @property {string[]} [AllowedMethods] AllowedMethods.
         * @property {string[]} [CachedMethods] CachedMethods.
         * @property {boolean} [SmoothStreaming] SmoothStreaming.
         * @property {AWS_CloudFront_Distribution_ForwardedValues} ForwardedValues ForwardedValues.
         * @property {number} [MinTTL] MinTTL.
         * @property {number} [MaxTTL] MaxTTL.
         */
        /**
         * @param {AWS_CloudFront_Distribution_DefaultCacheBehavior} properties
         * @returns {AWS_CloudFront_Distribution_DefaultCacheBehavior}
         */
        static DefaultCacheBehavior(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_Restrictions
         * @property {AWS_CloudFront_Distribution_GeoRestriction} GeoRestriction GeoRestriction.
         */
        /**
         * @param {AWS_CloudFront_Distribution_Restrictions} properties
         * @returns {AWS_CloudFront_Distribution_Restrictions}
         */
        static Restrictions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_Origin
         * @property {AWS_CloudFront_Distribution_OriginCustomHeader[]} [OriginCustomHeaders] OriginCustomHeaders.
         * @property {string} DomainName DomainName.
         * @property {AWS_CloudFront_Distribution_S3OriginConfig} [S3OriginConfig] S3OriginConfig.
         * @property {string} [OriginPath] OriginPath.
         * @property {string} Id Id.
         * @property {AWS_CloudFront_Distribution_CustomOriginConfig} [CustomOriginConfig] CustomOriginConfig.
         */
        /**
         * @param {AWS_CloudFront_Distribution_Origin} properties
         * @returns {AWS_CloudFront_Distribution_Origin}
         */
        static Origin(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_GeoRestriction
         * @property {string[]} [Locations] Locations.
         * @property {string} RestrictionType RestrictionType.
         */
        /**
         * @param {AWS_CloudFront_Distribution_GeoRestriction} properties
         * @returns {AWS_CloudFront_Distribution_GeoRestriction}
         */
        static GeoRestriction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_ViewerCertificate
         * @property {string} [IamCertificateId] IamCertificateId.
         * @property {string} [SslSupportMethod] SslSupportMethod.
         * @property {string} [MinimumProtocolVersion] MinimumProtocolVersion.
         * @property {boolean} [CloudFrontDefaultCertificate] CloudFrontDefaultCertificate.
         * @property {string} [AcmCertificateArn] AcmCertificateArn.
         */
        /**
         * @param {AWS_CloudFront_Distribution_ViewerCertificate} properties
         * @returns {AWS_CloudFront_Distribution_ViewerCertificate}
         */
        static ViewerCertificate(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_S3OriginConfig
         * @property {string} [OriginAccessIdentity] OriginAccessIdentity.
         */
        /**
         * @param {AWS_CloudFront_Distribution_S3OriginConfig} properties
         * @returns {AWS_CloudFront_Distribution_S3OriginConfig}
         */
        static S3OriginConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_CustomErrorResponse
         * @property {number} [ResponseCode] ResponseCode.
         * @property {number} [ErrorCachingMinTTL] ErrorCachingMinTTL.
         * @property {number} ErrorCode ErrorCode.
         * @property {string} [ResponsePagePath] ResponsePagePath.
         */
        /**
         * @param {AWS_CloudFront_Distribution_CustomErrorResponse} properties
         * @returns {AWS_CloudFront_Distribution_CustomErrorResponse}
         */
        static CustomErrorResponse(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_Logging
         * @property {boolean} [IncludeCookies] IncludeCookies.
         * @property {string} Bucket Bucket.
         * @property {string} [Prefix] Prefix.
         */
        /**
         * @param {AWS_CloudFront_Distribution_Logging} properties
         * @returns {AWS_CloudFront_Distribution_Logging}
         */
        static Logging(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_DistributionConfig
         * @property {AWS_CloudFront_Distribution_Logging} [Logging] Logging.
         * @property {string} [Comment] Comment.
         * @property {string} [DefaultRootObject] DefaultRootObject.
         * @property {AWS_CloudFront_Distribution_Origin[]} [Origins] Origins.
         * @property {AWS_CloudFront_Distribution_ViewerCertificate} [ViewerCertificate] ViewerCertificate.
         * @property {string} [PriceClass] PriceClass.
         * @property {AWS_CloudFront_Distribution_DefaultCacheBehavior} [DefaultCacheBehavior] DefaultCacheBehavior.
         * @property {AWS_CloudFront_Distribution_CustomErrorResponse[]} [CustomErrorResponses] CustomErrorResponses.
         * @property {boolean} Enabled Enabled.
         * @property {string[]} [Aliases] Aliases.
         * @property {boolean} [IPV6Enabled] IPV6Enabled.
         * @property {string} [WebACLId] WebACLId.
         * @property {string} [HttpVersion] HttpVersion.
         * @property {AWS_CloudFront_Distribution_Restrictions} [Restrictions] Restrictions.
         * @property {AWS_CloudFront_Distribution_CacheBehavior[]} [CacheBehaviors] CacheBehaviors.
         */
        /**
         * @param {AWS_CloudFront_Distribution_DistributionConfig} properties
         * @returns {AWS_CloudFront_Distribution_DistributionConfig}
         */
        static DistributionConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudFront_Distribution_OriginCustomHeader
         * @property {string} HeaderValue HeaderValue.
         * @property {string} HeaderName HeaderName.
         */
        /**
         * @param {AWS_CloudFront_Distribution_OriginCustomHeader} properties
         * @returns {AWS_CloudFront_Distribution_OriginCustomHeader}
         */
        static OriginCustomHeader(properties) { return properties; }
      },
      /**
       * @namespace CloudFrontOriginAccessIdentity
       */
      CloudFrontOriginAccessIdentity: class {
        /**
         * @typedef {Object} AWS_CloudFront_CloudFrontOriginAccessIdentity
         * @property {AWS_CloudFront_CloudFrontOriginAccessIdentity_CloudFrontOriginAccessIdentityConfig} CloudFrontOriginAccessIdentityConfig CloudFrontOriginAccessIdentityConfig.
         */
        /**
         * Create a new AWS::CloudFront::CloudFrontOriginAccessIdentity
         * @param {AWS_CloudFront_CloudFrontOriginAccessIdentity} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CloudFront_CloudFrontOriginAccessIdentity_CloudFrontOriginAccessIdentityConfig
         * @property {string} Comment Comment.
         */
        /**
         * @param {AWS_CloudFront_CloudFrontOriginAccessIdentity_CloudFrontOriginAccessIdentityConfig} properties
         * @returns {AWS_CloudFront_CloudFrontOriginAccessIdentity_CloudFrontOriginAccessIdentityConfig}
         */
        static CloudFrontOriginAccessIdentityConfig(properties) { return properties; }
      }
    },
    /**
     * @namespace GameLift
     */
    GameLift: {
      /**
       * @namespace Alias
       */
      Alias: class {
        /**
         * @typedef {Object} AWS_GameLift_Alias
         * @property {string} [Description] Description.
         * @property {string} Name Name.
         * @property {AWS_GameLift_Alias_RoutingStrategy} RoutingStrategy RoutingStrategy.
         */
        /**
         * Create a new AWS::GameLift::Alias
         * @param {AWS_GameLift_Alias} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_GameLift_Alias_RoutingStrategy
         * @property {string} [FleetId] FleetId.
         * @property {string} [Message] Message.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_GameLift_Alias_RoutingStrategy} properties
         * @returns {AWS_GameLift_Alias_RoutingStrategy}
         */
        static RoutingStrategy(properties) { return properties; }
      },
      /**
       * @namespace Build
       */
      Build: class {
        /**
         * @typedef {Object} AWS_GameLift_Build
         * @property {string} [Name] Name.
         * @property {AWS_GameLift_Build_S3Location} [StorageLocation] StorageLocation.
         * @property {string} [Version] Version.
         */
        /**
         * Create a new AWS::GameLift::Build
         * @param {AWS_GameLift_Build} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_GameLift_Build_S3Location
         * @property {string} Bucket Bucket.
         * @property {string} Key Key.
         * @property {string} RoleArn RoleArn.
         */
        /**
         * @param {AWS_GameLift_Build_S3Location} properties
         * @returns {AWS_GameLift_Build_S3Location}
         */
        static S3Location(properties) { return properties; }
      },
      /**
       * @namespace Fleet
       */
      Fleet: class {
        /**
         * @typedef {Object} AWS_GameLift_Fleet
         * @property {string} BuildId BuildId.
         * @property {string} [Description] Description.
         * @property {number} DesiredEC2Instances DesiredEC2Instances.
         * @property {AWS_GameLift_Fleet_IpPermission[]} [EC2InboundPermissions] EC2InboundPermissions.
         * @property {string} EC2InstanceType EC2InstanceType.
         * @property {string[]} [LogPaths] LogPaths.
         * @property {number} [MaxSize] MaxSize.
         * @property {number} [MinSize] MinSize.
         * @property {string} Name Name.
         * @property {string} [ServerLaunchParameters] ServerLaunchParameters.
         * @property {string} ServerLaunchPath ServerLaunchPath.
         */
        /**
         * Create a new AWS::GameLift::Fleet
         * @param {AWS_GameLift_Fleet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_GameLift_Fleet_IpPermission
         * @property {number} FromPort FromPort.
         * @property {string} IpRange IpRange.
         * @property {string} Protocol Protocol.
         * @property {number} ToPort ToPort.
         */
        /**
         * @param {AWS_GameLift_Fleet_IpPermission} properties
         * @returns {AWS_GameLift_Fleet_IpPermission}
         */
        static IpPermission(properties) { return properties; }
      }
    },
    /**
     * @namespace GuardDuty
     */
    GuardDuty: {
      /**
       * @namespace Filter
       */
      Filter: class {
        /**
         * @typedef {Object} AWS_GuardDuty_Filter
         * @property {string} Action Action.
         * @property {string} Description Description.
         * @property {string} DetectorId DetectorId.
         * @property {AWS_GuardDuty_Filter_FindingCriteria} FindingCriteria FindingCriteria.
         * @property {number} Rank Rank.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::GuardDuty::Filter
         * @param {AWS_GuardDuty_Filter} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_GuardDuty_Filter_FindingCriteria
         * @property {string} [Criterion] Criterion.
         * @property {AWS_GuardDuty_Filter_Condition} [ItemType] ItemType.
         */
        /**
         * @param {AWS_GuardDuty_Filter_FindingCriteria} properties
         * @returns {AWS_GuardDuty_Filter_FindingCriteria}
         */
        static FindingCriteria(properties) { return properties; }
        /**
         * @typedef {Object} AWS_GuardDuty_Filter_Condition
         * @property {number} [Lt] Lt.
         * @property {number} [Gte] Gte.
         * @property {string[]} [Neq] Neq.
         * @property {string[]} [Eq] Eq.
         * @property {number} [Lte] Lte.
         */
        /**
         * @param {AWS_GuardDuty_Filter_Condition} properties
         * @returns {AWS_GuardDuty_Filter_Condition}
         */
        static Condition(properties) { return properties; }
      },
      /**
       * @namespace ThreatIntelSet
       */
      ThreatIntelSet: class {
        /**
         * @typedef {Object} AWS_GuardDuty_ThreatIntelSet
         * @property {string} Format Format.
         * @property {boolean} Activate Activate.
         * @property {string} DetectorId DetectorId.
         * @property {string} [Name] Name.
         * @property {string} Location Location.
         */
        /**
         * Create a new AWS::GuardDuty::ThreatIntelSet
         * @param {AWS_GuardDuty_ThreatIntelSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Member
       */
      Member: class {
        /**
         * @typedef {Object} AWS_GuardDuty_Member
         * @property {string} [Status] Status.
         * @property {string} MemberId MemberId.
         * @property {string} Email Email.
         * @property {string} [Message] Message.
         * @property {boolean} [DisableEmailNotification] DisableEmailNotification.
         * @property {string} DetectorId DetectorId.
         */
        /**
         * Create a new AWS::GuardDuty::Member
         * @param {AWS_GuardDuty_Member} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Detector
       */
      Detector: class {
        /**
         * @typedef {Object} AWS_GuardDuty_Detector
         * @property {string} [FindingPublishingFrequency] FindingPublishingFrequency.
         * @property {boolean} Enable Enable.
         */
        /**
         * Create a new AWS::GuardDuty::Detector
         * @param {AWS_GuardDuty_Detector} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace IPSet
       */
      IPSet: class {
        /**
         * @typedef {Object} AWS_GuardDuty_IPSet
         * @property {string} Format Format.
         * @property {boolean} Activate Activate.
         * @property {string} DetectorId DetectorId.
         * @property {string} [Name] Name.
         * @property {string} Location Location.
         */
        /**
         * Create a new AWS::GuardDuty::IPSet
         * @param {AWS_GuardDuty_IPSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Master
       */
      Master: class {
        /**
         * @typedef {Object} AWS_GuardDuty_Master
         * @property {string} DetectorId DetectorId.
         * @property {string} MasterId MasterId.
         * @property {string} [InvitationId] InvitationId.
         */
        /**
         * Create a new AWS::GuardDuty::Master
         * @param {AWS_GuardDuty_Master} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace DirectoryService
     */
    DirectoryService: {
      /**
       * @namespace MicrosoftAD
       */
      MicrosoftAD: class {
        /**
         * @typedef {Object} AWS_DirectoryService_MicrosoftAD
         * @property {boolean} [CreateAlias] CreateAlias.
         * @property {string} [Edition] Edition.
         * @property {boolean} [EnableSso] EnableSso.
         * @property {string} Name Name.
         * @property {string} Password Password.
         * @property {string} [ShortName] ShortName.
         * @property {AWS_DirectoryService_MicrosoftAD_VpcSettings} VpcSettings VpcSettings.
         */
        /**
         * Create a new AWS::DirectoryService::MicrosoftAD
         * @param {AWS_DirectoryService_MicrosoftAD} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_DirectoryService_MicrosoftAD_VpcSettings
         * @property {string[]} SubnetIds SubnetIds.
         * @property {string} VpcId VpcId.
         */
        /**
         * @param {AWS_DirectoryService_MicrosoftAD_VpcSettings} properties
         * @returns {AWS_DirectoryService_MicrosoftAD_VpcSettings}
         */
        static VpcSettings(properties) { return properties; }
      },
      /**
       * @namespace SimpleAD
       */
      SimpleAD: class {
        /**
         * @typedef {Object} AWS_DirectoryService_SimpleAD
         * @property {boolean} [CreateAlias] CreateAlias.
         * @property {string} [Description] Description.
         * @property {boolean} [EnableSso] EnableSso.
         * @property {string} Name Name.
         * @property {string} Password Password.
         * @property {string} [ShortName] ShortName.
         * @property {string} Size Size.
         * @property {AWS_DirectoryService_SimpleAD_VpcSettings} VpcSettings VpcSettings.
         */
        /**
         * Create a new AWS::DirectoryService::SimpleAD
         * @param {AWS_DirectoryService_SimpleAD} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_DirectoryService_SimpleAD_VpcSettings
         * @property {string[]} SubnetIds SubnetIds.
         * @property {string} VpcId VpcId.
         */
        /**
         * @param {AWS_DirectoryService_SimpleAD_VpcSettings} properties
         * @returns {AWS_DirectoryService_SimpleAD_VpcSettings}
         */
        static VpcSettings(properties) { return properties; }
      }
    },
    /**
     * @namespace SNS
     */
    SNS: {
      /**
       * @namespace Subscription
       */
      Subscription: class {
        /**
         * @typedef {Object} AWS_SNS_Subscription
         * @property {string} [DeliveryPolicy] DeliveryPolicy.
         * @property {string} [Endpoint] Endpoint.
         * @property {string} [FilterPolicy] FilterPolicy.
         * @property {string} Protocol Protocol.
         * @property {boolean} [RawMessageDelivery] RawMessageDelivery.
         * @property {string} [Region] Region.
         * @property {string} TopicArn TopicArn.
         */
        /**
         * Create a new AWS::SNS::Subscription
         * @param {AWS_SNS_Subscription} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Topic
       */
      Topic: class {
        /**
         * @typedef {Object} AWS_SNS_Topic
         * @property {string} [DisplayName] DisplayName.
         * @property {string} [KmsMasterKeyId] KmsMasterKeyId.
         * @property {AWS_SNS_Topic_Subscription[]} [Subscription] Subscription.
         * @property {string} [TopicName] TopicName.
         */
        /**
         * Create a new AWS::SNS::Topic
         * @param {AWS_SNS_Topic} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SNS_Topic_Subscription
         * @property {string} Endpoint Endpoint.
         * @property {string} Protocol Protocol.
         */
        /**
         * @param {AWS_SNS_Topic_Subscription} properties
         * @returns {AWS_SNS_Topic_Subscription}
         */
        static Subscription(properties) { return properties; }
      },
      /**
       * @namespace TopicPolicy
       */
      TopicPolicy: class {
        /**
         * @typedef {Object} AWS_SNS_TopicPolicy
         * @property {string} PolicyDocument PolicyDocument.
         * @property {string[]} Topics Topics.
         */
        /**
         * Create a new AWS::SNS::TopicPolicy
         * @param {AWS_SNS_TopicPolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace EFS
     */
    EFS: {
      /**
       * @namespace MountTarget
       */
      MountTarget: class {
        /**
         * @typedef {Object} AWS_EFS_MountTarget
         * @property {string} FileSystemId FileSystemId.
         * @property {string} [IpAddress] IpAddress.
         * @property {string[]} SecurityGroups SecurityGroups.
         * @property {string} SubnetId SubnetId.
         */
        /**
         * Create a new AWS::EFS::MountTarget
         * @param {AWS_EFS_MountTarget} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace FileSystem
       */
      FileSystem: class {
        /**
         * @typedef {Object} AWS_EFS_FileSystem
         * @property {boolean} [Encrypted] Encrypted.
         * @property {AWS_EFS_FileSystem_ElasticFileSystemTag[]} [FileSystemTags] FileSystemTags.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {string} [PerformanceMode] PerformanceMode.
         * @property {number} [ProvisionedThroughputInMibps] ProvisionedThroughputInMibps.
         * @property {string} [ThroughputMode] ThroughputMode.
         */
        /**
         * Create a new AWS::EFS::FileSystem
         * @param {AWS_EFS_FileSystem} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_EFS_FileSystem_ElasticFileSystemTag
         * @property {string} Key Key.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_EFS_FileSystem_ElasticFileSystemTag} properties
         * @returns {AWS_EFS_FileSystem_ElasticFileSystemTag}
         */
        static ElasticFileSystemTag(properties) { return properties; }
      }
    },
    /**
     * @namespace SSM
     */
    SSM: {
      /**
       * @namespace Document
       */
      Document: class {
        /**
         * @typedef {Object} AWS_SSM_Document
         * @property {string} Content Content.
         * @property {string} [DocumentType] DocumentType.
         * @property {AWS_SSM_Document_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::SSM::Document
         * @param {AWS_SSM_Document} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace PatchBaseline
       */
      PatchBaseline: class {
        /**
         * @typedef {Object} AWS_SSM_PatchBaseline
         * @property {string} [OperatingSystem] OperatingSystem.
         * @property {string[]} [ApprovedPatches] ApprovedPatches.
         * @property {string} [RejectedPatchesAction] RejectedPatchesAction.
         * @property {string[]} [PatchGroups] PatchGroups.
         * @property {string} [Description] Description.
         * @property {string} [ApprovedPatchesComplianceLevel] ApprovedPatchesComplianceLevel.
         * @property {boolean} [ApprovedPatchesEnableNonSecurity] ApprovedPatchesEnableNonSecurity.
         * @property {AWS_SSM_PatchBaseline_RuleGroup} [ApprovalRules] ApprovalRules.
         * @property {AWS_SSM_PatchBaseline_PatchFilterGroup} [GlobalFilters] GlobalFilters.
         * @property {AWS_SSM_PatchBaseline_PatchSource[]} [Sources] Sources.
         * @property {string} Name Name.
         * @property {string[]} [RejectedPatches] RejectedPatches.
         */
        /**
         * Create a new AWS::SSM::PatchBaseline
         * @param {AWS_SSM_PatchBaseline} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SSM_PatchBaseline_RuleGroup
         * @property {AWS_SSM_PatchBaseline_Rule[]} [PatchRules] PatchRules.
         */
        /**
         * @param {AWS_SSM_PatchBaseline_RuleGroup} properties
         * @returns {AWS_SSM_PatchBaseline_RuleGroup}
         */
        static RuleGroup(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_PatchBaseline_PatchFilter
         * @property {string[]} [Values] Values.
         * @property {string} [Key] Key.
         */
        /**
         * @param {AWS_SSM_PatchBaseline_PatchFilter} properties
         * @returns {AWS_SSM_PatchBaseline_PatchFilter}
         */
        static PatchFilter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_PatchBaseline_Rule
         * @property {boolean} [EnableNonSecurity] EnableNonSecurity.
         * @property {AWS_SSM_PatchBaseline_PatchFilterGroup} [PatchFilterGroup] PatchFilterGroup.
         * @property {number} [ApproveAfterDays] ApproveAfterDays.
         * @property {string} [ComplianceLevel] ComplianceLevel.
         */
        /**
         * @param {AWS_SSM_PatchBaseline_Rule} properties
         * @returns {AWS_SSM_PatchBaseline_Rule}
         */
        static Rule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_PatchBaseline_PatchFilterGroup
         * @property {AWS_SSM_PatchBaseline_PatchFilter[]} [PatchFilters] PatchFilters.
         */
        /**
         * @param {AWS_SSM_PatchBaseline_PatchFilterGroup} properties
         * @returns {AWS_SSM_PatchBaseline_PatchFilterGroup}
         */
        static PatchFilterGroup(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_PatchBaseline_PatchSource
         * @property {string[]} [Products] Products.
         * @property {string} [Configuration] Configuration.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_SSM_PatchBaseline_PatchSource} properties
         * @returns {AWS_SSM_PatchBaseline_PatchSource}
         */
        static PatchSource(properties) { return properties; }
      },
      /**
       * @namespace MaintenanceWindowTarget
       */
      MaintenanceWindowTarget: class {
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTarget
         * @property {string} [OwnerInformation] OwnerInformation.
         * @property {string} [Description] Description.
         * @property {string} WindowId WindowId.
         * @property {string} ResourceType ResourceType.
         * @property {AWS_SSM_MaintenanceWindowTarget_Targets[]} Targets Targets.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::SSM::MaintenanceWindowTarget
         * @param {AWS_SSM_MaintenanceWindowTarget} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTarget_Targets
         * @property {string[]} [Values] Values.
         * @property {string} Key Key.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTarget_Targets} properties
         * @returns {AWS_SSM_MaintenanceWindowTarget_Targets}
         */
        static Targets(properties) { return properties; }
      },
      /**
       * @namespace MaintenanceWindow
       */
      MaintenanceWindow: class {
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindow
         * @property {string} [StartDate] StartDate.
         * @property {string} [Description] Description.
         * @property {boolean} AllowUnassociatedTargets AllowUnassociatedTargets.
         * @property {number} Cutoff Cutoff.
         * @property {string} Schedule Schedule.
         * @property {number} Duration Duration.
         * @property {string} [EndDate] EndDate.
         * @property {string} Name Name.
         * @property {string} [ScheduleTimezone] ScheduleTimezone.
         */
        /**
         * Create a new AWS::SSM::MaintenanceWindow
         * @param {AWS_SSM_MaintenanceWindow} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Parameter
       */
      Parameter: class {
        /**
         * @typedef {Object} AWS_SSM_Parameter
         * @property {string} Type Type.
         * @property {string} [Description] Description.
         * @property {string} [AllowedPattern] AllowedPattern.
         * @property {string} Value Value.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::SSM::Parameter
         * @param {AWS_SSM_Parameter} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ResourceDataSync
       */
      ResourceDataSync: class {
        /**
         * @typedef {Object} AWS_SSM_ResourceDataSync
         * @property {string} [KMSKeyArn] KMSKeyArn.
         * @property {string} BucketName BucketName.
         * @property {string} BucketRegion BucketRegion.
         * @property {string} SyncFormat SyncFormat.
         * @property {string} SyncName SyncName.
         * @property {string} [BucketPrefix] BucketPrefix.
         */
        /**
         * Create a new AWS::SSM::ResourceDataSync
         * @param {AWS_SSM_ResourceDataSync} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Association
       */
      Association: class {
        /**
         * @typedef {Object} AWS_SSM_Association
         * @property {string} [AssociationName] AssociationName.
         * @property {string} [DocumentVersion] DocumentVersion.
         * @property {string} [InstanceId] InstanceId.
         * @property {string} Name Name.
         * @property {AWS_SSM_Association_InstanceAssociationOutputLocation} [OutputLocation] OutputLocation.
         * @property {AWS_SSM_Association_Map} [Parameters] Parameters.
         * @property {string} [ScheduleExpression] ScheduleExpression.
         * @property {AWS_SSM_Association_Target[]} [Targets] Targets.
         */
        /**
         * Create a new AWS::SSM::Association
         * @param {AWS_SSM_Association} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SSM_Association_InstanceAssociationOutputLocation
         * @property {AWS_SSM_Association_S3OutputLocation} [S3Location] S3Location.
         */
        /**
         * @param {AWS_SSM_Association_InstanceAssociationOutputLocation} properties
         * @returns {AWS_SSM_Association_InstanceAssociationOutputLocation}
         */
        static InstanceAssociationOutputLocation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_Association_Target
         * @property {string} Key Key.
         * @property {string[]} Values Values.
         */
        /**
         * @param {AWS_SSM_Association_Target} properties
         * @returns {AWS_SSM_Association_Target}
         */
        static Target(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_Association_ParameterValues
         * @property {string[]} ParameterValues ParameterValues.
         */
        /**
         * @param {AWS_SSM_Association_ParameterValues} properties
         * @returns {AWS_SSM_Association_ParameterValues}
         */
        static ParameterValues(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_Association_S3OutputLocation
         * @property {string} [OutputS3BucketName] OutputS3BucketName.
         * @property {string} [OutputS3KeyPrefix] OutputS3KeyPrefix.
         */
        /**
         * @param {AWS_SSM_Association_S3OutputLocation} properties
         * @returns {AWS_SSM_Association_S3OutputLocation}
         */
        static S3OutputLocation(properties) { return properties; }
      },
      /**
       * @namespace MaintenanceWindowTask
       */
      MaintenanceWindowTask: class {
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask
         * @property {string} MaxErrors MaxErrors.
         * @property {string} [Description] Description.
         * @property {string} ServiceRoleArn ServiceRoleArn.
         * @property {number} Priority Priority.
         * @property {string} MaxConcurrency MaxConcurrency.
         * @property {AWS_SSM_MaintenanceWindowTask_Target[]} Targets Targets.
         * @property {string} [Name] Name.
         * @property {string} TaskArn TaskArn.
         * @property {AWS_SSM_MaintenanceWindowTask_TaskInvocationParameters} [TaskInvocationParameters] TaskInvocationParameters.
         * @property {string} [WindowId] WindowId.
         * @property {string} [TaskParameters] TaskParameters.
         * @property {string} TaskType TaskType.
         * @property {AWS_SSM_MaintenanceWindowTask_LoggingInfo} [LoggingInfo] LoggingInfo.
         */
        /**
         * Create a new AWS::SSM::MaintenanceWindowTask
         * @param {AWS_SSM_MaintenanceWindowTask} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask_MaintenanceWindowLambdaParameters
         * @property {string} [ClientContext] ClientContext.
         * @property {string} [Qualifier] Qualifier.
         * @property {string} [Payload] Payload.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowLambdaParameters} properties
         * @returns {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowLambdaParameters}
         */
        static MaintenanceWindowLambdaParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask_NotificationConfig
         * @property {string} NotificationArn NotificationArn.
         * @property {string} [NotificationType] NotificationType.
         * @property {string[]} [NotificationEvents] NotificationEvents.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTask_NotificationConfig} properties
         * @returns {AWS_SSM_MaintenanceWindowTask_NotificationConfig}
         */
        static NotificationConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask_MaintenanceWindowAutomationParameters
         * @property {string} [Parameters] Parameters.
         * @property {string} [DocumentVersion] DocumentVersion.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowAutomationParameters} properties
         * @returns {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowAutomationParameters}
         */
        static MaintenanceWindowAutomationParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask_TaskInvocationParameters
         * @property {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowRunCommandParameters} [MaintenanceWindowRunCommandParameters] MaintenanceWindowRunCommandParameters.
         * @property {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowAutomationParameters} [MaintenanceWindowAutomationParameters] MaintenanceWindowAutomationParameters.
         * @property {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowStepFunctionsParameters} [MaintenanceWindowStepFunctionsParameters] MaintenanceWindowStepFunctionsParameters.
         * @property {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowLambdaParameters} [MaintenanceWindowLambdaParameters] MaintenanceWindowLambdaParameters.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTask_TaskInvocationParameters} properties
         * @returns {AWS_SSM_MaintenanceWindowTask_TaskInvocationParameters}
         */
        static TaskInvocationParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask_LoggingInfo
         * @property {string} S3Bucket S3Bucket.
         * @property {string} Region Region.
         * @property {string} [S3Prefix] S3Prefix.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTask_LoggingInfo} properties
         * @returns {AWS_SSM_MaintenanceWindowTask_LoggingInfo}
         */
        static LoggingInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask_Target
         * @property {string[]} [Values] Values.
         * @property {string} Key Key.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTask_Target} properties
         * @returns {AWS_SSM_MaintenanceWindowTask_Target}
         */
        static Target(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask_MaintenanceWindowStepFunctionsParameters
         * @property {string} [Input] Input.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowStepFunctionsParameters} properties
         * @returns {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowStepFunctionsParameters}
         */
        static MaintenanceWindowStepFunctionsParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SSM_MaintenanceWindowTask_MaintenanceWindowRunCommandParameters
         * @property {number} [TimeoutSeconds] TimeoutSeconds.
         * @property {string} [Comment] Comment.
         * @property {string} [OutputS3KeyPrefix] OutputS3KeyPrefix.
         * @property {string} [Parameters] Parameters.
         * @property {string} [DocumentHashType] DocumentHashType.
         * @property {string} [ServiceRoleArn] ServiceRoleArn.
         * @property {AWS_SSM_MaintenanceWindowTask_NotificationConfig} [NotificationConfig] NotificationConfig.
         * @property {string} [OutputS3BucketName] OutputS3BucketName.
         * @property {string} [DocumentHash] DocumentHash.
         */
        /**
         * @param {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowRunCommandParameters} properties
         * @returns {AWS_SSM_MaintenanceWindowTask_MaintenanceWindowRunCommandParameters}
         */
        static MaintenanceWindowRunCommandParameters(properties) { return properties; }
      }
    },
    /**
     * @namespace SageMaker
     */
    SageMaker: {
      /**
       * @namespace Model
       */
      Model: class {
        /**
         * @typedef {Object} AWS_SageMaker_Model
         * @property {string} ExecutionRoleArn ExecutionRoleArn.
         * @property {AWS_SageMaker_Model_ContainerDefinition} [PrimaryContainer] PrimaryContainer.
         * @property {string} [ModelName] ModelName.
         * @property {AWS_SageMaker_Model_VpcConfig} [VpcConfig] VpcConfig.
         * @property {AWS_SageMaker_Model_ContainerDefinition[]} [Containers] Containers.
         * @property {AWS_SageMaker_Model_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::SageMaker::Model
         * @param {AWS_SageMaker_Model} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SageMaker_Model_VpcConfig
         * @property {string[]} Subnets Subnets.
         * @property {string[]} SecurityGroupIds SecurityGroupIds.
         */
        /**
         * @param {AWS_SageMaker_Model_VpcConfig} properties
         * @returns {AWS_SageMaker_Model_VpcConfig}
         */
        static VpcConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SageMaker_Model_ContainerDefinition
         * @property {string} [ContainerHostname] ContainerHostname.
         * @property {string} [Environment] Environment.
         * @property {string} [ModelDataUrl] ModelDataUrl.
         * @property {string} Image Image.
         */
        /**
         * @param {AWS_SageMaker_Model_ContainerDefinition} properties
         * @returns {AWS_SageMaker_Model_ContainerDefinition}
         */
        static ContainerDefinition(properties) { return properties; }
      },
      /**
       * @namespace NotebookInstanceLifecycleConfig
       */
      NotebookInstanceLifecycleConfig: class {
        /**
         * @typedef {Object} AWS_SageMaker_NotebookInstanceLifecycleConfig
         * @property {AWS_SageMaker_NotebookInstanceLifecycleConfig_NotebookInstanceLifecycleHook[]} [OnStart] OnStart.
         * @property {string} [NotebookInstanceLifecycleConfigName] NotebookInstanceLifecycleConfigName.
         * @property {AWS_SageMaker_NotebookInstanceLifecycleConfig_NotebookInstanceLifecycleHook[]} [OnCreate] OnCreate.
         */
        /**
         * Create a new AWS::SageMaker::NotebookInstanceLifecycleConfig
         * @param {AWS_SageMaker_NotebookInstanceLifecycleConfig} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SageMaker_NotebookInstanceLifecycleConfig_NotebookInstanceLifecycleHook
         * @property {string} [Content] Content.
         */
        /**
         * @param {AWS_SageMaker_NotebookInstanceLifecycleConfig_NotebookInstanceLifecycleHook} properties
         * @returns {AWS_SageMaker_NotebookInstanceLifecycleConfig_NotebookInstanceLifecycleHook}
         */
        static NotebookInstanceLifecycleHook(properties) { return properties; }
      },
      /**
       * @namespace EndpointConfig
       */
      EndpointConfig: class {
        /**
         * @typedef {Object} AWS_SageMaker_EndpointConfig
         * @property {AWS_SageMaker_EndpointConfig_ProductionVariant[]} ProductionVariants ProductionVariants.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {string} [EndpointConfigName] EndpointConfigName.
         * @property {AWS_SageMaker_EndpointConfig_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::SageMaker::EndpointConfig
         * @param {AWS_SageMaker_EndpointConfig} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SageMaker_EndpointConfig_ProductionVariant
         * @property {string} ModelName ModelName.
         * @property {string} VariantName VariantName.
         * @property {number} InitialInstanceCount InitialInstanceCount.
         * @property {string} InstanceType InstanceType.
         * @property {string} [AcceleratorType] AcceleratorType.
         * @property {number} InitialVariantWeight InitialVariantWeight.
         */
        /**
         * @param {AWS_SageMaker_EndpointConfig_ProductionVariant} properties
         * @returns {AWS_SageMaker_EndpointConfig_ProductionVariant}
         */
        static ProductionVariant(properties) { return properties; }
      },
      /**
       * @namespace Endpoint
       */
      Endpoint: class {
        /**
         * @typedef {Object} AWS_SageMaker_Endpoint
         * @property {string} [EndpointName] EndpointName.
         * @property {string} EndpointConfigName EndpointConfigName.
         * @property {AWS_SageMaker_Endpoint_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::SageMaker::Endpoint
         * @param {AWS_SageMaker_Endpoint} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace NotebookInstance
       */
      NotebookInstance: class {
        /**
         * @typedef {Object} AWS_SageMaker_NotebookInstance
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {number} [VolumeSizeInGB] VolumeSizeInGB.
         * @property {string} [DirectInternetAccess] DirectInternetAccess.
         * @property {string} [SubnetId] SubnetId.
         * @property {string} [NotebookInstanceName] NotebookInstanceName.
         * @property {string} InstanceType InstanceType.
         * @property {string} [LifecycleConfigName] LifecycleConfigName.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string} RoleArn RoleArn.
         * @property {AWS_SageMaker_NotebookInstance_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::SageMaker::NotebookInstance
         * @param {AWS_SageMaker_NotebookInstance} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Config
     */
    Config: {
      /**
       * @namespace DeliveryChannel
       */
      DeliveryChannel: class {
        /**
         * @typedef {Object} AWS_Config_DeliveryChannel
         * @property {AWS_Config_DeliveryChannel_ConfigSnapshotDeliveryProperties} [ConfigSnapshotDeliveryProperties] ConfigSnapshotDeliveryProperties.
         * @property {string} [Name] Name.
         * @property {string} S3BucketName S3BucketName.
         * @property {string} [S3KeyPrefix] S3KeyPrefix.
         * @property {string} [SnsTopicARN] SnsTopicARN.
         */
        /**
         * Create a new AWS::Config::DeliveryChannel
         * @param {AWS_Config_DeliveryChannel} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Config_DeliveryChannel_ConfigSnapshotDeliveryProperties
         * @property {string} [DeliveryFrequency] DeliveryFrequency.
         */
        /**
         * @param {AWS_Config_DeliveryChannel_ConfigSnapshotDeliveryProperties} properties
         * @returns {AWS_Config_DeliveryChannel_ConfigSnapshotDeliveryProperties}
         */
        static ConfigSnapshotDeliveryProperties(properties) { return properties; }
      },
      /**
       * @namespace ConfigurationAggregator
       */
      ConfigurationAggregator: class {
        /**
         * @typedef {Object} AWS_Config_ConfigurationAggregator
         * @property {AWS_Config_ConfigurationAggregator_AccountAggregationSource[]} [AccountAggregationSources] AccountAggregationSources.
         * @property {string} ConfigurationAggregatorName ConfigurationAggregatorName.
         * @property {AWS_Config_ConfigurationAggregator_OrganizationAggregationSource} [OrganizationAggregationSource] OrganizationAggregationSource.
         */
        /**
         * Create a new AWS::Config::ConfigurationAggregator
         * @param {AWS_Config_ConfigurationAggregator} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Config_ConfigurationAggregator_OrganizationAggregationSource
         * @property {boolean} [AllAwsRegions] AllAwsRegions.
         * @property {string[]} [AwsRegions] AwsRegions.
         * @property {string} RoleArn RoleArn.
         */
        /**
         * @param {AWS_Config_ConfigurationAggregator_OrganizationAggregationSource} properties
         * @returns {AWS_Config_ConfigurationAggregator_OrganizationAggregationSource}
         */
        static OrganizationAggregationSource(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Config_ConfigurationAggregator_AccountAggregationSource
         * @property {boolean} [AllAwsRegions] AllAwsRegions.
         * @property {string[]} [AwsRegions] AwsRegions.
         * @property {string[]} AccountIds AccountIds.
         */
        /**
         * @param {AWS_Config_ConfigurationAggregator_AccountAggregationSource} properties
         * @returns {AWS_Config_ConfigurationAggregator_AccountAggregationSource}
         */
        static AccountAggregationSource(properties) { return properties; }
      },
      /**
       * @namespace AggregationAuthorization
       */
      AggregationAuthorization: class {
        /**
         * @typedef {Object} AWS_Config_AggregationAuthorization
         * @property {string} AuthorizedAccountId AuthorizedAccountId.
         * @property {string} AuthorizedAwsRegion AuthorizedAwsRegion.
         */
        /**
         * Create a new AWS::Config::AggregationAuthorization
         * @param {AWS_Config_AggregationAuthorization} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ConfigurationRecorder
       */
      ConfigurationRecorder: class {
        /**
         * @typedef {Object} AWS_Config_ConfigurationRecorder
         * @property {string} [Name] Name.
         * @property {AWS_Config_ConfigurationRecorder_RecordingGroup} [RecordingGroup] RecordingGroup.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * Create a new AWS::Config::ConfigurationRecorder
         * @param {AWS_Config_ConfigurationRecorder} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Config_ConfigurationRecorder_RecordingGroup
         * @property {boolean} [AllSupported] AllSupported.
         * @property {boolean} [IncludeGlobalResourceTypes] IncludeGlobalResourceTypes.
         * @property {string[]} [ResourceTypes] ResourceTypes.
         */
        /**
         * @param {AWS_Config_ConfigurationRecorder_RecordingGroup} properties
         * @returns {AWS_Config_ConfigurationRecorder_RecordingGroup}
         */
        static RecordingGroup(properties) { return properties; }
      },
      /**
       * @namespace ConfigRule
       */
      ConfigRule: class {
        /**
         * @typedef {Object} AWS_Config_ConfigRule
         * @property {string} [ConfigRuleName] ConfigRuleName.
         * @property {string} [Description] Description.
         * @property {string} [InputParameters] InputParameters.
         * @property {string} [MaximumExecutionFrequency] MaximumExecutionFrequency.
         * @property {AWS_Config_ConfigRule_Scope} [Scope] Scope.
         * @property {AWS_Config_ConfigRule_Source} Source Source.
         */
        /**
         * Create a new AWS::Config::ConfigRule
         * @param {AWS_Config_ConfigRule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Config_ConfigRule_Scope
         * @property {string} [ComplianceResourceId] ComplianceResourceId.
         * @property {string[]} [ComplianceResourceTypes] ComplianceResourceTypes.
         * @property {string} [TagKey] TagKey.
         * @property {string} [TagValue] TagValue.
         */
        /**
         * @param {AWS_Config_ConfigRule_Scope} properties
         * @returns {AWS_Config_ConfigRule_Scope}
         */
        static Scope(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Config_ConfigRule_Source
         * @property {string} Owner Owner.
         * @property {AWS_Config_ConfigRule_SourceDetail[]} [SourceDetails] SourceDetails.
         * @property {string} SourceIdentifier SourceIdentifier.
         */
        /**
         * @param {AWS_Config_ConfigRule_Source} properties
         * @returns {AWS_Config_ConfigRule_Source}
         */
        static Source(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Config_ConfigRule_SourceDetail
         * @property {string} EventSource EventSource.
         * @property {string} [MaximumExecutionFrequency] MaximumExecutionFrequency.
         * @property {string} MessageType MessageType.
         */
        /**
         * @param {AWS_Config_ConfigRule_SourceDetail} properties
         * @returns {AWS_Config_ConfigRule_SourceDetail}
         */
        static SourceDetail(properties) { return properties; }
      }
    },
    /**
     * @namespace KMS
     */
    KMS: {
      /**
       * @namespace Key
       */
      Key: class {
        /**
         * @typedef {Object} AWS_KMS_Key
         * @property {string} [Description] Description.
         * @property {boolean} [EnableKeyRotation] EnableKeyRotation.
         * @property {boolean} [Enabled] Enabled.
         * @property {string} KeyPolicy KeyPolicy.
         * @property {string} [KeyUsage] KeyUsage.
         * @property {number} [PendingWindowInDays] PendingWindowInDays.
         * @property {AWS_KMS_Key_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::KMS::Key
         * @param {AWS_KMS_Key} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Alias
       */
      Alias: class {
        /**
         * @typedef {Object} AWS_KMS_Alias
         * @property {string} AliasName AliasName.
         * @property {string} TargetKeyId TargetKeyId.
         */
        /**
         * Create a new AWS::KMS::Alias
         * @param {AWS_KMS_Alias} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Redshift
     */
    Redshift: {
      /**
       * @namespace Cluster
       */
      Cluster: class {
        /**
         * @typedef {Object} AWS_Redshift_Cluster
         * @property {boolean} [AllowVersionUpgrade] AllowVersionUpgrade.
         * @property {number} [AutomatedSnapshotRetentionPeriod] AutomatedSnapshotRetentionPeriod.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [ClusterIdentifier] ClusterIdentifier.
         * @property {string} [ClusterParameterGroupName] ClusterParameterGroupName.
         * @property {string[]} [ClusterSecurityGroups] ClusterSecurityGroups.
         * @property {string} [ClusterSubnetGroupName] ClusterSubnetGroupName.
         * @property {string} ClusterType ClusterType.
         * @property {string} [ClusterVersion] ClusterVersion.
         * @property {string} DBName DBName.
         * @property {string} [ElasticIp] ElasticIp.
         * @property {boolean} [Encrypted] Encrypted.
         * @property {string} [HsmClientCertificateIdentifier] HsmClientCertificateIdentifier.
         * @property {string} [HsmConfigurationIdentifier] HsmConfigurationIdentifier.
         * @property {string[]} [IamRoles] IamRoles.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {AWS_Redshift_Cluster_LoggingProperties} [LoggingProperties] LoggingProperties.
         * @property {string} MasterUserPassword MasterUserPassword.
         * @property {string} MasterUsername MasterUsername.
         * @property {string} NodeType NodeType.
         * @property {number} [NumberOfNodes] NumberOfNodes.
         * @property {string} [OwnerAccount] OwnerAccount.
         * @property {number} [Port] Port.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {boolean} [PubliclyAccessible] PubliclyAccessible.
         * @property {string} [SnapshotClusterIdentifier] SnapshotClusterIdentifier.
         * @property {string} [SnapshotIdentifier] SnapshotIdentifier.
         * @property {AWS_Redshift_Cluster_Tag[]} [Tags] Tags.
         * @property {string[]} [VpcSecurityGroupIds] VpcSecurityGroupIds.
         */
        /**
         * Create a new AWS::Redshift::Cluster
         * @param {AWS_Redshift_Cluster} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Redshift_Cluster_LoggingProperties
         * @property {string} BucketName BucketName.
         * @property {string} [S3KeyPrefix] S3KeyPrefix.
         */
        /**
         * @param {AWS_Redshift_Cluster_LoggingProperties} properties
         * @returns {AWS_Redshift_Cluster_LoggingProperties}
         */
        static LoggingProperties(properties) { return properties; }
      },
      /**
       * @namespace ClusterParameterGroup
       */
      ClusterParameterGroup: class {
        /**
         * @typedef {Object} AWS_Redshift_ClusterParameterGroup
         * @property {string} Description Description.
         * @property {string} ParameterGroupFamily ParameterGroupFamily.
         * @property {AWS_Redshift_ClusterParameterGroup_Parameter[]} [Parameters] Parameters.
         * @property {AWS_Redshift_ClusterParameterGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::Redshift::ClusterParameterGroup
         * @param {AWS_Redshift_ClusterParameterGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Redshift_ClusterParameterGroup_Parameter
         * @property {string} ParameterName ParameterName.
         * @property {string} ParameterValue ParameterValue.
         */
        /**
         * @param {AWS_Redshift_ClusterParameterGroup_Parameter} properties
         * @returns {AWS_Redshift_ClusterParameterGroup_Parameter}
         */
        static Parameter(properties) { return properties; }
      },
      /**
       * @namespace ClusterSecurityGroupIngress
       */
      ClusterSecurityGroupIngress: class {
        /**
         * @typedef {Object} AWS_Redshift_ClusterSecurityGroupIngress
         * @property {string} [CIDRIP] CIDRIP.
         * @property {string} ClusterSecurityGroupName ClusterSecurityGroupName.
         * @property {string} [EC2SecurityGroupName] EC2SecurityGroupName.
         * @property {string} [EC2SecurityGroupOwnerId] EC2SecurityGroupOwnerId.
         */
        /**
         * Create a new AWS::Redshift::ClusterSecurityGroupIngress
         * @param {AWS_Redshift_ClusterSecurityGroupIngress} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ClusterSubnetGroup
       */
      ClusterSubnetGroup: class {
        /**
         * @typedef {Object} AWS_Redshift_ClusterSubnetGroup
         * @property {string} Description Description.
         * @property {string[]} SubnetIds SubnetIds.
         * @property {AWS_Redshift_ClusterSubnetGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::Redshift::ClusterSubnetGroup
         * @param {AWS_Redshift_ClusterSubnetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ClusterSecurityGroup
       */
      ClusterSecurityGroup: class {
        /**
         * @typedef {Object} AWS_Redshift_ClusterSecurityGroup
         * @property {string} Description Description.
         * @property {AWS_Redshift_ClusterSecurityGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::Redshift::ClusterSecurityGroup
         * @param {AWS_Redshift_ClusterSecurityGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Lambda
     */
    Lambda: {
      /**
       * @namespace EventSourceMapping
       */
      EventSourceMapping: class {
        /**
         * @typedef {Object} AWS_Lambda_EventSourceMapping
         * @property {number} [BatchSize] BatchSize.
         * @property {boolean} [Enabled] Enabled.
         * @property {string} EventSourceArn EventSourceArn.
         * @property {string} FunctionName FunctionName.
         * @property {string} [StartingPosition] StartingPosition.
         */
        /**
         * Create a new AWS::Lambda::EventSourceMapping
         * @param {AWS_Lambda_EventSourceMapping} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace LayerVersion
       */
      LayerVersion: class {
        /**
         * @typedef {Object} AWS_Lambda_LayerVersion
         * @property {string[]} [CompatibleRuntimes] CompatibleRuntimes.
         * @property {string} [LicenseInfo] LicenseInfo.
         * @property {string} [Description] Description.
         * @property {string} [LayerName] LayerName.
         * @property {AWS_Lambda_LayerVersion_Content} Content Content.
         */
        /**
         * Create a new AWS::Lambda::LayerVersion
         * @param {AWS_Lambda_LayerVersion} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Lambda_LayerVersion_Content
         * @property {string} [S3ObjectVersion] S3ObjectVersion.
         * @property {string} S3Bucket S3Bucket.
         * @property {string} S3Key S3Key.
         */
        /**
         * @param {AWS_Lambda_LayerVersion_Content} properties
         * @returns {AWS_Lambda_LayerVersion_Content}
         */
        static Content(properties) { return properties; }
      },
      /**
       * @namespace Alias
       */
      Alias: class {
        /**
         * @typedef {Object} AWS_Lambda_Alias
         * @property {string} [Description] Description.
         * @property {string} FunctionName FunctionName.
         * @property {string} FunctionVersion FunctionVersion.
         * @property {string} Name Name.
         * @property {AWS_Lambda_Alias_AliasRoutingConfiguration} [RoutingConfig] RoutingConfig.
         */
        /**
         * Create a new AWS::Lambda::Alias
         * @param {AWS_Lambda_Alias} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Lambda_Alias_AliasRoutingConfiguration
         * @property {AWS_Lambda_Alias_VersionWeight[]} AdditionalVersionWeights AdditionalVersionWeights.
         */
        /**
         * @param {AWS_Lambda_Alias_AliasRoutingConfiguration} properties
         * @returns {AWS_Lambda_Alias_AliasRoutingConfiguration}
         */
        static AliasRoutingConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Lambda_Alias_VersionWeight
         * @property {string} FunctionVersion FunctionVersion.
         * @property {number} FunctionWeight FunctionWeight.
         */
        /**
         * @param {AWS_Lambda_Alias_VersionWeight} properties
         * @returns {AWS_Lambda_Alias_VersionWeight}
         */
        static VersionWeight(properties) { return properties; }
      },
      /**
       * @namespace LayerVersionPermission
       */
      LayerVersionPermission: class {
        /**
         * @typedef {Object} AWS_Lambda_LayerVersionPermission
         * @property {string} Action Action.
         * @property {string} LayerVersionArn LayerVersionArn.
         * @property {string} [OrganizationId] OrganizationId.
         * @property {string} Principal Principal.
         */
        /**
         * Create a new AWS::Lambda::LayerVersionPermission
         * @param {AWS_Lambda_LayerVersionPermission} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Function
       */
      Function: class {
        /**
         * @typedef {Object} AWS_Lambda_Function
         * @property {AWS_Lambda_Function_Code} Code Code.
         * @property {AWS_Lambda_Function_DeadLetterConfig} [DeadLetterConfig] DeadLetterConfig.
         * @property {string} [Description] Description.
         * @property {AWS_Lambda_Function_Environment} [Environment] Environment.
         * @property {string} [FunctionName] FunctionName.
         * @property {string} Handler Handler.
         * @property {string} [KmsKeyArn] KmsKeyArn.
         * @property {string[]} [Layers] Layers.
         * @property {number} [MemorySize] MemorySize.
         * @property {number} [ReservedConcurrentExecutions] ReservedConcurrentExecutions.
         * @property {string} Role Role.
         * @property {string} Runtime Runtime.
         * @property {AWS_Lambda_Function_Tag[]} [Tags] Tags.
         * @property {number} [Timeout] Timeout.
         * @property {AWS_Lambda_Function_TracingConfig} [TracingConfig] TracingConfig.
         * @property {AWS_Lambda_Function_VpcConfig} [VpcConfig] VpcConfig.
         */
        /**
         * Create a new AWS::Lambda::Function
         * @param {AWS_Lambda_Function} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Lambda_Function_VpcConfig
         * @property {string[]} SecurityGroupIds SecurityGroupIds.
         * @property {string[]} SubnetIds SubnetIds.
         */
        /**
         * @param {AWS_Lambda_Function_VpcConfig} properties
         * @returns {AWS_Lambda_Function_VpcConfig}
         */
        static VpcConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Lambda_Function_DeadLetterConfig
         * @property {string} [TargetArn] TargetArn.
         */
        /**
         * @param {AWS_Lambda_Function_DeadLetterConfig} properties
         * @returns {AWS_Lambda_Function_DeadLetterConfig}
         */
        static DeadLetterConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Lambda_Function_TracingConfig
         * @property {string} [Mode] Mode.
         */
        /**
         * @param {AWS_Lambda_Function_TracingConfig} properties
         * @returns {AWS_Lambda_Function_TracingConfig}
         */
        static TracingConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Lambda_Function_Code
         * @property {string} [S3Bucket] S3Bucket.
         * @property {string} [S3Key] S3Key.
         * @property {string} [S3ObjectVersion] S3ObjectVersion.
         * @property {string} [ZipFile] ZipFile.
         */
        /**
         * @param {AWS_Lambda_Function_Code} properties
         * @returns {AWS_Lambda_Function_Code}
         */
        static Code(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Lambda_Function_Environment
         * @property {AWS_Lambda_Function_Map} [Variables] Variables.
         */
        /**
         * @param {AWS_Lambda_Function_Environment} properties
         * @returns {AWS_Lambda_Function_Environment}
         */
        static Environment(properties) { return properties; }
      },
      /**
       * @namespace Version
       */
      Version: class {
        /**
         * @typedef {Object} AWS_Lambda_Version
         * @property {string} [CodeSha256] CodeSha256.
         * @property {string} [Description] Description.
         * @property {string} FunctionName FunctionName.
         */
        /**
         * Create a new AWS::Lambda::Version
         * @param {AWS_Lambda_Version} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Permission
       */
      Permission: class {
        /**
         * @typedef {Object} AWS_Lambda_Permission
         * @property {string} Action Action.
         * @property {string} [EventSourceToken] EventSourceToken.
         * @property {string} FunctionName FunctionName.
         * @property {string} Principal Principal.
         * @property {string} [SourceAccount] SourceAccount.
         * @property {string} [SourceArn] SourceArn.
         */
        /**
         * Create a new AWS::Lambda::Permission
         * @param {AWS_Lambda_Permission} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace CertificateManager
     */
    CertificateManager: {
      /**
       * @namespace Certificate
       */
      Certificate: class {
        /**
         * @typedef {Object} AWS_CertificateManager_Certificate
         * @property {string} DomainName DomainName.
         * @property {AWS_CertificateManager_Certificate_DomainValidationOption[]} [DomainValidationOptions] DomainValidationOptions.
         * @property {string[]} [SubjectAlternativeNames] SubjectAlternativeNames.
         * @property {AWS_CertificateManager_Certificate_Tag[]} [Tags] Tags.
         * @property {string} [ValidationMethod] ValidationMethod.
         */
        /**
         * Create a new AWS::CertificateManager::Certificate
         * @param {AWS_CertificateManager_Certificate} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CertificateManager_Certificate_DomainValidationOption
         * @property {string} DomainName DomainName.
         * @property {string} ValidationDomain ValidationDomain.
         */
        /**
         * @param {AWS_CertificateManager_Certificate_DomainValidationOption} properties
         * @returns {AWS_CertificateManager_Certificate_DomainValidationOption}
         */
        static DomainValidationOption(properties) { return properties; }
      }
    },
    /**
     * @namespace Inspector
     */
    Inspector: {
      /**
       * @namespace ResourceGroup
       */
      ResourceGroup: class {
        /**
         * @typedef {Object} AWS_Inspector_ResourceGroup
         * @property {AWS_Inspector_ResourceGroup_Tag[]} ResourceGroupTags ResourceGroupTags.
         */
        /**
         * Create a new AWS::Inspector::ResourceGroup
         * @param {AWS_Inspector_ResourceGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace AssessmentTemplate
       */
      AssessmentTemplate: class {
        /**
         * @typedef {Object} AWS_Inspector_AssessmentTemplate
         * @property {string} AssessmentTargetArn AssessmentTargetArn.
         * @property {number} DurationInSeconds DurationInSeconds.
         * @property {string} [AssessmentTemplateName] AssessmentTemplateName.
         * @property {string[]} RulesPackageArns RulesPackageArns.
         * @property {AWS_Inspector_AssessmentTemplate_Tag[]} [UserAttributesForFindings] UserAttributesForFindings.
         */
        /**
         * Create a new AWS::Inspector::AssessmentTemplate
         * @param {AWS_Inspector_AssessmentTemplate} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace AssessmentTarget
       */
      AssessmentTarget: class {
        /**
         * @typedef {Object} AWS_Inspector_AssessmentTarget
         * @property {string} [AssessmentTargetName] AssessmentTargetName.
         * @property {string} [ResourceGroupArn] ResourceGroupArn.
         */
        /**
         * Create a new AWS::Inspector::AssessmentTarget
         * @param {AWS_Inspector_AssessmentTarget} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace IoT1Click
     */
    IoT1Click: {
      /**
       * @namespace Project
       */
      Project: class {
        /**
         * @typedef {Object} AWS_IoT1Click_Project
         * @property {string} [Description] Description.
         * @property {AWS_IoT1Click_Project_PlacementTemplate} PlacementTemplate PlacementTemplate.
         * @property {string} [ProjectName] ProjectName.
         */
        /**
         * Create a new AWS::IoT1Click::Project
         * @param {AWS_IoT1Click_Project} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IoT1Click_Project_DeviceTemplate
         * @property {string} [DeviceType] DeviceType.
         * @property {string} [CallbackOverrides] CallbackOverrides.
         */
        /**
         * @param {AWS_IoT1Click_Project_DeviceTemplate} properties
         * @returns {AWS_IoT1Click_Project_DeviceTemplate}
         */
        static DeviceTemplate(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT1Click_Project_PlacementTemplate
         * @property {string} [DeviceTemplates] DeviceTemplates.
         * @property {string} [DefaultAttributes] DefaultAttributes.
         */
        /**
         * @param {AWS_IoT1Click_Project_PlacementTemplate} properties
         * @returns {AWS_IoT1Click_Project_PlacementTemplate}
         */
        static PlacementTemplate(properties) { return properties; }
      },
      /**
       * @namespace Device
       */
      Device: class {
        /**
         * @typedef {Object} AWS_IoT1Click_Device
         * @property {string} DeviceId DeviceId.
         * @property {boolean} Enabled Enabled.
         */
        /**
         * Create a new AWS::IoT1Click::Device
         * @param {AWS_IoT1Click_Device} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Placement
       */
      Placement: class {
        /**
         * @typedef {Object} AWS_IoT1Click_Placement
         * @property {string} [PlacementName] PlacementName.
         * @property {string} ProjectName ProjectName.
         * @property {string} [AssociatedDevices] AssociatedDevices.
         * @property {string} [Attributes] Attributes.
         */
        /**
         * Create a new AWS::IoT1Click::Placement
         * @param {AWS_IoT1Click_Placement} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace IoTAnalytics
     */
    IoTAnalytics: {
      /**
       * @namespace Dataset
       */
      Dataset: class {
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset
         * @property {AWS_IoTAnalytics_Dataset_Action[]} Actions Actions.
         * @property {string} [DatasetName] DatasetName.
         * @property {AWS_IoTAnalytics_Dataset_Trigger[]} [Triggers] Triggers.
         * @property {AWS_IoTAnalytics_Dataset_RetentionPeriod} [RetentionPeriod] RetentionPeriod.
         * @property {AWS_IoTAnalytics_Dataset_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::IoTAnalytics::Dataset
         * @param {AWS_IoTAnalytics_Dataset} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_DatasetContentVersionValue
         * @property {string} [DatasetName] DatasetName.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_DatasetContentVersionValue} properties
         * @returns {AWS_IoTAnalytics_Dataset_DatasetContentVersionValue}
         */
        static DatasetContentVersionValue(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_OutputFileUriValue
         * @property {string} [FileName] FileName.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_OutputFileUriValue} properties
         * @returns {AWS_IoTAnalytics_Dataset_OutputFileUriValue}
         */
        static OutputFileUriValue(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_QueryAction
         * @property {AWS_IoTAnalytics_Dataset_Filter[]} [Filters] Filters.
         * @property {string} SqlQuery SqlQuery.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_QueryAction} properties
         * @returns {AWS_IoTAnalytics_Dataset_QueryAction}
         */
        static QueryAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_Variable
         * @property {AWS_IoTAnalytics_Dataset_DatasetContentVersionValue} [DatasetContentVersionValue] DatasetContentVersionValue.
         * @property {number} [DoubleValue] DoubleValue.
         * @property {AWS_IoTAnalytics_Dataset_OutputFileUriValue} [OutputFileUriValue] OutputFileUriValue.
         * @property {string} VariableName VariableName.
         * @property {string} [StringValue] StringValue.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_Variable} properties
         * @returns {AWS_IoTAnalytics_Dataset_Variable}
         */
        static Variable(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_Filter
         * @property {AWS_IoTAnalytics_Dataset_DeltaTime} [DeltaTime] DeltaTime.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_Filter} properties
         * @returns {AWS_IoTAnalytics_Dataset_Filter}
         */
        static Filter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_DeltaTime
         * @property {string} TimeExpression TimeExpression.
         * @property {number} OffsetSeconds OffsetSeconds.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_DeltaTime} properties
         * @returns {AWS_IoTAnalytics_Dataset_DeltaTime}
         */
        static DeltaTime(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_ResourceConfiguration
         * @property {number} VolumeSizeInGB VolumeSizeInGB.
         * @property {string} ComputeType ComputeType.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_ResourceConfiguration} properties
         * @returns {AWS_IoTAnalytics_Dataset_ResourceConfiguration}
         */
        static ResourceConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_TriggeringDataset
         * @property {string} DatasetName DatasetName.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_TriggeringDataset} properties
         * @returns {AWS_IoTAnalytics_Dataset_TriggeringDataset}
         */
        static TriggeringDataset(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_Schedule
         * @property {string} ScheduleExpression ScheduleExpression.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_Schedule} properties
         * @returns {AWS_IoTAnalytics_Dataset_Schedule}
         */
        static Schedule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_Trigger
         * @property {AWS_IoTAnalytics_Dataset_Schedule} [Schedule] Schedule.
         * @property {AWS_IoTAnalytics_Dataset_TriggeringDataset} [TriggeringDataset] TriggeringDataset.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_Trigger} properties
         * @returns {AWS_IoTAnalytics_Dataset_Trigger}
         */
        static Trigger(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_RetentionPeriod
         * @property {number} NumberOfDays NumberOfDays.
         * @property {boolean} Unlimited Unlimited.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_RetentionPeriod} properties
         * @returns {AWS_IoTAnalytics_Dataset_RetentionPeriod}
         */
        static RetentionPeriod(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_Action
         * @property {string} ActionName ActionName.
         * @property {AWS_IoTAnalytics_Dataset_ContainerAction} [ContainerAction] ContainerAction.
         * @property {AWS_IoTAnalytics_Dataset_QueryAction} [QueryAction] QueryAction.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_Action} properties
         * @returns {AWS_IoTAnalytics_Dataset_Action}
         */
        static Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Dataset_ContainerAction
         * @property {AWS_IoTAnalytics_Dataset_Variable[]} [Variables] Variables.
         * @property {string} ExecutionRoleArn ExecutionRoleArn.
         * @property {string} Image Image.
         * @property {AWS_IoTAnalytics_Dataset_ResourceConfiguration} ResourceConfiguration ResourceConfiguration.
         */
        /**
         * @param {AWS_IoTAnalytics_Dataset_ContainerAction} properties
         * @returns {AWS_IoTAnalytics_Dataset_ContainerAction}
         */
        static ContainerAction(properties) { return properties; }
      },
      /**
       * @namespace Channel
       */
      Channel: class {
        /**
         * @typedef {Object} AWS_IoTAnalytics_Channel
         * @property {string} [ChannelName] ChannelName.
         * @property {AWS_IoTAnalytics_Channel_RetentionPeriod} [RetentionPeriod] RetentionPeriod.
         * @property {AWS_IoTAnalytics_Channel_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::IoTAnalytics::Channel
         * @param {AWS_IoTAnalytics_Channel} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Channel_RetentionPeriod
         * @property {number} [NumberOfDays] NumberOfDays.
         * @property {boolean} [Unlimited] Unlimited.
         */
        /**
         * @param {AWS_IoTAnalytics_Channel_RetentionPeriod} properties
         * @returns {AWS_IoTAnalytics_Channel_RetentionPeriod}
         */
        static RetentionPeriod(properties) { return properties; }
      },
      /**
       * @namespace Pipeline
       */
      Pipeline: class {
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline
         * @property {string} [PipelineName] PipelineName.
         * @property {AWS_IoTAnalytics_Pipeline_Tag[]} [Tags] Tags.
         * @property {AWS_IoTAnalytics_Pipeline_Activity[]} PipelineActivities PipelineActivities.
         */
        /**
         * Create a new AWS::IoTAnalytics::Pipeline
         * @param {AWS_IoTAnalytics_Pipeline} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_DeviceShadowEnrich
         * @property {string} [Attribute] Attribute.
         * @property {string} [Next] Next.
         * @property {string} [ThingName] ThingName.
         * @property {string} [RoleArn] RoleArn.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_DeviceShadowEnrich} properties
         * @returns {AWS_IoTAnalytics_Pipeline_DeviceShadowEnrich}
         */
        static DeviceShadowEnrich(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_Activity
         * @property {AWS_IoTAnalytics_Pipeline_SelectAttributes} [SelectAttributes] SelectAttributes.
         * @property {AWS_IoTAnalytics_Pipeline_Datastore} [Datastore] Datastore.
         * @property {AWS_IoTAnalytics_Pipeline_Filter} [Filter] Filter.
         * @property {AWS_IoTAnalytics_Pipeline_AddAttributes} [AddAttributes] AddAttributes.
         * @property {AWS_IoTAnalytics_Pipeline_Channel} [Channel] Channel.
         * @property {AWS_IoTAnalytics_Pipeline_DeviceShadowEnrich} [DeviceShadowEnrich] DeviceShadowEnrich.
         * @property {AWS_IoTAnalytics_Pipeline_Math} [Math] Math.
         * @property {AWS_IoTAnalytics_Pipeline_Lambda} [Lambda] Lambda.
         * @property {AWS_IoTAnalytics_Pipeline_DeviceRegistryEnrich} [DeviceRegistryEnrich] DeviceRegistryEnrich.
         * @property {AWS_IoTAnalytics_Pipeline_RemoveAttributes} [RemoveAttributes] RemoveAttributes.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_Activity} properties
         * @returns {AWS_IoTAnalytics_Pipeline_Activity}
         */
        static Activity(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_Lambda
         * @property {number} [BatchSize] BatchSize.
         * @property {string} [Next] Next.
         * @property {string} [LambdaName] LambdaName.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_Lambda} properties
         * @returns {AWS_IoTAnalytics_Pipeline_Lambda}
         */
        static Lambda(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_Math
         * @property {string} [Attribute] Attribute.
         * @property {string} [Next] Next.
         * @property {string} [Math] Math.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_Math} properties
         * @returns {AWS_IoTAnalytics_Pipeline_Math}
         */
        static Math(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_RemoveAttributes
         * @property {string} [Next] Next.
         * @property {string[]} [Attributes] Attributes.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_RemoveAttributes} properties
         * @returns {AWS_IoTAnalytics_Pipeline_RemoveAttributes}
         */
        static RemoveAttributes(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_SelectAttributes
         * @property {string} [Next] Next.
         * @property {string[]} [Attributes] Attributes.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_SelectAttributes} properties
         * @returns {AWS_IoTAnalytics_Pipeline_SelectAttributes}
         */
        static SelectAttributes(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_Datastore
         * @property {string} [DatastoreName] DatastoreName.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_Datastore} properties
         * @returns {AWS_IoTAnalytics_Pipeline_Datastore}
         */
        static Datastore(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_AddAttributes
         * @property {string} [Next] Next.
         * @property {string} [Attributes] Attributes.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_AddAttributes} properties
         * @returns {AWS_IoTAnalytics_Pipeline_AddAttributes}
         */
        static AddAttributes(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_DeviceRegistryEnrich
         * @property {string} [Attribute] Attribute.
         * @property {string} [Next] Next.
         * @property {string} [ThingName] ThingName.
         * @property {string} [RoleArn] RoleArn.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_DeviceRegistryEnrich} properties
         * @returns {AWS_IoTAnalytics_Pipeline_DeviceRegistryEnrich}
         */
        static DeviceRegistryEnrich(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_Channel
         * @property {string} [ChannelName] ChannelName.
         * @property {string} [Next] Next.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_Channel} properties
         * @returns {AWS_IoTAnalytics_Pipeline_Channel}
         */
        static Channel(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Pipeline_Filter
         * @property {string} [Filter] Filter.
         * @property {string} [Next] Next.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_IoTAnalytics_Pipeline_Filter} properties
         * @returns {AWS_IoTAnalytics_Pipeline_Filter}
         */
        static Filter(properties) { return properties; }
      },
      /**
       * @namespace Datastore
       */
      Datastore: class {
        /**
         * @typedef {Object} AWS_IoTAnalytics_Datastore
         * @property {string} [DatastoreName] DatastoreName.
         * @property {AWS_IoTAnalytics_Datastore_RetentionPeriod} [RetentionPeriod] RetentionPeriod.
         * @property {AWS_IoTAnalytics_Datastore_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::IoTAnalytics::Datastore
         * @param {AWS_IoTAnalytics_Datastore} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IoTAnalytics_Datastore_RetentionPeriod
         * @property {number} [NumberOfDays] NumberOfDays.
         * @property {boolean} [Unlimited] Unlimited.
         */
        /**
         * @param {AWS_IoTAnalytics_Datastore_RetentionPeriod} properties
         * @returns {AWS_IoTAnalytics_Datastore_RetentionPeriod}
         */
        static RetentionPeriod(properties) { return properties; }
      }
    },
    /**
     * @namespace Batch
     */
    Batch: {
      /**
       * @namespace JobDefinition
       */
      JobDefinition: class {
        /**
         * @typedef {Object} AWS_Batch_JobDefinition
         * @property {string} Type Type.
         * @property {string} [Parameters] Parameters.
         * @property {AWS_Batch_JobDefinition_NodeProperties} [NodeProperties] NodeProperties.
         * @property {AWS_Batch_JobDefinition_Timeout} [Timeout] Timeout.
         * @property {AWS_Batch_JobDefinition_ContainerProperties} [ContainerProperties] ContainerProperties.
         * @property {string} [JobDefinitionName] JobDefinitionName.
         * @property {AWS_Batch_JobDefinition_RetryStrategy} [RetryStrategy] RetryStrategy.
         */
        /**
         * Create a new AWS::Batch::JobDefinition
         * @param {AWS_Batch_JobDefinition} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_NodeProperties
         * @property {number} MainNode MainNode.
         * @property {AWS_Batch_JobDefinition_NodeRangeProperty[]} NodeRangeProperties NodeRangeProperties.
         * @property {number} NumNodes NumNodes.
         */
        /**
         * @param {AWS_Batch_JobDefinition_NodeProperties} properties
         * @returns {AWS_Batch_JobDefinition_NodeProperties}
         */
        static NodeProperties(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_Volumes
         * @property {AWS_Batch_JobDefinition_VolumesHost} [Host] Host.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Batch_JobDefinition_Volumes} properties
         * @returns {AWS_Batch_JobDefinition_Volumes}
         */
        static Volumes(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_RetryStrategy
         * @property {number} [Attempts] Attempts.
         */
        /**
         * @param {AWS_Batch_JobDefinition_RetryStrategy} properties
         * @returns {AWS_Batch_JobDefinition_RetryStrategy}
         */
        static RetryStrategy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_ContainerProperties
         * @property {string} [User] User.
         * @property {number} Memory Memory.
         * @property {boolean} [Privileged] Privileged.
         * @property {string} [JobRoleArn] JobRoleArn.
         * @property {boolean} [ReadonlyRootFilesystem] ReadonlyRootFilesystem.
         * @property {number} Vcpus Vcpus.
         * @property {string} Image Image.
         * @property {AWS_Batch_JobDefinition_MountPoints[]} [MountPoints] MountPoints.
         * @property {AWS_Batch_JobDefinition_Volumes[]} [Volumes] Volumes.
         * @property {string[]} [Command] Command.
         * @property {AWS_Batch_JobDefinition_Environment[]} [Environment] Environment.
         * @property {AWS_Batch_JobDefinition_Ulimit[]} [Ulimits] Ulimits.
         * @property {string} [InstanceType] InstanceType.
         */
        /**
         * @param {AWS_Batch_JobDefinition_ContainerProperties} properties
         * @returns {AWS_Batch_JobDefinition_ContainerProperties}
         */
        static ContainerProperties(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_Timeout
         * @property {number} [AttemptDurationSeconds] AttemptDurationSeconds.
         */
        /**
         * @param {AWS_Batch_JobDefinition_Timeout} properties
         * @returns {AWS_Batch_JobDefinition_Timeout}
         */
        static Timeout(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_NodeRangeProperty
         * @property {AWS_Batch_JobDefinition_ContainerProperties} [Container] Container.
         * @property {string} TargetNodes TargetNodes.
         */
        /**
         * @param {AWS_Batch_JobDefinition_NodeRangeProperty} properties
         * @returns {AWS_Batch_JobDefinition_NodeRangeProperty}
         */
        static NodeRangeProperty(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_MountPoints
         * @property {boolean} [ReadOnly] ReadOnly.
         * @property {string} [SourceVolume] SourceVolume.
         * @property {string} [ContainerPath] ContainerPath.
         */
        /**
         * @param {AWS_Batch_JobDefinition_MountPoints} properties
         * @returns {AWS_Batch_JobDefinition_MountPoints}
         */
        static MountPoints(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_Environment
         * @property {string} [Value] Value.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Batch_JobDefinition_Environment} properties
         * @returns {AWS_Batch_JobDefinition_Environment}
         */
        static Environment(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_Ulimit
         * @property {number} SoftLimit SoftLimit.
         * @property {number} HardLimit HardLimit.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_Batch_JobDefinition_Ulimit} properties
         * @returns {AWS_Batch_JobDefinition_Ulimit}
         */
        static Ulimit(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_JobDefinition_VolumesHost
         * @property {string} [SourcePath] SourcePath.
         */
        /**
         * @param {AWS_Batch_JobDefinition_VolumesHost} properties
         * @returns {AWS_Batch_JobDefinition_VolumesHost}
         */
        static VolumesHost(properties) { return properties; }
      },
      /**
       * @namespace JobQueue
       */
      JobQueue: class {
        /**
         * @typedef {Object} AWS_Batch_JobQueue
         * @property {AWS_Batch_JobQueue_ComputeEnvironmentOrder[]} ComputeEnvironmentOrder ComputeEnvironmentOrder.
         * @property {number} Priority Priority.
         * @property {string} [State] State.
         * @property {string} [JobQueueName] JobQueueName.
         */
        /**
         * Create a new AWS::Batch::JobQueue
         * @param {AWS_Batch_JobQueue} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Batch_JobQueue_ComputeEnvironmentOrder
         * @property {string} ComputeEnvironment ComputeEnvironment.
         * @property {number} Order Order.
         */
        /**
         * @param {AWS_Batch_JobQueue_ComputeEnvironmentOrder} properties
         * @returns {AWS_Batch_JobQueue_ComputeEnvironmentOrder}
         */
        static ComputeEnvironmentOrder(properties) { return properties; }
      },
      /**
       * @namespace ComputeEnvironment
       */
      ComputeEnvironment: class {
        /**
         * @typedef {Object} AWS_Batch_ComputeEnvironment
         * @property {string} Type Type.
         * @property {string} ServiceRole ServiceRole.
         * @property {string} [ComputeEnvironmentName] ComputeEnvironmentName.
         * @property {AWS_Batch_ComputeEnvironment_ComputeResources} [ComputeResources] ComputeResources.
         * @property {string} [State] State.
         */
        /**
         * Create a new AWS::Batch::ComputeEnvironment
         * @param {AWS_Batch_ComputeEnvironment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Batch_ComputeEnvironment_LaunchTemplateSpecification
         * @property {string} [LaunchTemplateName] LaunchTemplateName.
         * @property {string} [Version] Version.
         * @property {string} [LaunchTemplateId] LaunchTemplateId.
         */
        /**
         * @param {AWS_Batch_ComputeEnvironment_LaunchTemplateSpecification} properties
         * @returns {AWS_Batch_ComputeEnvironment_LaunchTemplateSpecification}
         */
        static LaunchTemplateSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Batch_ComputeEnvironment_ComputeResources
         * @property {string} [SpotIamFleetRole] SpotIamFleetRole.
         * @property {number} MaxvCpus MaxvCpus.
         * @property {number} [BidPercentage] BidPercentage.
         * @property {string[]} SecurityGroupIds SecurityGroupIds.
         * @property {string[]} Subnets Subnets.
         * @property {string} Type Type.
         * @property {number} MinvCpus MinvCpus.
         * @property {AWS_Batch_ComputeEnvironment_LaunchTemplateSpecification} [LaunchTemplate] LaunchTemplate.
         * @property {string} [ImageId] ImageId.
         * @property {string} InstanceRole InstanceRole.
         * @property {string[]} InstanceTypes InstanceTypes.
         * @property {string} [Ec2KeyPair] Ec2KeyPair.
         * @property {string} [PlacementGroup] PlacementGroup.
         * @property {string} [Tags] Tags.
         * @property {number} [DesiredvCpus] DesiredvCpus.
         */
        /**
         * @param {AWS_Batch_ComputeEnvironment_ComputeResources} properties
         * @returns {AWS_Batch_ComputeEnvironment_ComputeResources}
         */
        static ComputeResources(properties) { return properties; }
      }
    },
    /**
     * @namespace DocDB
     */
    DocDB: {
      /**
       * @namespace DBSubnetGroup
       */
      DBSubnetGroup: class {
        /**
         * @typedef {Object} AWS_DocDB_DBSubnetGroup
         * @property {string} [DBSubnetGroupName] DBSubnetGroupName.
         * @property {string} DBSubnetGroupDescription DBSubnetGroupDescription.
         * @property {string[]} SubnetIds SubnetIds.
         * @property {AWS_DocDB_DBSubnetGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::DocDB::DBSubnetGroup
         * @param {AWS_DocDB_DBSubnetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBInstance
       */
      DBInstance: class {
        /**
         * @typedef {Object} AWS_DocDB_DBInstance
         * @property {string} DBInstanceClass DBInstanceClass.
         * @property {string} DBClusterIdentifier DBClusterIdentifier.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {boolean} [AutoMinorVersionUpgrade] AutoMinorVersionUpgrade.
         * @property {string} [DBInstanceIdentifier] DBInstanceIdentifier.
         * @property {AWS_DocDB_DBInstance_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::DocDB::DBInstance
         * @param {AWS_DocDB_DBInstance} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBCluster
       */
      DBCluster: class {
        /**
         * @typedef {Object} AWS_DocDB_DBCluster
         * @property {boolean} [StorageEncrypted] StorageEncrypted.
         * @property {string} [EngineVersion] EngineVersion.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {string[]} [AvailabilityZones] AvailabilityZones.
         * @property {string} [SnapshotIdentifier] SnapshotIdentifier.
         * @property {number} [Port] Port.
         * @property {string} [DBClusterIdentifier] DBClusterIdentifier.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {string} [DBSubnetGroupName] DBSubnetGroupName.
         * @property {string} [PreferredBackupWindow] PreferredBackupWindow.
         * @property {string} [MasterUserPassword] MasterUserPassword.
         * @property {string[]} [VpcSecurityGroupIds] VpcSecurityGroupIds.
         * @property {string} [MasterUsername] MasterUsername.
         * @property {string} [DBClusterParameterGroupName] DBClusterParameterGroupName.
         * @property {number} [BackupRetentionPeriod] BackupRetentionPeriod.
         * @property {AWS_DocDB_DBCluster_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::DocDB::DBCluster
         * @param {AWS_DocDB_DBCluster} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace DBClusterParameterGroup
       */
      DBClusterParameterGroup: class {
        /**
         * @typedef {Object} AWS_DocDB_DBClusterParameterGroup
         * @property {string} Description Description.
         * @property {string} Parameters Parameters.
         * @property {string} Family Family.
         * @property {AWS_DocDB_DBClusterParameterGroup_Tag[]} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::DocDB::DBClusterParameterGroup
         * @param {AWS_DocDB_DBClusterParameterGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace OpsWorksCM
     */
    OpsWorksCM: {
      /**
       * @namespace Server
       */
      Server: class {
        /**
         * @typedef {Object} AWS_OpsWorksCM_Server
         * @property {string} [KeyPair] KeyPair.
         * @property {string} [EngineVersion] EngineVersion.
         * @property {string} ServiceRoleArn ServiceRoleArn.
         * @property {boolean} [DisableAutomatedBackup] DisableAutomatedBackup.
         * @property {string} [BackupId] BackupId.
         * @property {string} [EngineModel] EngineModel.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {boolean} [AssociatePublicIpAddress] AssociatePublicIpAddress.
         * @property {string} InstanceProfileArn InstanceProfileArn.
         * @property {string} [PreferredBackupWindow] PreferredBackupWindow.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string[]} [SubnetIds] SubnetIds.
         * @property {string} [ServerName] ServerName.
         * @property {AWS_OpsWorksCM_Server_EngineAttribute[]} [EngineAttributes] EngineAttributes.
         * @property {number} [BackupRetentionCount] BackupRetentionCount.
         * @property {string} InstanceType InstanceType.
         * @property {string} [Engine] Engine.
         */
        /**
         * Create a new AWS::OpsWorksCM::Server
         * @param {AWS_OpsWorksCM_Server} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_OpsWorksCM_Server_EngineAttribute
         * @property {string} [Value] Value.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_OpsWorksCM_Server_EngineAttribute} properties
         * @returns {AWS_OpsWorksCM_Server_EngineAttribute}
         */
        static EngineAttribute(properties) { return properties; }
      }
    },
    /**
     * @namespace IoT
     */
    IoT: {
      /**
       * @namespace Thing
       */
      Thing: class {
        /**
         * @typedef {Object} AWS_IoT_Thing
         * @property {AWS_IoT_Thing_AttributePayload} [AttributePayload] AttributePayload.
         * @property {string} [ThingName] ThingName.
         */
        /**
         * Create a new AWS::IoT::Thing
         * @param {AWS_IoT_Thing} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IoT_Thing_AttributePayload
         * @property {AWS_IoT_Thing_Map} [Attributes] Attributes.
         */
        /**
         * @param {AWS_IoT_Thing_AttributePayload} properties
         * @returns {AWS_IoT_Thing_AttributePayload}
         */
        static AttributePayload(properties) { return properties; }
      },
      /**
       * @namespace Policy
       */
      Policy: class {
        /**
         * @typedef {Object} AWS_IoT_Policy
         * @property {string} PolicyDocument PolicyDocument.
         * @property {string} [PolicyName] PolicyName.
         */
        /**
         * Create a new AWS::IoT::Policy
         * @param {AWS_IoT_Policy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace TopicRule
       */
      TopicRule: class {
        /**
         * @typedef {Object} AWS_IoT_TopicRule
         * @property {string} [RuleName] RuleName.
         * @property {AWS_IoT_TopicRule_TopicRulePayload} TopicRulePayload TopicRulePayload.
         */
        /**
         * Create a new AWS::IoT::TopicRule
         * @param {AWS_IoT_TopicRule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_S3Action
         * @property {string} BucketName BucketName.
         * @property {string} Key Key.
         * @property {string} RoleArn RoleArn.
         */
        /**
         * @param {AWS_IoT_TopicRule_S3Action} properties
         * @returns {AWS_IoT_TopicRule_S3Action}
         */
        static S3Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_SqsAction
         * @property {string} QueueUrl QueueUrl.
         * @property {string} RoleArn RoleArn.
         * @property {boolean} [UseBase64] UseBase64.
         */
        /**
         * @param {AWS_IoT_TopicRule_SqsAction} properties
         * @returns {AWS_IoT_TopicRule_SqsAction}
         */
        static SqsAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_PutItemInput
         * @property {string} TableName TableName.
         */
        /**
         * @param {AWS_IoT_TopicRule_PutItemInput} properties
         * @returns {AWS_IoT_TopicRule_PutItemInput}
         */
        static PutItemInput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_RepublishAction
         * @property {string} RoleArn RoleArn.
         * @property {string} Topic Topic.
         */
        /**
         * @param {AWS_IoT_TopicRule_RepublishAction} properties
         * @returns {AWS_IoT_TopicRule_RepublishAction}
         */
        static RepublishAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_SnsAction
         * @property {string} [MessageFormat] MessageFormat.
         * @property {string} RoleArn RoleArn.
         * @property {string} TargetArn TargetArn.
         */
        /**
         * @param {AWS_IoT_TopicRule_SnsAction} properties
         * @returns {AWS_IoT_TopicRule_SnsAction}
         */
        static SnsAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_StepFunctionsAction
         * @property {string} [ExecutionNamePrefix] ExecutionNamePrefix.
         * @property {string} RoleArn RoleArn.
         * @property {string} StateMachineName StateMachineName.
         */
        /**
         * @param {AWS_IoT_TopicRule_StepFunctionsAction} properties
         * @returns {AWS_IoT_TopicRule_StepFunctionsAction}
         */
        static StepFunctionsAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_FirehoseAction
         * @property {string} DeliveryStreamName DeliveryStreamName.
         * @property {string} RoleArn RoleArn.
         * @property {string} [Separator] Separator.
         */
        /**
         * @param {AWS_IoT_TopicRule_FirehoseAction} properties
         * @returns {AWS_IoT_TopicRule_FirehoseAction}
         */
        static FirehoseAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_TopicRulePayload
         * @property {AWS_IoT_TopicRule_Action[]} Actions Actions.
         * @property {string} [AwsIotSqlVersion] AwsIotSqlVersion.
         * @property {string} [Description] Description.
         * @property {AWS_IoT_TopicRule_Action} [ErrorAction] ErrorAction.
         * @property {boolean} RuleDisabled RuleDisabled.
         * @property {string} Sql Sql.
         */
        /**
         * @param {AWS_IoT_TopicRule_TopicRulePayload} properties
         * @returns {AWS_IoT_TopicRule_TopicRulePayload}
         */
        static TopicRulePayload(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_LambdaAction
         * @property {string} [FunctionArn] FunctionArn.
         */
        /**
         * @param {AWS_IoT_TopicRule_LambdaAction} properties
         * @returns {AWS_IoT_TopicRule_LambdaAction}
         */
        static LambdaAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_DynamoDBv2Action
         * @property {AWS_IoT_TopicRule_PutItemInput} [PutItem] PutItem.
         * @property {string} [RoleArn] RoleArn.
         */
        /**
         * @param {AWS_IoT_TopicRule_DynamoDBv2Action} properties
         * @returns {AWS_IoT_TopicRule_DynamoDBv2Action}
         */
        static DynamoDBv2Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_ElasticsearchAction
         * @property {string} Endpoint Endpoint.
         * @property {string} Id Id.
         * @property {string} Index Index.
         * @property {string} RoleArn RoleArn.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_IoT_TopicRule_ElasticsearchAction} properties
         * @returns {AWS_IoT_TopicRule_ElasticsearchAction}
         */
        static ElasticsearchAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_DynamoDBAction
         * @property {string} HashKeyField HashKeyField.
         * @property {string} [HashKeyType] HashKeyType.
         * @property {string} HashKeyValue HashKeyValue.
         * @property {string} [PayloadField] PayloadField.
         * @property {string} [RangeKeyField] RangeKeyField.
         * @property {string} [RangeKeyType] RangeKeyType.
         * @property {string} [RangeKeyValue] RangeKeyValue.
         * @property {string} RoleArn RoleArn.
         * @property {string} TableName TableName.
         */
        /**
         * @param {AWS_IoT_TopicRule_DynamoDBAction} properties
         * @returns {AWS_IoT_TopicRule_DynamoDBAction}
         */
        static DynamoDBAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_KinesisAction
         * @property {string} [PartitionKey] PartitionKey.
         * @property {string} RoleArn RoleArn.
         * @property {string} StreamName StreamName.
         */
        /**
         * @param {AWS_IoT_TopicRule_KinesisAction} properties
         * @returns {AWS_IoT_TopicRule_KinesisAction}
         */
        static KinesisAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_CloudwatchAlarmAction
         * @property {string} AlarmName AlarmName.
         * @property {string} RoleArn RoleArn.
         * @property {string} StateReason StateReason.
         * @property {string} StateValue StateValue.
         */
        /**
         * @param {AWS_IoT_TopicRule_CloudwatchAlarmAction} properties
         * @returns {AWS_IoT_TopicRule_CloudwatchAlarmAction}
         */
        static CloudwatchAlarmAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_Action
         * @property {AWS_IoT_TopicRule_CloudwatchAlarmAction} [CloudwatchAlarm] CloudwatchAlarm.
         * @property {AWS_IoT_TopicRule_CloudwatchMetricAction} [CloudwatchMetric] CloudwatchMetric.
         * @property {AWS_IoT_TopicRule_DynamoDBAction} [DynamoDB] DynamoDB.
         * @property {AWS_IoT_TopicRule_DynamoDBv2Action} [DynamoDBv2] DynamoDBv2.
         * @property {AWS_IoT_TopicRule_ElasticsearchAction} [Elasticsearch] Elasticsearch.
         * @property {AWS_IoT_TopicRule_FirehoseAction} [Firehose] Firehose.
         * @property {AWS_IoT_TopicRule_IotAnalyticsAction} [IotAnalytics] IotAnalytics.
         * @property {AWS_IoT_TopicRule_KinesisAction} [Kinesis] Kinesis.
         * @property {AWS_IoT_TopicRule_LambdaAction} [Lambda] Lambda.
         * @property {AWS_IoT_TopicRule_RepublishAction} [Republish] Republish.
         * @property {AWS_IoT_TopicRule_S3Action} [S3] S3.
         * @property {AWS_IoT_TopicRule_SnsAction} [Sns] Sns.
         * @property {AWS_IoT_TopicRule_SqsAction} [Sqs] Sqs.
         * @property {AWS_IoT_TopicRule_StepFunctionsAction} [StepFunctions] StepFunctions.
         */
        /**
         * @param {AWS_IoT_TopicRule_Action} properties
         * @returns {AWS_IoT_TopicRule_Action}
         */
        static Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_IotAnalyticsAction
         * @property {string} ChannelName ChannelName.
         * @property {string} RoleArn RoleArn.
         */
        /**
         * @param {AWS_IoT_TopicRule_IotAnalyticsAction} properties
         * @returns {AWS_IoT_TopicRule_IotAnalyticsAction}
         */
        static IotAnalyticsAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_IoT_TopicRule_CloudwatchMetricAction
         * @property {string} MetricName MetricName.
         * @property {string} MetricNamespace MetricNamespace.
         * @property {string} [MetricTimestamp] MetricTimestamp.
         * @property {string} MetricUnit MetricUnit.
         * @property {string} MetricValue MetricValue.
         * @property {string} RoleArn RoleArn.
         */
        /**
         * @param {AWS_IoT_TopicRule_CloudwatchMetricAction} properties
         * @returns {AWS_IoT_TopicRule_CloudwatchMetricAction}
         */
        static CloudwatchMetricAction(properties) { return properties; }
      },
      /**
       * @namespace PolicyPrincipalAttachment
       */
      PolicyPrincipalAttachment: class {
        /**
         * @typedef {Object} AWS_IoT_PolicyPrincipalAttachment
         * @property {string} PolicyName PolicyName.
         * @property {string} Principal Principal.
         */
        /**
         * Create a new AWS::IoT::PolicyPrincipalAttachment
         * @param {AWS_IoT_PolicyPrincipalAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ThingPrincipalAttachment
       */
      ThingPrincipalAttachment: class {
        /**
         * @typedef {Object} AWS_IoT_ThingPrincipalAttachment
         * @property {string} Principal Principal.
         * @property {string} ThingName ThingName.
         */
        /**
         * Create a new AWS::IoT::ThingPrincipalAttachment
         * @param {AWS_IoT_ThingPrincipalAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Certificate
       */
      Certificate: class {
        /**
         * @typedef {Object} AWS_IoT_Certificate
         * @property {string} CertificateSigningRequest CertificateSigningRequest.
         * @property {string} Status Status.
         */
        /**
         * Create a new AWS::IoT::Certificate
         * @param {AWS_IoT_Certificate} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace ElasticLoadBalancing
     */
    ElasticLoadBalancing: {
      /**
       * @namespace LoadBalancer
       */
      LoadBalancer: class {
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_AccessLoggingPolicy} [AccessLoggingPolicy] AccessLoggingPolicy.
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_AppCookieStickinessPolicy[]} [AppCookieStickinessPolicy] AppCookieStickinessPolicy.
         * @property {string[]} [AvailabilityZones] AvailabilityZones.
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_ConnectionDrainingPolicy} [ConnectionDrainingPolicy] ConnectionDrainingPolicy.
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_ConnectionSettings} [ConnectionSettings] ConnectionSettings.
         * @property {boolean} [CrossZone] CrossZone.
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_HealthCheck} [HealthCheck] HealthCheck.
         * @property {string[]} [Instances] Instances.
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_LBCookieStickinessPolicy[]} [LBCookieStickinessPolicy] LBCookieStickinessPolicy.
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_Listeners[]} Listeners Listeners.
         * @property {string} [LoadBalancerName] LoadBalancerName.
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_Policies[]} [Policies] Policies.
         * @property {string} [Scheme] Scheme.
         * @property {string[]} [SecurityGroups] SecurityGroups.
         * @property {string[]} [Subnets] Subnets.
         * @property {AWS_ElasticLoadBalancing_LoadBalancer_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::ElasticLoadBalancing::LoadBalancer
         * @param {AWS_ElasticLoadBalancing_LoadBalancer} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer_HealthCheck
         * @property {string} HealthyThreshold HealthyThreshold.
         * @property {string} Interval Interval.
         * @property {string} Target Target.
         * @property {string} Timeout Timeout.
         * @property {string} UnhealthyThreshold UnhealthyThreshold.
         */
        /**
         * @param {AWS_ElasticLoadBalancing_LoadBalancer_HealthCheck} properties
         * @returns {AWS_ElasticLoadBalancing_LoadBalancer_HealthCheck}
         */
        static HealthCheck(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer_AccessLoggingPolicy
         * @property {number} [EmitInterval] EmitInterval.
         * @property {boolean} Enabled Enabled.
         * @property {string} S3BucketName S3BucketName.
         * @property {string} [S3BucketPrefix] S3BucketPrefix.
         */
        /**
         * @param {AWS_ElasticLoadBalancing_LoadBalancer_AccessLoggingPolicy} properties
         * @returns {AWS_ElasticLoadBalancing_LoadBalancer_AccessLoggingPolicy}
         */
        static AccessLoggingPolicy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer_ConnectionSettings
         * @property {number} IdleTimeout IdleTimeout.
         */
        /**
         * @param {AWS_ElasticLoadBalancing_LoadBalancer_ConnectionSettings} properties
         * @returns {AWS_ElasticLoadBalancing_LoadBalancer_ConnectionSettings}
         */
        static ConnectionSettings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer_LBCookieStickinessPolicy
         * @property {string} [CookieExpirationPeriod] CookieExpirationPeriod.
         * @property {string} [PolicyName] PolicyName.
         */
        /**
         * @param {AWS_ElasticLoadBalancing_LoadBalancer_LBCookieStickinessPolicy} properties
         * @returns {AWS_ElasticLoadBalancing_LoadBalancer_LBCookieStickinessPolicy}
         */
        static LBCookieStickinessPolicy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer_ConnectionDrainingPolicy
         * @property {boolean} Enabled Enabled.
         * @property {number} [Timeout] Timeout.
         */
        /**
         * @param {AWS_ElasticLoadBalancing_LoadBalancer_ConnectionDrainingPolicy} properties
         * @returns {AWS_ElasticLoadBalancing_LoadBalancer_ConnectionDrainingPolicy}
         */
        static ConnectionDrainingPolicy(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer_Listeners
         * @property {string} InstancePort InstancePort.
         * @property {string} [InstanceProtocol] InstanceProtocol.
         * @property {string} LoadBalancerPort LoadBalancerPort.
         * @property {string[]} [PolicyNames] PolicyNames.
         * @property {string} Protocol Protocol.
         * @property {string} [SSLCertificateId] SSLCertificateId.
         */
        /**
         * @param {AWS_ElasticLoadBalancing_LoadBalancer_Listeners} properties
         * @returns {AWS_ElasticLoadBalancing_LoadBalancer_Listeners}
         */
        static Listeners(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer_Policies
         * @property {string[]} Attributes Attributes.
         * @property {string[]} [InstancePorts] InstancePorts.
         * @property {string[]} [LoadBalancerPorts] LoadBalancerPorts.
         * @property {string} PolicyName PolicyName.
         * @property {string} PolicyType PolicyType.
         */
        /**
         * @param {AWS_ElasticLoadBalancing_LoadBalancer_Policies} properties
         * @returns {AWS_ElasticLoadBalancing_LoadBalancer_Policies}
         */
        static Policies(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ElasticLoadBalancing_LoadBalancer_AppCookieStickinessPolicy
         * @property {string} CookieName CookieName.
         * @property {string} PolicyName PolicyName.
         */
        /**
         * @param {AWS_ElasticLoadBalancing_LoadBalancer_AppCookieStickinessPolicy} properties
         * @returns {AWS_ElasticLoadBalancing_LoadBalancer_AppCookieStickinessPolicy}
         */
        static AppCookieStickinessPolicy(properties) { return properties; }
      }
    },
    /**
     * @namespace DMS
     */
    DMS: {
      /**
       * @namespace Certificate
       */
      Certificate: class {
        /**
         * @typedef {Object} AWS_DMS_Certificate
         * @property {string} [CertificateIdentifier] CertificateIdentifier.
         * @property {string} [CertificatePem] CertificatePem.
         * @property {string} [CertificateWallet] CertificateWallet.
         */
        /**
         * Create a new AWS::DMS::Certificate
         * @param {AWS_DMS_Certificate} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ReplicationSubnetGroup
       */
      ReplicationSubnetGroup: class {
        /**
         * @typedef {Object} AWS_DMS_ReplicationSubnetGroup
         * @property {string} ReplicationSubnetGroupDescription ReplicationSubnetGroupDescription.
         * @property {string} [ReplicationSubnetGroupIdentifier] ReplicationSubnetGroupIdentifier.
         * @property {string[]} SubnetIds SubnetIds.
         * @property {AWS_DMS_ReplicationSubnetGroup_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::DMS::ReplicationSubnetGroup
         * @param {AWS_DMS_ReplicationSubnetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace EventSubscription
       */
      EventSubscription: class {
        /**
         * @typedef {Object} AWS_DMS_EventSubscription
         * @property {string} [SourceType] SourceType.
         * @property {string[]} [EventCategories] EventCategories.
         * @property {boolean} [Enabled] Enabled.
         * @property {string} [SubscriptionName] SubscriptionName.
         * @property {string} SnsTopicArn SnsTopicArn.
         * @property {string[]} [SourceIds] SourceIds.
         * @property {AWS_DMS_EventSubscription_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::DMS::EventSubscription
         * @param {AWS_DMS_EventSubscription} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Endpoint
       */
      Endpoint: class {
        /**
         * @typedef {Object} AWS_DMS_Endpoint
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {number} [Port] Port.
         * @property {string} [DatabaseName] DatabaseName.
         * @property {AWS_DMS_Endpoint_ElasticsearchSettings} [ElasticsearchSettings] ElasticsearchSettings.
         * @property {AWS_DMS_Endpoint_S3Settings} [S3Settings] S3Settings.
         * @property {string} EngineName EngineName.
         * @property {AWS_DMS_Endpoint_DynamoDbSettings} [DynamoDbSettings] DynamoDbSettings.
         * @property {AWS_DMS_Endpoint_KinesisSettings} [KinesisSettings] KinesisSettings.
         * @property {string} [Username] Username.
         * @property {string} [SslMode] SslMode.
         * @property {string} [ServerName] ServerName.
         * @property {string} [ExtraConnectionAttributes] ExtraConnectionAttributes.
         * @property {string} EndpointType EndpointType.
         * @property {AWS_DMS_Endpoint_Tag[]} [Tags] Tags.
         * @property {string} [EndpointIdentifier] EndpointIdentifier.
         * @property {string} [Password] Password.
         * @property {string} [CertificateArn] CertificateArn.
         * @property {AWS_DMS_Endpoint_MongoDbSettings} [MongoDbSettings] MongoDbSettings.
         */
        /**
         * Create a new AWS::DMS::Endpoint
         * @param {AWS_DMS_Endpoint} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_DMS_Endpoint_KinesisSettings
         * @property {string} [MessageFormat] MessageFormat.
         * @property {string} [StreamArn] StreamArn.
         * @property {string} [ServiceAccessRoleArn] ServiceAccessRoleArn.
         */
        /**
         * @param {AWS_DMS_Endpoint_KinesisSettings} properties
         * @returns {AWS_DMS_Endpoint_KinesisSettings}
         */
        static KinesisSettings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DMS_Endpoint_S3Settings
         * @property {string} [ExternalTableDefinition] ExternalTableDefinition.
         * @property {string} [BucketName] BucketName.
         * @property {string} [BucketFolder] BucketFolder.
         * @property {string} [CsvRowDelimiter] CsvRowDelimiter.
         * @property {string} [CsvDelimiter] CsvDelimiter.
         * @property {string} [ServiceAccessRoleArn] ServiceAccessRoleArn.
         * @property {string} [CompressionType] CompressionType.
         */
        /**
         * @param {AWS_DMS_Endpoint_S3Settings} properties
         * @returns {AWS_DMS_Endpoint_S3Settings}
         */
        static S3Settings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DMS_Endpoint_MongoDbSettings
         * @property {string} [AuthSource] AuthSource.
         * @property {string} [AuthMechanism] AuthMechanism.
         * @property {string} [Username] Username.
         * @property {string} [DocsToInvestigate] DocsToInvestigate.
         * @property {string} [ServerName] ServerName.
         * @property {number} [Port] Port.
         * @property {string} [ExtractDocId] ExtractDocId.
         * @property {string} [DatabaseName] DatabaseName.
         * @property {string} [AuthType] AuthType.
         * @property {string} [Password] Password.
         * @property {string} [NestingLevel] NestingLevel.
         */
        /**
         * @param {AWS_DMS_Endpoint_MongoDbSettings} properties
         * @returns {AWS_DMS_Endpoint_MongoDbSettings}
         */
        static MongoDbSettings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DMS_Endpoint_ElasticsearchSettings
         * @property {string} [EndpointUri] EndpointUri.
         * @property {number} [FullLoadErrorPercentage] FullLoadErrorPercentage.
         * @property {number} [ErrorRetryDuration] ErrorRetryDuration.
         * @property {string} [ServiceAccessRoleArn] ServiceAccessRoleArn.
         */
        /**
         * @param {AWS_DMS_Endpoint_ElasticsearchSettings} properties
         * @returns {AWS_DMS_Endpoint_ElasticsearchSettings}
         */
        static ElasticsearchSettings(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DMS_Endpoint_DynamoDbSettings
         * @property {string} [ServiceAccessRoleArn] ServiceAccessRoleArn.
         */
        /**
         * @param {AWS_DMS_Endpoint_DynamoDbSettings} properties
         * @returns {AWS_DMS_Endpoint_DynamoDbSettings}
         */
        static DynamoDbSettings(properties) { return properties; }
      },
      /**
       * @namespace ReplicationTask
       */
      ReplicationTask: class {
        /**
         * @typedef {Object} AWS_DMS_ReplicationTask
         * @property {string} [ReplicationTaskSettings] ReplicationTaskSettings.
         * @property {string} TableMappings TableMappings.
         * @property {string} [ReplicationTaskIdentifier] ReplicationTaskIdentifier.
         * @property {string} SourceEndpointArn SourceEndpointArn.
         * @property {string} MigrationType MigrationType.
         * @property {string} TargetEndpointArn TargetEndpointArn.
         * @property {string} ReplicationInstanceArn ReplicationInstanceArn.
         * @property {AWS_DMS_ReplicationTask_Tag[]} [Tags] Tags.
         * @property {number} [CdcStartTime] CdcStartTime.
         */
        /**
         * Create a new AWS::DMS::ReplicationTask
         * @param {AWS_DMS_ReplicationTask} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ReplicationInstance
       */
      ReplicationInstance: class {
        /**
         * @typedef {Object} AWS_DMS_ReplicationInstance
         * @property {string} [ReplicationInstanceIdentifier] ReplicationInstanceIdentifier.
         * @property {string} [EngineVersion] EngineVersion.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {boolean} [AutoMinorVersionUpgrade] AutoMinorVersionUpgrade.
         * @property {string} [ReplicationSubnetGroupIdentifier] ReplicationSubnetGroupIdentifier.
         * @property {number} [AllocatedStorage] AllocatedStorage.
         * @property {string[]} [VpcSecurityGroupIds] VpcSecurityGroupIds.
         * @property {boolean} [AllowMajorVersionUpgrade] AllowMajorVersionUpgrade.
         * @property {string} ReplicationInstanceClass ReplicationInstanceClass.
         * @property {boolean} [PubliclyAccessible] PubliclyAccessible.
         * @property {boolean} [MultiAZ] MultiAZ.
         * @property {AWS_DMS_ReplicationInstance_Tag[]} [Tags] Tags.
         */
        /**
         * Create a new AWS::DMS::ReplicationInstance
         * @param {AWS_DMS_ReplicationInstance} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Glue
     */
    Glue: {
      /**
       * @namespace Table
       */
      Table: class {
        /**
         * @typedef {Object} AWS_Glue_Table
         * @property {AWS_Glue_Table_TableInput} TableInput TableInput.
         * @property {string} DatabaseName DatabaseName.
         * @property {string} CatalogId CatalogId.
         */
        /**
         * Create a new AWS::Glue::Table
         * @param {AWS_Glue_Table} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Glue_Table_SkewedInfo
         * @property {string[]} [SkewedColumnNames] SkewedColumnNames.
         * @property {string[]} [SkewedColumnValues] SkewedColumnValues.
         * @property {string} [SkewedColumnValueLocationMaps] SkewedColumnValueLocationMaps.
         */
        /**
         * @param {AWS_Glue_Table_SkewedInfo} properties
         * @returns {AWS_Glue_Table_SkewedInfo}
         */
        static SkewedInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Table_StorageDescriptor
         * @property {boolean} [StoredAsSubDirectories] StoredAsSubDirectories.
         * @property {string} [Parameters] Parameters.
         * @property {string[]} [BucketColumns] BucketColumns.
         * @property {AWS_Glue_Table_SkewedInfo} [SkewedInfo] SkewedInfo.
         * @property {string} [InputFormat] InputFormat.
         * @property {number} [NumberOfBuckets] NumberOfBuckets.
         * @property {string} [OutputFormat] OutputFormat.
         * @property {AWS_Glue_Table_Column[]} [Columns] Columns.
         * @property {AWS_Glue_Table_SerdeInfo} [SerdeInfo] SerdeInfo.
         * @property {AWS_Glue_Table_Order[]} [SortColumns] SortColumns.
         * @property {boolean} [Compressed] Compressed.
         * @property {string} [Location] Location.
         */
        /**
         * @param {AWS_Glue_Table_StorageDescriptor} properties
         * @returns {AWS_Glue_Table_StorageDescriptor}
         */
        static StorageDescriptor(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Table_TableInput
         * @property {string} [Owner] Owner.
         * @property {string} [ViewOriginalText] ViewOriginalText.
         * @property {string} [Description] Description.
         * @property {string} [TableType] TableType.
         * @property {string} [Parameters] Parameters.
         * @property {string} [ViewExpandedText] ViewExpandedText.
         * @property {AWS_Glue_Table_StorageDescriptor} [StorageDescriptor] StorageDescriptor.
         * @property {AWS_Glue_Table_Column[]} [PartitionKeys] PartitionKeys.
         * @property {number} [Retention] Retention.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Table_TableInput} properties
         * @returns {AWS_Glue_Table_TableInput}
         */
        static TableInput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Table_SerdeInfo
         * @property {string} [Parameters] Parameters.
         * @property {string} [SerializationLibrary] SerializationLibrary.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Table_SerdeInfo} properties
         * @returns {AWS_Glue_Table_SerdeInfo}
         */
        static SerdeInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Table_Order
         * @property {string} Column Column.
         * @property {number} SortOrder SortOrder.
         */
        /**
         * @param {AWS_Glue_Table_Order} properties
         * @returns {AWS_Glue_Table_Order}
         */
        static Order(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Table_Column
         * @property {string} [Comment] Comment.
         * @property {string} [Type] Type.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_Glue_Table_Column} properties
         * @returns {AWS_Glue_Table_Column}
         */
        static Column(properties) { return properties; }
      },
      /**
       * @namespace Connection
       */
      Connection: class {
        /**
         * @typedef {Object} AWS_Glue_Connection
         * @property {AWS_Glue_Connection_ConnectionInput} ConnectionInput ConnectionInput.
         * @property {string} CatalogId CatalogId.
         */
        /**
         * Create a new AWS::Glue::Connection
         * @param {AWS_Glue_Connection} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Glue_Connection_ConnectionInput
         * @property {string} [Description] Description.
         * @property {string} ConnectionType ConnectionType.
         * @property {string[]} [MatchCriteria] MatchCriteria.
         * @property {AWS_Glue_Connection_PhysicalConnectionRequirements} [PhysicalConnectionRequirements] PhysicalConnectionRequirements.
         * @property {string} ConnectionProperties ConnectionProperties.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Connection_ConnectionInput} properties
         * @returns {AWS_Glue_Connection_ConnectionInput}
         */
        static ConnectionInput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Connection_PhysicalConnectionRequirements
         * @property {string} [AvailabilityZone] AvailabilityZone.
         * @property {string[]} [SecurityGroupIdList] SecurityGroupIdList.
         * @property {string} [SubnetId] SubnetId.
         */
        /**
         * @param {AWS_Glue_Connection_PhysicalConnectionRequirements} properties
         * @returns {AWS_Glue_Connection_PhysicalConnectionRequirements}
         */
        static PhysicalConnectionRequirements(properties) { return properties; }
      },
      /**
       * @namespace Partition
       */
      Partition: class {
        /**
         * @typedef {Object} AWS_Glue_Partition
         * @property {string} TableName TableName.
         * @property {string} DatabaseName DatabaseName.
         * @property {string} CatalogId CatalogId.
         * @property {AWS_Glue_Partition_PartitionInput} PartitionInput PartitionInput.
         */
        /**
         * Create a new AWS::Glue::Partition
         * @param {AWS_Glue_Partition} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Glue_Partition_SerdeInfo
         * @property {string} [Parameters] Parameters.
         * @property {string} [SerializationLibrary] SerializationLibrary.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Partition_SerdeInfo} properties
         * @returns {AWS_Glue_Partition_SerdeInfo}
         */
        static SerdeInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Partition_StorageDescriptor
         * @property {boolean} [StoredAsSubDirectories] StoredAsSubDirectories.
         * @property {string} [Parameters] Parameters.
         * @property {string[]} [BucketColumns] BucketColumns.
         * @property {AWS_Glue_Partition_SkewedInfo} [SkewedInfo] SkewedInfo.
         * @property {string} [InputFormat] InputFormat.
         * @property {number} [NumberOfBuckets] NumberOfBuckets.
         * @property {string} [OutputFormat] OutputFormat.
         * @property {AWS_Glue_Partition_Column[]} [Columns] Columns.
         * @property {AWS_Glue_Partition_SerdeInfo} [SerdeInfo] SerdeInfo.
         * @property {AWS_Glue_Partition_Order[]} [SortColumns] SortColumns.
         * @property {boolean} [Compressed] Compressed.
         * @property {string} [Location] Location.
         */
        /**
         * @param {AWS_Glue_Partition_StorageDescriptor} properties
         * @returns {AWS_Glue_Partition_StorageDescriptor}
         */
        static StorageDescriptor(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Partition_Order
         * @property {string} Column Column.
         * @property {number} [SortOrder] SortOrder.
         */
        /**
         * @param {AWS_Glue_Partition_Order} properties
         * @returns {AWS_Glue_Partition_Order}
         */
        static Order(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Partition_SkewedInfo
         * @property {string[]} [SkewedColumnNames] SkewedColumnNames.
         * @property {string[]} [SkewedColumnValues] SkewedColumnValues.
         * @property {string} [SkewedColumnValueLocationMaps] SkewedColumnValueLocationMaps.
         */
        /**
         * @param {AWS_Glue_Partition_SkewedInfo} properties
         * @returns {AWS_Glue_Partition_SkewedInfo}
         */
        static SkewedInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Partition_Column
         * @property {string} [Comment] Comment.
         * @property {string} [Type] Type.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_Glue_Partition_Column} properties
         * @returns {AWS_Glue_Partition_Column}
         */
        static Column(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Partition_PartitionInput
         * @property {string} [Parameters] Parameters.
         * @property {AWS_Glue_Partition_StorageDescriptor} [StorageDescriptor] StorageDescriptor.
         * @property {string[]} Values Values.
         */
        /**
         * @param {AWS_Glue_Partition_PartitionInput} properties
         * @returns {AWS_Glue_Partition_PartitionInput}
         */
        static PartitionInput(properties) { return properties; }
      },
      /**
       * @namespace Job
       */
      Job: class {
        /**
         * @typedef {Object} AWS_Glue_Job
         * @property {string} Role Role.
         * @property {string} [DefaultArguments] DefaultArguments.
         * @property {AWS_Glue_Job_ConnectionsList} [Connections] Connections.
         * @property {number} [MaxRetries] MaxRetries.
         * @property {string} [Description] Description.
         * @property {string} [LogUri] LogUri.
         * @property {AWS_Glue_Job_JobCommand} Command Command.
         * @property {number} [AllocatedCapacity] AllocatedCapacity.
         * @property {AWS_Glue_Job_ExecutionProperty} [ExecutionProperty] ExecutionProperty.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Glue::Job
         * @param {AWS_Glue_Job} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Glue_Job_JobCommand
         * @property {string} [ScriptLocation] ScriptLocation.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Job_JobCommand} properties
         * @returns {AWS_Glue_Job_JobCommand}
         */
        static JobCommand(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Job_ConnectionsList
         * @property {string[]} [Connections] Connections.
         */
        /**
         * @param {AWS_Glue_Job_ConnectionsList} properties
         * @returns {AWS_Glue_Job_ConnectionsList}
         */
        static ConnectionsList(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Job_ExecutionProperty
         * @property {number} [MaxConcurrentRuns] MaxConcurrentRuns.
         */
        /**
         * @param {AWS_Glue_Job_ExecutionProperty} properties
         * @returns {AWS_Glue_Job_ExecutionProperty}
         */
        static ExecutionProperty(properties) { return properties; }
      },
      /**
       * @namespace Database
       */
      Database: class {
        /**
         * @typedef {Object} AWS_Glue_Database
         * @property {AWS_Glue_Database_DatabaseInput} DatabaseInput DatabaseInput.
         * @property {string} CatalogId CatalogId.
         */
        /**
         * Create a new AWS::Glue::Database
         * @param {AWS_Glue_Database} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Glue_Database_DatabaseInput
         * @property {string} [LocationUri] LocationUri.
         * @property {string} [Description] Description.
         * @property {string} [Parameters] Parameters.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Database_DatabaseInput} properties
         * @returns {AWS_Glue_Database_DatabaseInput}
         */
        static DatabaseInput(properties) { return properties; }
      },
      /**
       * @namespace DevEndpoint
       */
      DevEndpoint: class {
        /**
         * @typedef {Object} AWS_Glue_DevEndpoint
         * @property {string} [ExtraJarsS3Path] ExtraJarsS3Path.
         * @property {string} [EndpointName] EndpointName.
         * @property {string} PublicKey PublicKey.
         * @property {number} [NumberOfNodes] NumberOfNodes.
         * @property {string} [SubnetId] SubnetId.
         * @property {string} [ExtraPythonLibsS3Path] ExtraPythonLibsS3Path.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string} RoleArn RoleArn.
         */
        /**
         * Create a new AWS::Glue::DevEndpoint
         * @param {AWS_Glue_DevEndpoint} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Trigger
       */
      Trigger: class {
        /**
         * @typedef {Object} AWS_Glue_Trigger
         * @property {string} Type Type.
         * @property {string} [Description] Description.
         * @property {AWS_Glue_Trigger_Action[]} Actions Actions.
         * @property {string} [Schedule] Schedule.
         * @property {string} [Name] Name.
         * @property {AWS_Glue_Trigger_Predicate} [Predicate] Predicate.
         */
        /**
         * Create a new AWS::Glue::Trigger
         * @param {AWS_Glue_Trigger} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Glue_Trigger_Action
         * @property {string} [JobName] JobName.
         * @property {string} [Arguments] Arguments.
         */
        /**
         * @param {AWS_Glue_Trigger_Action} properties
         * @returns {AWS_Glue_Trigger_Action}
         */
        static Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Trigger_Condition
         * @property {string} [State] State.
         * @property {string} [LogicalOperator] LogicalOperator.
         * @property {string} [JobName] JobName.
         */
        /**
         * @param {AWS_Glue_Trigger_Condition} properties
         * @returns {AWS_Glue_Trigger_Condition}
         */
        static Condition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Trigger_Predicate
         * @property {string} [Logical] Logical.
         * @property {AWS_Glue_Trigger_Condition[]} [Conditions] Conditions.
         */
        /**
         * @param {AWS_Glue_Trigger_Predicate} properties
         * @returns {AWS_Glue_Trigger_Predicate}
         */
        static Predicate(properties) { return properties; }
      },
      /**
       * @namespace Crawler
       */
      Crawler: class {
        /**
         * @typedef {Object} AWS_Glue_Crawler
         * @property {string} Role Role.
         * @property {string[]} [Classifiers] Classifiers.
         * @property {string} [Description] Description.
         * @property {AWS_Glue_Crawler_SchemaChangePolicy} [SchemaChangePolicy] SchemaChangePolicy.
         * @property {string} [Configuration] Configuration.
         * @property {AWS_Glue_Crawler_Schedule} [Schedule] Schedule.
         * @property {string} DatabaseName DatabaseName.
         * @property {AWS_Glue_Crawler_Targets} Targets Targets.
         * @property {string} [TablePrefix] TablePrefix.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Glue::Crawler
         * @param {AWS_Glue_Crawler} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Glue_Crawler_Targets
         * @property {AWS_Glue_Crawler_S3Target[]} [S3Targets] S3Targets.
         * @property {AWS_Glue_Crawler_JdbcTarget[]} [JdbcTargets] JdbcTargets.
         */
        /**
         * @param {AWS_Glue_Crawler_Targets} properties
         * @returns {AWS_Glue_Crawler_Targets}
         */
        static Targets(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Crawler_JdbcTarget
         * @property {string} [ConnectionName] ConnectionName.
         * @property {string} [Path] Path.
         * @property {string[]} [Exclusions] Exclusions.
         */
        /**
         * @param {AWS_Glue_Crawler_JdbcTarget} properties
         * @returns {AWS_Glue_Crawler_JdbcTarget}
         */
        static JdbcTarget(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Crawler_Schedule
         * @property {string} [ScheduleExpression] ScheduleExpression.
         */
        /**
         * @param {AWS_Glue_Crawler_Schedule} properties
         * @returns {AWS_Glue_Crawler_Schedule}
         */
        static Schedule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Crawler_S3Target
         * @property {string} [Path] Path.
         * @property {string[]} [Exclusions] Exclusions.
         */
        /**
         * @param {AWS_Glue_Crawler_S3Target} properties
         * @returns {AWS_Glue_Crawler_S3Target}
         */
        static S3Target(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Crawler_SchemaChangePolicy
         * @property {string} [UpdateBehavior] UpdateBehavior.
         * @property {string} [DeleteBehavior] DeleteBehavior.
         */
        /**
         * @param {AWS_Glue_Crawler_SchemaChangePolicy} properties
         * @returns {AWS_Glue_Crawler_SchemaChangePolicy}
         */
        static SchemaChangePolicy(properties) { return properties; }
      },
      /**
       * @namespace Classifier
       */
      Classifier: class {
        /**
         * @typedef {Object} AWS_Glue_Classifier
         * @property {AWS_Glue_Classifier_XMLClassifier} [XMLClassifier] XMLClassifier.
         * @property {AWS_Glue_Classifier_JsonClassifier} [JsonClassifier] JsonClassifier.
         * @property {AWS_Glue_Classifier_GrokClassifier} [GrokClassifier] GrokClassifier.
         */
        /**
         * Create a new AWS::Glue::Classifier
         * @param {AWS_Glue_Classifier} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Glue_Classifier_XMLClassifier
         * @property {string} RowTag RowTag.
         * @property {string} Classification Classification.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Classifier_XMLClassifier} properties
         * @returns {AWS_Glue_Classifier_XMLClassifier}
         */
        static XMLClassifier(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Classifier_GrokClassifier
         * @property {string} [CustomPatterns] CustomPatterns.
         * @property {string} GrokPattern GrokPattern.
         * @property {string} Classification Classification.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Classifier_GrokClassifier} properties
         * @returns {AWS_Glue_Classifier_GrokClassifier}
         */
        static GrokClassifier(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Glue_Classifier_JsonClassifier
         * @property {string} JsonPath JsonPath.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_Glue_Classifier_JsonClassifier} properties
         * @returns {AWS_Glue_Classifier_JsonClassifier}
         */
        static JsonClassifier(properties) { return properties; }
      }
    },
    /**
     * @namespace ElastiCache
     */
    ElastiCache: {
      /**
       * @namespace SecurityGroup
       */
      SecurityGroup: class {
        /**
         * @typedef {Object} AWS_ElastiCache_SecurityGroup
         * @property {string} Description Description.
         */
        /**
         * Create a new AWS::ElastiCache::SecurityGroup
         * @param {AWS_ElastiCache_SecurityGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SubnetGroup
       */
      SubnetGroup: class {
        /**
         * @typedef {Object} AWS_ElastiCache_SubnetGroup
         * @property {string} [CacheSubnetGroupName] CacheSubnetGroupName.
         * @property {string} Description Description.
         * @property {string[]} SubnetIds SubnetIds.
         */
        /**
         * Create a new AWS::ElastiCache::SubnetGroup
         * @param {AWS_ElastiCache_SubnetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SecurityGroupIngress
       */
      SecurityGroupIngress: class {
        /**
         * @typedef {Object} AWS_ElastiCache_SecurityGroupIngress
         * @property {string} CacheSecurityGroupName CacheSecurityGroupName.
         * @property {string} EC2SecurityGroupName EC2SecurityGroupName.
         * @property {string} [EC2SecurityGroupOwnerId] EC2SecurityGroupOwnerId.
         */
        /**
         * Create a new AWS::ElastiCache::SecurityGroupIngress
         * @param {AWS_ElastiCache_SecurityGroupIngress} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ReplicationGroup
       */
      ReplicationGroup: class {
        /**
         * @typedef {Object} AWS_ElastiCache_ReplicationGroup
         * @property {boolean} [AtRestEncryptionEnabled] AtRestEncryptionEnabled.
         * @property {string} [AuthToken] AuthToken.
         * @property {boolean} [AutoMinorVersionUpgrade] AutoMinorVersionUpgrade.
         * @property {boolean} [AutomaticFailoverEnabled] AutomaticFailoverEnabled.
         * @property {string} [CacheNodeType] CacheNodeType.
         * @property {string} [CacheParameterGroupName] CacheParameterGroupName.
         * @property {string[]} [CacheSecurityGroupNames] CacheSecurityGroupNames.
         * @property {string} [CacheSubnetGroupName] CacheSubnetGroupName.
         * @property {string} [Engine] Engine.
         * @property {string} [EngineVersion] EngineVersion.
         * @property {AWS_ElastiCache_ReplicationGroup_NodeGroupConfiguration[]} [NodeGroupConfiguration] NodeGroupConfiguration.
         * @property {string} [NotificationTopicArn] NotificationTopicArn.
         * @property {number} [NumCacheClusters] NumCacheClusters.
         * @property {number} [NumNodeGroups] NumNodeGroups.
         * @property {number} [Port] Port.
         * @property {string[]} [PreferredCacheClusterAZs] PreferredCacheClusterAZs.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {string} [PrimaryClusterId] PrimaryClusterId.
         * @property {number} [ReplicasPerNodeGroup] ReplicasPerNodeGroup.
         * @property {string} ReplicationGroupDescription ReplicationGroupDescription.
         * @property {string} [ReplicationGroupId] ReplicationGroupId.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string[]} [SnapshotArns] SnapshotArns.
         * @property {string} [SnapshotName] SnapshotName.
         * @property {number} [SnapshotRetentionLimit] SnapshotRetentionLimit.
         * @property {string} [SnapshotWindow] SnapshotWindow.
         * @property {string} [SnapshottingClusterId] SnapshottingClusterId.
         * @property {AWS_ElastiCache_ReplicationGroup_Tag[]} [Tags] Tags.
         * @property {boolean} [TransitEncryptionEnabled] TransitEncryptionEnabled.
         */
        /**
         * Create a new AWS::ElastiCache::ReplicationGroup
         * @param {AWS_ElastiCache_ReplicationGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ElastiCache_ReplicationGroup_NodeGroupConfiguration
         * @property {string} [NodeGroupId] NodeGroupId.
         * @property {string} [PrimaryAvailabilityZone] PrimaryAvailabilityZone.
         * @property {string[]} [ReplicaAvailabilityZones] ReplicaAvailabilityZones.
         * @property {number} [ReplicaCount] ReplicaCount.
         * @property {string} [Slots] Slots.
         */
        /**
         * @param {AWS_ElastiCache_ReplicationGroup_NodeGroupConfiguration} properties
         * @returns {AWS_ElastiCache_ReplicationGroup_NodeGroupConfiguration}
         */
        static NodeGroupConfiguration(properties) { return properties; }
      },
      /**
       * @namespace ParameterGroup
       */
      ParameterGroup: class {
        /**
         * @typedef {Object} AWS_ElastiCache_ParameterGroup
         * @property {string} CacheParameterGroupFamily CacheParameterGroupFamily.
         * @property {string} Description Description.
         * @property {AWS_ElastiCache_ParameterGroup_Map} [Properties] Properties.
         */
        /**
         * Create a new AWS::ElastiCache::ParameterGroup
         * @param {AWS_ElastiCache_ParameterGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace CacheCluster
       */
      CacheCluster: class {
        /**
         * @typedef {Object} AWS_ElastiCache_CacheCluster
         * @property {string} [AZMode] AZMode.
         * @property {boolean} [AutoMinorVersionUpgrade] AutoMinorVersionUpgrade.
         * @property {string} CacheNodeType CacheNodeType.
         * @property {string} [CacheParameterGroupName] CacheParameterGroupName.
         * @property {string[]} [CacheSecurityGroupNames] CacheSecurityGroupNames.
         * @property {string} [CacheSubnetGroupName] CacheSubnetGroupName.
         * @property {string} [ClusterName] ClusterName.
         * @property {string} Engine Engine.
         * @property {string} [EngineVersion] EngineVersion.
         * @property {string} [NotificationTopicArn] NotificationTopicArn.
         * @property {number} NumCacheNodes NumCacheNodes.
         * @property {number} [Port] Port.
         * @property {string} [PreferredAvailabilityZone] PreferredAvailabilityZone.
         * @property {string[]} [PreferredAvailabilityZones] PreferredAvailabilityZones.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {string[]} [SnapshotArns] SnapshotArns.
         * @property {string} [SnapshotName] SnapshotName.
         * @property {number} [SnapshotRetentionLimit] SnapshotRetentionLimit.
         * @property {string} [SnapshotWindow] SnapshotWindow.
         * @property {AWS_ElastiCache_CacheCluster_Tag[]} [Tags] Tags.
         * @property {string[]} [VpcSecurityGroupIds] VpcSecurityGroupIds.
         */
        /**
         * Create a new AWS::ElastiCache::CacheCluster
         * @param {AWS_ElastiCache_CacheCluster} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace CodeDeploy
     */
    CodeDeploy: {
      /**
       * @namespace DeploymentGroup
       */
      DeploymentGroup: class {
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup
         * @property {AWS_CodeDeploy_DeploymentGroup_AlarmConfiguration} [AlarmConfiguration] AlarmConfiguration.
         * @property {string} ApplicationName ApplicationName.
         * @property {AWS_CodeDeploy_DeploymentGroup_AutoRollbackConfiguration} [AutoRollbackConfiguration] AutoRollbackConfiguration.
         * @property {string[]} [AutoScalingGroups] AutoScalingGroups.
         * @property {AWS_CodeDeploy_DeploymentGroup_Deployment} [Deployment] Deployment.
         * @property {string} [DeploymentConfigName] DeploymentConfigName.
         * @property {string} [DeploymentGroupName] DeploymentGroupName.
         * @property {AWS_CodeDeploy_DeploymentGroup_DeploymentStyle} [DeploymentStyle] DeploymentStyle.
         * @property {AWS_CodeDeploy_DeploymentGroup_EC2TagFilter[]} [Ec2TagFilters] Ec2TagFilters.
         * @property {AWS_CodeDeploy_DeploymentGroup_EC2TagSet} [Ec2TagSet] Ec2TagSet.
         * @property {AWS_CodeDeploy_DeploymentGroup_LoadBalancerInfo} [LoadBalancerInfo] LoadBalancerInfo.
         * @property {AWS_CodeDeploy_DeploymentGroup_TagFilter[]} [OnPremisesInstanceTagFilters] OnPremisesInstanceTagFilters.
         * @property {AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSet} [OnPremisesTagSet] OnPremisesTagSet.
         * @property {string} ServiceRoleArn ServiceRoleArn.
         * @property {AWS_CodeDeploy_DeploymentGroup_TriggerConfig[]} [TriggerConfigurations] TriggerConfigurations.
         */
        /**
         * Create a new AWS::CodeDeploy::DeploymentGroup
         * @param {AWS_CodeDeploy_DeploymentGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_LoadBalancerInfo
         * @property {AWS_CodeDeploy_DeploymentGroup_ELBInfo[]} [ElbInfoList] ElbInfoList.
         * @property {AWS_CodeDeploy_DeploymentGroup_TargetGroupInfo[]} [TargetGroupInfoList] TargetGroupInfoList.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_LoadBalancerInfo} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_LoadBalancerInfo}
         */
        static LoadBalancerInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_RevisionLocation
         * @property {AWS_CodeDeploy_DeploymentGroup_GitHubLocation} [GitHubLocation] GitHubLocation.
         * @property {string} [RevisionType] RevisionType.
         * @property {AWS_CodeDeploy_DeploymentGroup_S3Location} [S3Location] S3Location.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_RevisionLocation} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_RevisionLocation}
         */
        static RevisionLocation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_S3Location
         * @property {string} Bucket Bucket.
         * @property {string} [BundleType] BundleType.
         * @property {string} [ETag] ETag.
         * @property {string} Key Key.
         * @property {string} [Version] Version.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_S3Location} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_S3Location}
         */
        static S3Location(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_TriggerConfig
         * @property {string[]} [TriggerEvents] TriggerEvents.
         * @property {string} [TriggerName] TriggerName.
         * @property {string} [TriggerTargetArn] TriggerTargetArn.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_TriggerConfig} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_TriggerConfig}
         */
        static TriggerConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_TagFilter
         * @property {string} [Key] Key.
         * @property {string} [Type] Type.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_TagFilter} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_TagFilter}
         */
        static TagFilter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_GitHubLocation
         * @property {string} CommitId CommitId.
         * @property {string} Repository Repository.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_GitHubLocation} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_GitHubLocation}
         */
        static GitHubLocation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_TargetGroupInfo
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_TargetGroupInfo} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_TargetGroupInfo}
         */
        static TargetGroupInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_EC2TagSet
         * @property {AWS_CodeDeploy_DeploymentGroup_EC2TagSetListObject[]} [Ec2TagSetList] Ec2TagSetList.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_EC2TagSet} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_EC2TagSet}
         */
        static EC2TagSet(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_ELBInfo
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_ELBInfo} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_ELBInfo}
         */
        static ELBInfo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_AlarmConfiguration
         * @property {AWS_CodeDeploy_DeploymentGroup_Alarm[]} [Alarms] Alarms.
         * @property {boolean} [Enabled] Enabled.
         * @property {boolean} [IgnorePollAlarmFailure] IgnorePollAlarmFailure.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_AlarmConfiguration} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_AlarmConfiguration}
         */
        static AlarmConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSetListObject
         * @property {AWS_CodeDeploy_DeploymentGroup_TagFilter[]} [OnPremisesTagGroup] OnPremisesTagGroup.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSetListObject} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSetListObject}
         */
        static OnPremisesTagSetListObject(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_DeploymentStyle
         * @property {string} [DeploymentOption] DeploymentOption.
         * @property {string} [DeploymentType] DeploymentType.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_DeploymentStyle} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_DeploymentStyle}
         */
        static DeploymentStyle(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_Alarm
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_Alarm} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_Alarm}
         */
        static Alarm(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_EC2TagFilter
         * @property {string} [Key] Key.
         * @property {string} [Type] Type.
         * @property {string} [Value] Value.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_EC2TagFilter} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_EC2TagFilter}
         */
        static EC2TagFilter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSet
         * @property {AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSetListObject[]} [OnPremisesTagSetList] OnPremisesTagSetList.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSet} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_OnPremisesTagSet}
         */
        static OnPremisesTagSet(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_AutoRollbackConfiguration
         * @property {boolean} [Enabled] Enabled.
         * @property {string[]} [Events] Events.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_AutoRollbackConfiguration} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_AutoRollbackConfiguration}
         */
        static AutoRollbackConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_Deployment
         * @property {string} [Description] Description.
         * @property {boolean} [IgnoreApplicationStopFailures] IgnoreApplicationStopFailures.
         * @property {AWS_CodeDeploy_DeploymentGroup_RevisionLocation} Revision Revision.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_Deployment} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_Deployment}
         */
        static Deployment(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentGroup_EC2TagSetListObject
         * @property {AWS_CodeDeploy_DeploymentGroup_EC2TagFilter[]} [Ec2TagGroup] Ec2TagGroup.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentGroup_EC2TagSetListObject} properties
         * @returns {AWS_CodeDeploy_DeploymentGroup_EC2TagSetListObject}
         */
        static EC2TagSetListObject(properties) { return properties; }
      },
      /**
       * @namespace DeploymentConfig
       */
      DeploymentConfig: class {
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentConfig
         * @property {string} [DeploymentConfigName] DeploymentConfigName.
         * @property {AWS_CodeDeploy_DeploymentConfig_MinimumHealthyHosts} [MinimumHealthyHosts] MinimumHealthyHosts.
         */
        /**
         * Create a new AWS::CodeDeploy::DeploymentConfig
         * @param {AWS_CodeDeploy_DeploymentConfig} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CodeDeploy_DeploymentConfig_MinimumHealthyHosts
         * @property {string} Type Type.
         * @property {number} Value Value.
         */
        /**
         * @param {AWS_CodeDeploy_DeploymentConfig_MinimumHealthyHosts} properties
         * @returns {AWS_CodeDeploy_DeploymentConfig_MinimumHealthyHosts}
         */
        static MinimumHealthyHosts(properties) { return properties; }
      },
      /**
       * @namespace Application
       */
      Application: class {
        /**
         * @typedef {Object} AWS_CodeDeploy_Application
         * @property {string} [ApplicationName] ApplicationName.
         * @property {string} [ComputePlatform] ComputePlatform.
         */
        /**
         * Create a new AWS::CodeDeploy::Application
         * @param {AWS_CodeDeploy_Application} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace SES
     */
    SES: {
      /**
       * @namespace ReceiptFilter
       */
      ReceiptFilter: class {
        /**
         * @typedef {Object} AWS_SES_ReceiptFilter
         * @property {AWS_SES_ReceiptFilter_Filter} Filter Filter.
         */
        /**
         * Create a new AWS::SES::ReceiptFilter
         * @param {AWS_SES_ReceiptFilter} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SES_ReceiptFilter_Filter
         * @property {AWS_SES_ReceiptFilter_IpFilter} IpFilter IpFilter.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_SES_ReceiptFilter_Filter} properties
         * @returns {AWS_SES_ReceiptFilter_Filter}
         */
        static Filter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptFilter_IpFilter
         * @property {string} Policy Policy.
         * @property {string} Cidr Cidr.
         */
        /**
         * @param {AWS_SES_ReceiptFilter_IpFilter} properties
         * @returns {AWS_SES_ReceiptFilter_IpFilter}
         */
        static IpFilter(properties) { return properties; }
      },
      /**
       * @namespace ReceiptRule
       */
      ReceiptRule: class {
        /**
         * @typedef {Object} AWS_SES_ReceiptRule
         * @property {string} [After] After.
         * @property {AWS_SES_ReceiptRule_Rule} Rule Rule.
         * @property {string} RuleSetName RuleSetName.
         */
        /**
         * Create a new AWS::SES::ReceiptRule
         * @param {AWS_SES_ReceiptRule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_BounceAction
         * @property {string} Sender Sender.
         * @property {string} SmtpReplyCode SmtpReplyCode.
         * @property {string} Message Message.
         * @property {string} [TopicArn] TopicArn.
         * @property {string} [StatusCode] StatusCode.
         */
        /**
         * @param {AWS_SES_ReceiptRule_BounceAction} properties
         * @returns {AWS_SES_ReceiptRule_BounceAction}
         */
        static BounceAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_WorkmailAction
         * @property {string} [TopicArn] TopicArn.
         * @property {string} OrganizationArn OrganizationArn.
         */
        /**
         * @param {AWS_SES_ReceiptRule_WorkmailAction} properties
         * @returns {AWS_SES_ReceiptRule_WorkmailAction}
         */
        static WorkmailAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_StopAction
         * @property {string} Scope Scope.
         * @property {string} [TopicArn] TopicArn.
         */
        /**
         * @param {AWS_SES_ReceiptRule_StopAction} properties
         * @returns {AWS_SES_ReceiptRule_StopAction}
         */
        static StopAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_Action
         * @property {AWS_SES_ReceiptRule_BounceAction} [BounceAction] BounceAction.
         * @property {AWS_SES_ReceiptRule_S3Action} [S3Action] S3Action.
         * @property {AWS_SES_ReceiptRule_StopAction} [StopAction] StopAction.
         * @property {AWS_SES_ReceiptRule_SNSAction} [SNSAction] SNSAction.
         * @property {AWS_SES_ReceiptRule_WorkmailAction} [WorkmailAction] WorkmailAction.
         * @property {AWS_SES_ReceiptRule_AddHeaderAction} [AddHeaderAction] AddHeaderAction.
         * @property {AWS_SES_ReceiptRule_LambdaAction} [LambdaAction] LambdaAction.
         */
        /**
         * @param {AWS_SES_ReceiptRule_Action} properties
         * @returns {AWS_SES_ReceiptRule_Action}
         */
        static Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_SNSAction
         * @property {string} [TopicArn] TopicArn.
         * @property {string} [Encoding] Encoding.
         */
        /**
         * @param {AWS_SES_ReceiptRule_SNSAction} properties
         * @returns {AWS_SES_ReceiptRule_SNSAction}
         */
        static SNSAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_Rule
         * @property {boolean} [ScanEnabled] ScanEnabled.
         * @property {string[]} [Recipients] Recipients.
         * @property {AWS_SES_ReceiptRule_Action[]} [Actions] Actions.
         * @property {boolean} [Enabled] Enabled.
         * @property {string} [Name] Name.
         * @property {string} [TlsPolicy] TlsPolicy.
         */
        /**
         * @param {AWS_SES_ReceiptRule_Rule} properties
         * @returns {AWS_SES_ReceiptRule_Rule}
         */
        static Rule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_LambdaAction
         * @property {string} FunctionArn FunctionArn.
         * @property {string} [TopicArn] TopicArn.
         * @property {string} [InvocationType] InvocationType.
         */
        /**
         * @param {AWS_SES_ReceiptRule_LambdaAction} properties
         * @returns {AWS_SES_ReceiptRule_LambdaAction}
         */
        static LambdaAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_S3Action
         * @property {string} BucketName BucketName.
         * @property {string} [KmsKeyArn] KmsKeyArn.
         * @property {string} [TopicArn] TopicArn.
         * @property {string} [ObjectKeyPrefix] ObjectKeyPrefix.
         */
        /**
         * @param {AWS_SES_ReceiptRule_S3Action} properties
         * @returns {AWS_SES_ReceiptRule_S3Action}
         */
        static S3Action(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ReceiptRule_AddHeaderAction
         * @property {string} HeaderValue HeaderValue.
         * @property {string} HeaderName HeaderName.
         */
        /**
         * @param {AWS_SES_ReceiptRule_AddHeaderAction} properties
         * @returns {AWS_SES_ReceiptRule_AddHeaderAction}
         */
        static AddHeaderAction(properties) { return properties; }
      },
      /**
       * @namespace ConfigurationSetEventDestination
       */
      ConfigurationSetEventDestination: class {
        /**
         * @typedef {Object} AWS_SES_ConfigurationSetEventDestination
         * @property {string} ConfigurationSetName ConfigurationSetName.
         * @property {AWS_SES_ConfigurationSetEventDestination_EventDestination} EventDestination EventDestination.
         */
        /**
         * Create a new AWS::SES::ConfigurationSetEventDestination
         * @param {AWS_SES_ConfigurationSetEventDestination} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SES_ConfigurationSetEventDestination_EventDestination
         * @property {AWS_SES_ConfigurationSetEventDestination_CloudWatchDestination} [CloudWatchDestination] CloudWatchDestination.
         * @property {boolean} [Enabled] Enabled.
         * @property {string[]} MatchingEventTypes MatchingEventTypes.
         * @property {string} [Name] Name.
         * @property {AWS_SES_ConfigurationSetEventDestination_KinesisFirehoseDestination} [KinesisFirehoseDestination] KinesisFirehoseDestination.
         */
        /**
         * @param {AWS_SES_ConfigurationSetEventDestination_EventDestination} properties
         * @returns {AWS_SES_ConfigurationSetEventDestination_EventDestination}
         */
        static EventDestination(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ConfigurationSetEventDestination_CloudWatchDestination
         * @property {AWS_SES_ConfigurationSetEventDestination_DimensionConfiguration[]} [DimensionConfigurations] DimensionConfigurations.
         */
        /**
         * @param {AWS_SES_ConfigurationSetEventDestination_CloudWatchDestination} properties
         * @returns {AWS_SES_ConfigurationSetEventDestination_CloudWatchDestination}
         */
        static CloudWatchDestination(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ConfigurationSetEventDestination_KinesisFirehoseDestination
         * @property {string} IAMRoleARN IAMRoleARN.
         * @property {string} DeliveryStreamARN DeliveryStreamARN.
         */
        /**
         * @param {AWS_SES_ConfigurationSetEventDestination_KinesisFirehoseDestination} properties
         * @returns {AWS_SES_ConfigurationSetEventDestination_KinesisFirehoseDestination}
         */
        static KinesisFirehoseDestination(properties) { return properties; }
        /**
         * @typedef {Object} AWS_SES_ConfigurationSetEventDestination_DimensionConfiguration
         * @property {string} DimensionValueSource DimensionValueSource.
         * @property {string} DefaultDimensionValue DefaultDimensionValue.
         * @property {string} DimensionName DimensionName.
         */
        /**
         * @param {AWS_SES_ConfigurationSetEventDestination_DimensionConfiguration} properties
         * @returns {AWS_SES_ConfigurationSetEventDestination_DimensionConfiguration}
         */
        static DimensionConfiguration(properties) { return properties; }
      },
      /**
       * @namespace Template
       */
      Template: class {
        /**
         * @typedef {Object} AWS_SES_Template
         * @property {AWS_SES_Template_Template} [Template] Template.
         */
        /**
         * Create a new AWS::SES::Template
         * @param {AWS_SES_Template} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SES_Template_Template
         * @property {string} [HtmlPart] HtmlPart.
         * @property {string} [TextPart] TextPart.
         * @property {string} [TemplateName] TemplateName.
         * @property {string} [SubjectPart] SubjectPart.
         */
        /**
         * @param {AWS_SES_Template_Template} properties
         * @returns {AWS_SES_Template_Template}
         */
        static Template(properties) { return properties; }
      },
      /**
       * @namespace ConfigurationSet
       */
      ConfigurationSet: class {
        /**
         * @typedef {Object} AWS_SES_ConfigurationSet
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::SES::ConfigurationSet
         * @param {AWS_SES_ConfigurationSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ReceiptRuleSet
       */
      ReceiptRuleSet: class {
        /**
         * @typedef {Object} AWS_SES_ReceiptRuleSet
         * @property {string} [RuleSetName] RuleSetName.
         */
        /**
         * Create a new AWS::SES::ReceiptRuleSet
         * @param {AWS_SES_ReceiptRuleSet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace SecretsManager
     */
    SecretsManager: {
      /**
       * @namespace RotationSchedule
       */
      RotationSchedule: class {
        /**
         * @typedef {Object} AWS_SecretsManager_RotationSchedule
         * @property {string} SecretId SecretId.
         * @property {string} [RotationLambdaARN] RotationLambdaARN.
         * @property {AWS_SecretsManager_RotationSchedule_RotationRules} [RotationRules] RotationRules.
         */
        /**
         * Create a new AWS::SecretsManager::RotationSchedule
         * @param {AWS_SecretsManager_RotationSchedule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SecretsManager_RotationSchedule_RotationRules
         * @property {number} [AutomaticallyAfterDays] AutomaticallyAfterDays.
         */
        /**
         * @param {AWS_SecretsManager_RotationSchedule_RotationRules} properties
         * @returns {AWS_SecretsManager_RotationSchedule_RotationRules}
         */
        static RotationRules(properties) { return properties; }
      },
      /**
       * @namespace Secret
       */
      Secret: class {
        /**
         * @typedef {Object} AWS_SecretsManager_Secret
         * @property {string} [Description] Description.
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {string} [SecretString] SecretString.
         * @property {AWS_SecretsManager_Secret_GenerateSecretString} [GenerateSecretString] GenerateSecretString.
         * @property {AWS_SecretsManager_Secret_Tag[]} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::SecretsManager::Secret
         * @param {AWS_SecretsManager_Secret} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_SecretsManager_Secret_GenerateSecretString
         * @property {boolean} [ExcludeUppercase] ExcludeUppercase.
         * @property {boolean} [RequireEachIncludedType] RequireEachIncludedType.
         * @property {boolean} [IncludeSpace] IncludeSpace.
         * @property {string} [ExcludeCharacters] ExcludeCharacters.
         * @property {string} [GenerateStringKey] GenerateStringKey.
         * @property {number} [PasswordLength] PasswordLength.
         * @property {boolean} [ExcludePunctuation] ExcludePunctuation.
         * @property {boolean} [ExcludeLowercase] ExcludeLowercase.
         * @property {string} [SecretStringTemplate] SecretStringTemplate.
         * @property {boolean} [ExcludeNumbers] ExcludeNumbers.
         */
        /**
         * @param {AWS_SecretsManager_Secret_GenerateSecretString} properties
         * @returns {AWS_SecretsManager_Secret_GenerateSecretString}
         */
        static GenerateSecretString(properties) { return properties; }
      },
      /**
       * @namespace ResourcePolicy
       */
      ResourcePolicy: class {
        /**
         * @typedef {Object} AWS_SecretsManager_ResourcePolicy
         * @property {string} SecretId SecretId.
         * @property {string} ResourcePolicy ResourcePolicy.
         */
        /**
         * Create a new AWS::SecretsManager::ResourcePolicy
         * @param {AWS_SecretsManager_ResourcePolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace SecretTargetAttachment
       */
      SecretTargetAttachment: class {
        /**
         * @typedef {Object} AWS_SecretsManager_SecretTargetAttachment
         * @property {string} SecretId SecretId.
         * @property {string} TargetType TargetType.
         * @property {string} TargetId TargetId.
         */
        /**
         * Create a new AWS::SecretsManager::SecretTargetAttachment
         * @param {AWS_SecretsManager_SecretTargetAttachment} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace CodeBuild
     */
    CodeBuild: {
      /**
       * @namespace Project
       */
      Project: class {
        /**
         * @typedef {Object} AWS_CodeBuild_Project
         * @property {string} [Description] Description.
         * @property {AWS_CodeBuild_Project_VpcConfig} [VpcConfig] VpcConfig.
         * @property {AWS_CodeBuild_Project_Source[]} [SecondarySources] SecondarySources.
         * @property {string} [EncryptionKey] EncryptionKey.
         * @property {AWS_CodeBuild_Project_ProjectTriggers} [Triggers] Triggers.
         * @property {AWS_CodeBuild_Project_Artifacts[]} [SecondaryArtifacts] SecondaryArtifacts.
         * @property {AWS_CodeBuild_Project_Source} Source Source.
         * @property {string} [Name] Name.
         * @property {AWS_CodeBuild_Project_Artifacts} Artifacts Artifacts.
         * @property {boolean} [BadgeEnabled] BadgeEnabled.
         * @property {AWS_CodeBuild_Project_LogsConfig} [LogsConfig] LogsConfig.
         * @property {string} ServiceRole ServiceRole.
         * @property {number} [QueuedTimeoutInMinutes] QueuedTimeoutInMinutes.
         * @property {AWS_CodeBuild_Project_Environment} Environment Environment.
         * @property {AWS_CodeBuild_Project_Tag[]} [Tags] Tags.
         * @property {number} [TimeoutInMinutes] TimeoutInMinutes.
         * @property {AWS_CodeBuild_Project_ProjectCache} [Cache] Cache.
         */
        /**
         * Create a new AWS::CodeBuild::Project
         * @param {AWS_CodeBuild_Project} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_Artifacts
         * @property {string} [Path] Path.
         * @property {string} Type Type.
         * @property {string} [ArtifactIdentifier] ArtifactIdentifier.
         * @property {boolean} [OverrideArtifactName] OverrideArtifactName.
         * @property {string} [Packaging] Packaging.
         * @property {boolean} [EncryptionDisabled] EncryptionDisabled.
         * @property {string} [Location] Location.
         * @property {string} [Name] Name.
         * @property {string} [NamespaceType] NamespaceType.
         */
        /**
         * @param {AWS_CodeBuild_Project_Artifacts} properties
         * @returns {AWS_CodeBuild_Project_Artifacts}
         */
        static Artifacts(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_LogsConfig
         * @property {AWS_CodeBuild_Project_CloudWatchLogsConfig} [CloudWatchLogs] CloudWatchLogs.
         * @property {AWS_CodeBuild_Project_S3LogsConfig} [S3Logs] S3Logs.
         */
        /**
         * @param {AWS_CodeBuild_Project_LogsConfig} properties
         * @returns {AWS_CodeBuild_Project_LogsConfig}
         */
        static LogsConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_RegistryCredential
         * @property {string} Credential Credential.
         * @property {string} CredentialProvider CredentialProvider.
         */
        /**
         * @param {AWS_CodeBuild_Project_RegistryCredential} properties
         * @returns {AWS_CodeBuild_Project_RegistryCredential}
         */
        static RegistryCredential(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_SourceAuth
         * @property {string} Type Type.
         * @property {string} [Resource] Resource.
         */
        /**
         * @param {AWS_CodeBuild_Project_SourceAuth} properties
         * @returns {AWS_CodeBuild_Project_SourceAuth}
         */
        static SourceAuth(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_Environment
         * @property {string} Type Type.
         * @property {AWS_CodeBuild_Project_EnvironmentVariable[]} [EnvironmentVariables] EnvironmentVariables.
         * @property {boolean} [PrivilegedMode] PrivilegedMode.
         * @property {string} [ImagePullCredentialsType] ImagePullCredentialsType.
         * @property {string} Image Image.
         * @property {AWS_CodeBuild_Project_RegistryCredential} [RegistryCredential] RegistryCredential.
         * @property {string} ComputeType ComputeType.
         * @property {string} [Certificate] Certificate.
         */
        /**
         * @param {AWS_CodeBuild_Project_Environment} properties
         * @returns {AWS_CodeBuild_Project_Environment}
         */
        static Environment(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_CloudWatchLogsConfig
         * @property {string} Status Status.
         * @property {string} [GroupName] GroupName.
         * @property {string} [StreamName] StreamName.
         */
        /**
         * @param {AWS_CodeBuild_Project_CloudWatchLogsConfig} properties
         * @returns {AWS_CodeBuild_Project_CloudWatchLogsConfig}
         */
        static CloudWatchLogsConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_ProjectCache
         * @property {string[]} [Modes] Modes.
         * @property {string} Type Type.
         * @property {string} [Location] Location.
         */
        /**
         * @param {AWS_CodeBuild_Project_ProjectCache} properties
         * @returns {AWS_CodeBuild_Project_ProjectCache}
         */
        static ProjectCache(properties) { return properties; }
        /**
         * @typedef {AWS_CodeBuild_Project_WebhookFilter[]} AWS_CodeBuild_Project_FilterGroup
         */
        /**
         * @param {AWS_CodeBuild_Project_FilterGroup} properties
         * @returns {AWS_CodeBuild_Project_FilterGroup}
         */
        static FilterGroup(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_VpcConfig
         * @property {string[]} [Subnets] Subnets.
         * @property {string} [VpcId] VpcId.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         */
        /**
         * @param {AWS_CodeBuild_Project_VpcConfig} properties
         * @returns {AWS_CodeBuild_Project_VpcConfig}
         */
        static VpcConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_ProjectTriggers
         * @property {AWS_CodeBuild_Project_FilterGroup[]} [FilterGroups] FilterGroups.
         * @property {boolean} [Webhook] Webhook.
         */
        /**
         * @param {AWS_CodeBuild_Project_ProjectTriggers} properties
         * @returns {AWS_CodeBuild_Project_ProjectTriggers}
         */
        static ProjectTriggers(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_EnvironmentVariable
         * @property {string} [Type] Type.
         * @property {string} Value Value.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_CodeBuild_Project_EnvironmentVariable} properties
         * @returns {AWS_CodeBuild_Project_EnvironmentVariable}
         */
        static EnvironmentVariable(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_S3LogsConfig
         * @property {string} Status Status.
         * @property {string} [Location] Location.
         */
        /**
         * @param {AWS_CodeBuild_Project_S3LogsConfig} properties
         * @returns {AWS_CodeBuild_Project_S3LogsConfig}
         */
        static S3LogsConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_Source
         * @property {string} Type Type.
         * @property {boolean} [ReportBuildStatus] ReportBuildStatus.
         * @property {AWS_CodeBuild_Project_SourceAuth} [Auth] Auth.
         * @property {string} [SourceIdentifier] SourceIdentifier.
         * @property {string} [BuildSpec] BuildSpec.
         * @property {number} [GitCloneDepth] GitCloneDepth.
         * @property {boolean} [InsecureSsl] InsecureSsl.
         * @property {string} [Location] Location.
         */
        /**
         * @param {AWS_CodeBuild_Project_Source} properties
         * @returns {AWS_CodeBuild_Project_Source}
         */
        static Source(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CodeBuild_Project_WebhookFilter
         * @property {string} Pattern Pattern.
         * @property {string} Type Type.
         * @property {boolean} [ExcludeMatchedPattern] ExcludeMatchedPattern.
         */
        /**
         * @param {AWS_CodeBuild_Project_WebhookFilter} properties
         * @returns {AWS_CodeBuild_Project_WebhookFilter}
         */
        static WebhookFilter(properties) { return properties; }
      }
    },
    /**
     * @namespace Budgets
     */
    Budgets: {
      /**
       * @namespace Budget
       */
      Budget: class {
        /**
         * @typedef {Object} AWS_Budgets_Budget
         * @property {AWS_Budgets_Budget_NotificationWithSubscribers[]} [NotificationsWithSubscribers] NotificationsWithSubscribers.
         * @property {AWS_Budgets_Budget_BudgetData} Budget Budget.
         */
        /**
         * Create a new AWS::Budgets::Budget
         * @param {AWS_Budgets_Budget} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Budgets_Budget_NotificationWithSubscribers
         * @property {AWS_Budgets_Budget_Subscriber[]} Subscribers Subscribers.
         * @property {AWS_Budgets_Budget_Notification} Notification Notification.
         */
        /**
         * @param {AWS_Budgets_Budget_NotificationWithSubscribers} properties
         * @returns {AWS_Budgets_Budget_NotificationWithSubscribers}
         */
        static NotificationWithSubscribers(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Budgets_Budget_Subscriber
         * @property {string} SubscriptionType SubscriptionType.
         * @property {string} Address Address.
         */
        /**
         * @param {AWS_Budgets_Budget_Subscriber} properties
         * @returns {AWS_Budgets_Budget_Subscriber}
         */
        static Subscriber(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Budgets_Budget_Notification
         * @property {string} ComparisonOperator ComparisonOperator.
         * @property {string} NotificationType NotificationType.
         * @property {number} Threshold Threshold.
         * @property {string} [ThresholdType] ThresholdType.
         */
        /**
         * @param {AWS_Budgets_Budget_Notification} properties
         * @returns {AWS_Budgets_Budget_Notification}
         */
        static Notification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Budgets_Budget_BudgetData
         * @property {AWS_Budgets_Budget_Spend} [BudgetLimit] BudgetLimit.
         * @property {AWS_Budgets_Budget_TimePeriod} [TimePeriod] TimePeriod.
         * @property {string} TimeUnit TimeUnit.
         * @property {string} [CostFilters] CostFilters.
         * @property {string} [BudgetName] BudgetName.
         * @property {AWS_Budgets_Budget_CostTypes} [CostTypes] CostTypes.
         * @property {string} BudgetType BudgetType.
         */
        /**
         * @param {AWS_Budgets_Budget_BudgetData} properties
         * @returns {AWS_Budgets_Budget_BudgetData}
         */
        static BudgetData(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Budgets_Budget_CostTypes
         * @property {boolean} [IncludeSupport] IncludeSupport.
         * @property {boolean} [IncludeOtherSubscription] IncludeOtherSubscription.
         * @property {boolean} [IncludeTax] IncludeTax.
         * @property {boolean} [IncludeSubscription] IncludeSubscription.
         * @property {boolean} [UseBlended] UseBlended.
         * @property {boolean} [IncludeUpfront] IncludeUpfront.
         * @property {boolean} [IncludeDiscount] IncludeDiscount.
         * @property {boolean} [IncludeCredit] IncludeCredit.
         * @property {boolean} [IncludeRecurring] IncludeRecurring.
         * @property {boolean} [UseAmortized] UseAmortized.
         * @property {boolean} [IncludeRefund] IncludeRefund.
         */
        /**
         * @param {AWS_Budgets_Budget_CostTypes} properties
         * @returns {AWS_Budgets_Budget_CostTypes}
         */
        static CostTypes(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Budgets_Budget_TimePeriod
         * @property {string} [Start] Start.
         * @property {string} [End] End.
         */
        /**
         * @param {AWS_Budgets_Budget_TimePeriod} properties
         * @returns {AWS_Budgets_Budget_TimePeriod}
         */
        static TimePeriod(properties) { return properties; }
        /**
         * @typedef {Object} AWS_Budgets_Budget_Spend
         * @property {number} Amount Amount.
         * @property {string} Unit Unit.
         */
        /**
         * @param {AWS_Budgets_Budget_Spend} properties
         * @returns {AWS_Budgets_Budget_Spend}
         */
        static Spend(properties) { return properties; }
      }
    },
    /**
     * @namespace DAX
     */
    DAX: {
      /**
       * @namespace SubnetGroup
       */
      SubnetGroup: class {
        /**
         * @typedef {Object} AWS_DAX_SubnetGroup
         * @property {string} [Description] Description.
         * @property {string} [SubnetGroupName] SubnetGroupName.
         * @property {string[]} SubnetIds SubnetIds.
         */
        /**
         * Create a new AWS::DAX::SubnetGroup
         * @param {AWS_DAX_SubnetGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ParameterGroup
       */
      ParameterGroup: class {
        /**
         * @typedef {Object} AWS_DAX_ParameterGroup
         * @property {string} [ParameterNameValues] ParameterNameValues.
         * @property {string} [Description] Description.
         * @property {string} [ParameterGroupName] ParameterGroupName.
         */
        /**
         * Create a new AWS::DAX::ParameterGroup
         * @param {AWS_DAX_ParameterGroup} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Cluster
       */
      Cluster: class {
        /**
         * @typedef {Object} AWS_DAX_Cluster
         * @property {AWS_DAX_Cluster_SSESpecification} [SSESpecification] SSESpecification.
         * @property {string} [Description] Description.
         * @property {number} ReplicationFactor ReplicationFactor.
         * @property {string} [ParameterGroupName] ParameterGroupName.
         * @property {string[]} [AvailabilityZones] AvailabilityZones.
         * @property {string} IAMRoleARN IAMRoleARN.
         * @property {string} [SubnetGroupName] SubnetGroupName.
         * @property {string} [PreferredMaintenanceWindow] PreferredMaintenanceWindow.
         * @property {string} [NotificationTopicARN] NotificationTopicARN.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {string} NodeType NodeType.
         * @property {string} [ClusterName] ClusterName.
         * @property {string} [Tags] Tags.
         */
        /**
         * Create a new AWS::DAX::Cluster
         * @param {AWS_DAX_Cluster} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_DAX_Cluster_SSESpecification
         * @property {boolean} [SSEEnabled] SSEEnabled.
         */
        /**
         * @param {AWS_DAX_Cluster_SSESpecification} properties
         * @returns {AWS_DAX_Cluster_SSESpecification}
         */
        static SSESpecification(properties) { return properties; }
      }
    },
    /**
     * @namespace FSx
     */
    FSx: {
      /**
       * @namespace FileSystem
       */
      FileSystem: class {
        /**
         * @typedef {Object} AWS_FSx_FileSystem
         * @property {string} [KmsKeyId] KmsKeyId.
         * @property {number} [StorageCapacity] StorageCapacity.
         * @property {string} [FileSystemType] FileSystemType.
         * @property {AWS_FSx_FileSystem_LustreConfiguration} [LustreConfiguration] LustreConfiguration.
         * @property {string} [BackupId] BackupId.
         * @property {string[]} [SubnetIds] SubnetIds.
         * @property {string[]} [SecurityGroupIds] SecurityGroupIds.
         * @property {AWS_FSx_FileSystem_TagEntry[]} [Tags] Tags.
         * @property {AWS_FSx_FileSystem_WindowsConfiguration} [WindowsConfiguration] WindowsConfiguration.
         */
        /**
         * Create a new AWS::FSx::FileSystem
         * @param {AWS_FSx_FileSystem} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_FSx_FileSystem_TagEntry
         * @property {string} Value Value.
         * @property {string} Key Key.
         */
        /**
         * @param {AWS_FSx_FileSystem_TagEntry} properties
         * @returns {AWS_FSx_FileSystem_TagEntry}
         */
        static TagEntry(properties) { return properties; }
        /**
         * @typedef {Object} AWS_FSx_FileSystem_LustreConfiguration
         * @property {string} [ImportPath] ImportPath.
         * @property {string} [WeeklyMaintenanceStartTime] WeeklyMaintenanceStartTime.
         * @property {number} [ImportedFileChunkSize] ImportedFileChunkSize.
         * @property {string} [ExportPath] ExportPath.
         */
        /**
         * @param {AWS_FSx_FileSystem_LustreConfiguration} properties
         * @returns {AWS_FSx_FileSystem_LustreConfiguration}
         */
        static LustreConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_FSx_FileSystem_WindowsConfiguration
         * @property {string} [WeeklyMaintenanceStartTime] WeeklyMaintenanceStartTime.
         * @property {string} [ActiveDirectoryId] ActiveDirectoryId.
         * @property {number} [ThroughputCapacity] ThroughputCapacity.
         * @property {boolean} [CopyTagsToBackups] CopyTagsToBackups.
         * @property {string} [DailyAutomaticBackupStartTime] DailyAutomaticBackupStartTime.
         * @property {number} [AutomaticBackupRetentionDays] AutomaticBackupRetentionDays.
         */
        /**
         * @param {AWS_FSx_FileSystem_WindowsConfiguration} properties
         * @returns {AWS_FSx_FileSystem_WindowsConfiguration}
         */
        static WindowsConfiguration(properties) { return properties; }
      }
    },
    /**
     * @namespace DataPipeline
     */
    DataPipeline: {
      /**
       * @namespace Pipeline
       */
      Pipeline: class {
        /**
         * @typedef {Object} AWS_DataPipeline_Pipeline
         * @property {boolean} [Activate] Activate.
         * @property {string} [Description] Description.
         * @property {string} Name Name.
         * @property {AWS_DataPipeline_Pipeline_ParameterObject[]} ParameterObjects ParameterObjects.
         * @property {AWS_DataPipeline_Pipeline_ParameterValue[]} [ParameterValues] ParameterValues.
         * @property {AWS_DataPipeline_Pipeline_PipelineObject[]} [PipelineObjects] PipelineObjects.
         * @property {AWS_DataPipeline_Pipeline_PipelineTag[]} [PipelineTags] PipelineTags.
         */
        /**
         * Create a new AWS::DataPipeline::Pipeline
         * @param {AWS_DataPipeline_Pipeline} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_DataPipeline_Pipeline_ParameterAttribute
         * @property {string} Key Key.
         * @property {string} StringValue StringValue.
         */
        /**
         * @param {AWS_DataPipeline_Pipeline_ParameterAttribute} properties
         * @returns {AWS_DataPipeline_Pipeline_ParameterAttribute}
         */
        static ParameterAttribute(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DataPipeline_Pipeline_PipelineTag
         * @property {string} Key Key.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_DataPipeline_Pipeline_PipelineTag} properties
         * @returns {AWS_DataPipeline_Pipeline_PipelineTag}
         */
        static PipelineTag(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DataPipeline_Pipeline_ParameterObject
         * @property {AWS_DataPipeline_Pipeline_ParameterAttribute[]} Attributes Attributes.
         * @property {string} Id Id.
         */
        /**
         * @param {AWS_DataPipeline_Pipeline_ParameterObject} properties
         * @returns {AWS_DataPipeline_Pipeline_ParameterObject}
         */
        static ParameterObject(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DataPipeline_Pipeline_PipelineObject
         * @property {AWS_DataPipeline_Pipeline_Field[]} Fields Fields.
         * @property {string} Id Id.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_DataPipeline_Pipeline_PipelineObject} properties
         * @returns {AWS_DataPipeline_Pipeline_PipelineObject}
         */
        static PipelineObject(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DataPipeline_Pipeline_ParameterValue
         * @property {string} Id Id.
         * @property {string} StringValue StringValue.
         */
        /**
         * @param {AWS_DataPipeline_Pipeline_ParameterValue} properties
         * @returns {AWS_DataPipeline_Pipeline_ParameterValue}
         */
        static ParameterValue(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DataPipeline_Pipeline_Field
         * @property {string} Key Key.
         * @property {string} [RefValue] RefValue.
         * @property {string} [StringValue] StringValue.
         */
        /**
         * @param {AWS_DataPipeline_Pipeline_Field} properties
         * @returns {AWS_DataPipeline_Pipeline_Field}
         */
        static Field(properties) { return properties; }
      }
    },
    /**
     * @namespace Route53Resolver
     */
    Route53Resolver: {
      /**
       * @namespace ResolverRule
       */
      ResolverRule: class {
        /**
         * @typedef {Object} AWS_Route53Resolver_ResolverRule
         * @property {string} [ResolverEndpointId] ResolverEndpointId.
         * @property {string} DomainName DomainName.
         * @property {string} RuleType RuleType.
         * @property {AWS_Route53Resolver_ResolverRule_TargetAddress[]} [TargetIps] TargetIps.
         * @property {AWS_Route53Resolver_ResolverRule_Tag[]} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Route53Resolver::ResolverRule
         * @param {AWS_Route53Resolver_ResolverRule} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Route53Resolver_ResolverRule_TargetAddress
         * @property {string} Ip Ip.
         * @property {string} Port Port.
         */
        /**
         * @param {AWS_Route53Resolver_ResolverRule_TargetAddress} properties
         * @returns {AWS_Route53Resolver_ResolverRule_TargetAddress}
         */
        static TargetAddress(properties) { return properties; }
      },
      /**
       * @namespace ResolverRuleAssociation
       */
      ResolverRuleAssociation: class {
        /**
         * @typedef {Object} AWS_Route53Resolver_ResolverRuleAssociation
         * @property {string} VPCId VPCId.
         * @property {string} ResolverRuleId ResolverRuleId.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Route53Resolver::ResolverRuleAssociation
         * @param {AWS_Route53Resolver_ResolverRuleAssociation} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace ResolverEndpoint
       */
      ResolverEndpoint: class {
        /**
         * @typedef {Object} AWS_Route53Resolver_ResolverEndpoint
         * @property {AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest[]} IpAddresses IpAddresses.
         * @property {string} Direction Direction.
         * @property {string[]} SecurityGroupIds SecurityGroupIds.
         * @property {AWS_Route53Resolver_ResolverEndpoint_Tag[]} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Route53Resolver::ResolverEndpoint
         * @param {AWS_Route53Resolver_ResolverEndpoint} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest
         * @property {string} [Ip] Ip.
         * @property {string} SubnetId SubnetId.
         */
        /**
         * @param {AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest} properties
         * @returns {AWS_Route53Resolver_ResolverEndpoint_IpAddressRequest}
         */
        static IpAddressRequest(properties) { return properties; }
      }
    },
    /**
     * @namespace CloudTrail
     */
    CloudTrail: {
      /**
       * @namespace Trail
       */
      Trail: class {
        /**
         * @typedef {Object} AWS_CloudTrail_Trail
         * @property {string} [CloudWatchLogsLogGroupArn] CloudWatchLogsLogGroupArn.
         * @property {string} [CloudWatchLogsRoleArn] CloudWatchLogsRoleArn.
         * @property {boolean} [EnableLogFileValidation] EnableLogFileValidation.
         * @property {AWS_CloudTrail_Trail_EventSelector[]} [EventSelectors] EventSelectors.
         * @property {boolean} [IncludeGlobalServiceEvents] IncludeGlobalServiceEvents.
         * @property {boolean} IsLogging IsLogging.
         * @property {boolean} [IsMultiRegionTrail] IsMultiRegionTrail.
         * @property {string} [KMSKeyId] KMSKeyId.
         * @property {string} S3BucketName S3BucketName.
         * @property {string} [S3KeyPrefix] S3KeyPrefix.
         * @property {string} [SnsTopicName] SnsTopicName.
         * @property {AWS_CloudTrail_Trail_Tag[]} [Tags] Tags.
         * @property {string} [TrailName] TrailName.
         */
        /**
         * Create a new AWS::CloudTrail::Trail
         * @param {AWS_CloudTrail_Trail} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CloudTrail_Trail_EventSelector
         * @property {AWS_CloudTrail_Trail_DataResource[]} [DataResources] DataResources.
         * @property {boolean} [IncludeManagementEvents] IncludeManagementEvents.
         * @property {string} [ReadWriteType] ReadWriteType.
         */
        /**
         * @param {AWS_CloudTrail_Trail_EventSelector} properties
         * @returns {AWS_CloudTrail_Trail_EventSelector}
         */
        static EventSelector(properties) { return properties; }
        /**
         * @typedef {Object} AWS_CloudTrail_Trail_DataResource
         * @property {string} Type Type.
         * @property {string[]} [Values] Values.
         */
        /**
         * @param {AWS_CloudTrail_Trail_DataResource} properties
         * @returns {AWS_CloudTrail_Trail_DataResource}
         */
        static DataResource(properties) { return properties; }
      }
    },
    /**
     * @namespace RoboMaker
     */
    RoboMaker: {
      /**
       * @namespace SimulationApplication
       */
      SimulationApplication: class {
        /**
         * @typedef {Object} AWS_RoboMaker_SimulationApplication
         * @property {AWS_RoboMaker_SimulationApplication_RenderingEngine} RenderingEngine RenderingEngine.
         * @property {AWS_RoboMaker_SimulationApplication_SimulationSoftwareSuite} SimulationSoftwareSuite SimulationSoftwareSuite.
         * @property {string} [CurrentRevisionId] CurrentRevisionId.
         * @property {AWS_RoboMaker_SimulationApplication_RobotSoftwareSuite} RobotSoftwareSuite RobotSoftwareSuite.
         * @property {AWS_RoboMaker_SimulationApplication_SourceConfig[]} Sources Sources.
         * @property {string} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::RoboMaker::SimulationApplication
         * @param {AWS_RoboMaker_SimulationApplication} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_RoboMaker_SimulationApplication_RobotSoftwareSuite
         * @property {string} Version Version.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_RoboMaker_SimulationApplication_RobotSoftwareSuite} properties
         * @returns {AWS_RoboMaker_SimulationApplication_RobotSoftwareSuite}
         */
        static RobotSoftwareSuite(properties) { return properties; }
        /**
         * @typedef {Object} AWS_RoboMaker_SimulationApplication_SourceConfig
         * @property {string} S3Bucket S3Bucket.
         * @property {string} Architecture Architecture.
         * @property {string} S3Key S3Key.
         */
        /**
         * @param {AWS_RoboMaker_SimulationApplication_SourceConfig} properties
         * @returns {AWS_RoboMaker_SimulationApplication_SourceConfig}
         */
        static SourceConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_RoboMaker_SimulationApplication_RenderingEngine
         * @property {string} Version Version.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_RoboMaker_SimulationApplication_RenderingEngine} properties
         * @returns {AWS_RoboMaker_SimulationApplication_RenderingEngine}
         */
        static RenderingEngine(properties) { return properties; }
        /**
         * @typedef {Object} AWS_RoboMaker_SimulationApplication_SimulationSoftwareSuite
         * @property {string} Version Version.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_RoboMaker_SimulationApplication_SimulationSoftwareSuite} properties
         * @returns {AWS_RoboMaker_SimulationApplication_SimulationSoftwareSuite}
         */
        static SimulationSoftwareSuite(properties) { return properties; }
      },
      /**
       * @namespace SimulationApplicationVersion
       */
      SimulationApplicationVersion: class {
        /**
         * @typedef {Object} AWS_RoboMaker_SimulationApplicationVersion
         * @property {string} [CurrentRevisionId] CurrentRevisionId.
         * @property {string} Application Application.
         */
        /**
         * Create a new AWS::RoboMaker::SimulationApplicationVersion
         * @param {AWS_RoboMaker_SimulationApplicationVersion} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace RobotApplicationVersion
       */
      RobotApplicationVersion: class {
        /**
         * @typedef {Object} AWS_RoboMaker_RobotApplicationVersion
         * @property {string} [CurrentRevisionId] CurrentRevisionId.
         * @property {string} Application Application.
         */
        /**
         * Create a new AWS::RoboMaker::RobotApplicationVersion
         * @param {AWS_RoboMaker_RobotApplicationVersion} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace RobotApplication
       */
      RobotApplication: class {
        /**
         * @typedef {Object} AWS_RoboMaker_RobotApplication
         * @property {string} [CurrentRevisionId] CurrentRevisionId.
         * @property {AWS_RoboMaker_RobotApplication_RobotSoftwareSuite} RobotSoftwareSuite RobotSoftwareSuite.
         * @property {AWS_RoboMaker_RobotApplication_SourceConfig[]} Sources Sources.
         * @property {string} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::RoboMaker::RobotApplication
         * @param {AWS_RoboMaker_RobotApplication} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_RoboMaker_RobotApplication_RobotSoftwareSuite
         * @property {string} Version Version.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_RoboMaker_RobotApplication_RobotSoftwareSuite} properties
         * @returns {AWS_RoboMaker_RobotApplication_RobotSoftwareSuite}
         */
        static RobotSoftwareSuite(properties) { return properties; }
        /**
         * @typedef {Object} AWS_RoboMaker_RobotApplication_SourceConfig
         * @property {string} S3Bucket S3Bucket.
         * @property {string} Architecture Architecture.
         * @property {string} S3Key S3Key.
         */
        /**
         * @param {AWS_RoboMaker_RobotApplication_SourceConfig} properties
         * @returns {AWS_RoboMaker_RobotApplication_SourceConfig}
         */
        static SourceConfig(properties) { return properties; }
      },
      /**
       * @namespace Robot
       */
      Robot: class {
        /**
         * @typedef {Object} AWS_RoboMaker_Robot
         * @property {string} [Fleet] Fleet.
         * @property {string} Architecture Architecture.
         * @property {string} GreengrassGroupId GreengrassGroupId.
         * @property {string} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::RoboMaker::Robot
         * @param {AWS_RoboMaker_Robot} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Fleet
       */
      Fleet: class {
        /**
         * @typedef {Object} AWS_RoboMaker_Fleet
         * @property {string} [Tags] Tags.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::RoboMaker::Fleet
         * @param {AWS_RoboMaker_Fleet} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace CloudFormation
     */
    CloudFormation: {
      /**
       * @namespace WaitCondition
       */
      WaitCondition: class {
        /**
         * @typedef {Object} AWS_CloudFormation_WaitCondition
         * @property {number} [Count] Count.
         * @property {string} [Handle] Handle.
         * @property {string} [Timeout] Timeout.
         */
        /**
         * Create a new AWS::CloudFormation::WaitCondition
         * @param {AWS_CloudFormation_WaitCondition} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Stack
       */
      Stack: class {
        /**
         * @typedef {Object} AWS_CloudFormation_Stack
         * @property {string[]} [NotificationARNs] NotificationARNs.
         * @property {AWS_CloudFormation_Stack_Map} [Parameters] Parameters.
         * @property {AWS_CloudFormation_Stack_Tag[]} [Tags] Tags.
         * @property {string} TemplateURL TemplateURL.
         * @property {number} [TimeoutInMinutes] TimeoutInMinutes.
         */
        /**
         * Create a new AWS::CloudFormation::Stack
         * @param {AWS_CloudFormation_Stack} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace WaitConditionHandle
       */
      WaitConditionHandle: class {
        /**
         * @typedef {Object} AWS_CloudFormation_WaitConditionHandle
         */
        /**
         * Create a new AWS::CloudFormation::WaitConditionHandle
         * @param {AWS_CloudFormation_WaitConditionHandle} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Macro
       */
      Macro: class {
        /**
         * @typedef {Object} AWS_CloudFormation_Macro
         * @property {string} [Description] Description.
         * @property {string} FunctionName FunctionName.
         * @property {string} [LogGroupName] LogGroupName.
         * @property {string} [LogRoleARN] LogRoleARN.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::CloudFormation::Macro
         * @param {AWS_CloudFormation_Macro} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace CustomResource
       */
      CustomResource: class {
        /**
         * @typedef {Object} AWS_CloudFormation_CustomResource
         * @property {string} ServiceToken ServiceToken.
         */
        /**
         * Create a new AWS::CloudFormation::CustomResource
         * @param {AWS_CloudFormation_CustomResource} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace Cloud9
     */
    Cloud9: {
      /**
       * @namespace EnvironmentEC2
       */
      EnvironmentEC2: class {
        /**
         * @typedef {Object} AWS_Cloud9_EnvironmentEC2
         * @property {AWS_Cloud9_EnvironmentEC2_Repository[]} [Repositories] Repositories.
         * @property {string} [OwnerArn] OwnerArn.
         * @property {string} [Description] Description.
         * @property {number} [AutomaticStopTimeMinutes] AutomaticStopTimeMinutes.
         * @property {string} [SubnetId] SubnetId.
         * @property {string} InstanceType InstanceType.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Cloud9::EnvironmentEC2
         * @param {AWS_Cloud9_EnvironmentEC2} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_Cloud9_EnvironmentEC2_Repository
         * @property {string} PathComponent PathComponent.
         * @property {string} RepositoryUrl RepositoryUrl.
         */
        /**
         * @param {AWS_Cloud9_EnvironmentEC2_Repository} properties
         * @returns {AWS_Cloud9_EnvironmentEC2_Repository}
         */
        static Repository(properties) { return properties; }
      }
    },
    /**
     * @namespace ServiceDiscovery
     */
    ServiceDiscovery: {
      /**
       * @namespace Instance
       */
      Instance: class {
        /**
         * @typedef {Object} AWS_ServiceDiscovery_Instance
         * @property {object} InstanceAttributes InstanceAttributes.
         * @property {string} [InstanceId] InstanceId.
         * @property {string} ServiceId ServiceId.
         */
        /**
         * Create a new AWS::ServiceDiscovery::Instance
         * @param {AWS_ServiceDiscovery_Instance} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace Service
       */
      Service: class {
        /**
         * @typedef {Object} AWS_ServiceDiscovery_Service
         * @property {string} [Description] Description.
         * @property {AWS_ServiceDiscovery_Service_HealthCheckCustomConfig} [HealthCheckCustomConfig] HealthCheckCustomConfig.
         * @property {AWS_ServiceDiscovery_Service_DnsConfig} [DnsConfig] DnsConfig.
         * @property {string} [NamespaceId] NamespaceId.
         * @property {AWS_ServiceDiscovery_Service_HealthCheckConfig} [HealthCheckConfig] HealthCheckConfig.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::ServiceDiscovery::Service
         * @param {AWS_ServiceDiscovery_Service} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ServiceDiscovery_Service_DnsConfig
         * @property {AWS_ServiceDiscovery_Service_DnsRecord[]} DnsRecords DnsRecords.
         * @property {string} [RoutingPolicy] RoutingPolicy.
         * @property {string} [NamespaceId] NamespaceId.
         */
        /**
         * @param {AWS_ServiceDiscovery_Service_DnsConfig} properties
         * @returns {AWS_ServiceDiscovery_Service_DnsConfig}
         */
        static DnsConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ServiceDiscovery_Service_DnsRecord
         * @property {string} Type Type.
         * @property {string} TTL TTL.
         */
        /**
         * @param {AWS_ServiceDiscovery_Service_DnsRecord} properties
         * @returns {AWS_ServiceDiscovery_Service_DnsRecord}
         */
        static DnsRecord(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ServiceDiscovery_Service_HealthCheckCustomConfig
         * @property {number} [FailureThreshold] FailureThreshold.
         */
        /**
         * @param {AWS_ServiceDiscovery_Service_HealthCheckCustomConfig} properties
         * @returns {AWS_ServiceDiscovery_Service_HealthCheckCustomConfig}
         */
        static HealthCheckCustomConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ServiceDiscovery_Service_HealthCheckConfig
         * @property {string} Type Type.
         * @property {string} [ResourcePath] ResourcePath.
         * @property {number} [FailureThreshold] FailureThreshold.
         */
        /**
         * @param {AWS_ServiceDiscovery_Service_HealthCheckConfig} properties
         * @returns {AWS_ServiceDiscovery_Service_HealthCheckConfig}
         */
        static HealthCheckConfig(properties) { return properties; }
      },
      /**
       * @namespace HttpNamespace
       */
      HttpNamespace: class {
        /**
         * @typedef {Object} AWS_ServiceDiscovery_HttpNamespace
         * @property {string} [Description] Description.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::ServiceDiscovery::HttpNamespace
         * @param {AWS_ServiceDiscovery_HttpNamespace} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace PrivateDnsNamespace
       */
      PrivateDnsNamespace: class {
        /**
         * @typedef {Object} AWS_ServiceDiscovery_PrivateDnsNamespace
         * @property {string} [Description] Description.
         * @property {string} Vpc Vpc.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::ServiceDiscovery::PrivateDnsNamespace
         * @param {AWS_ServiceDiscovery_PrivateDnsNamespace} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      },
      /**
       * @namespace PublicDnsNamespace
       */
      PublicDnsNamespace: class {
        /**
         * @typedef {Object} AWS_ServiceDiscovery_PublicDnsNamespace
         * @property {string} [Description] Description.
         * @property {string} Name Name.
         */
        /**
         * Create a new AWS::ServiceDiscovery::PublicDnsNamespace
         * @param {AWS_ServiceDiscovery_PublicDnsNamespace} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace KinesisAnalyticsV2
     */
    KinesisAnalyticsV2: {
      /**
       * @namespace ApplicationOutput
       */
      ApplicationOutput: class {
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationOutput
         * @property {string} ApplicationName ApplicationName.
         * @property {AWS_KinesisAnalyticsV2_ApplicationOutput_Output} Output Output.
         */
        /**
         * Create a new AWS::KinesisAnalyticsV2::ApplicationOutput
         * @param {AWS_KinesisAnalyticsV2_ApplicationOutput} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationOutput_LambdaOutput
         * @property {string} ResourceARN ResourceARN.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationOutput_LambdaOutput} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationOutput_LambdaOutput}
         */
        static LambdaOutput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationOutput_DestinationSchema
         * @property {string} [RecordFormatType] RecordFormatType.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationOutput_DestinationSchema} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationOutput_DestinationSchema}
         */
        static DestinationSchema(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationOutput_Output
         * @property {AWS_KinesisAnalyticsV2_ApplicationOutput_DestinationSchema} DestinationSchema DestinationSchema.
         * @property {AWS_KinesisAnalyticsV2_ApplicationOutput_LambdaOutput} [LambdaOutput] LambdaOutput.
         * @property {AWS_KinesisAnalyticsV2_ApplicationOutput_KinesisFirehoseOutput} [KinesisFirehoseOutput] KinesisFirehoseOutput.
         * @property {AWS_KinesisAnalyticsV2_ApplicationOutput_KinesisStreamsOutput} [KinesisStreamsOutput] KinesisStreamsOutput.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationOutput_Output} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationOutput_Output}
         */
        static Output(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationOutput_KinesisFirehoseOutput
         * @property {string} ResourceARN ResourceARN.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationOutput_KinesisFirehoseOutput} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationOutput_KinesisFirehoseOutput}
         */
        static KinesisFirehoseOutput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationOutput_KinesisStreamsOutput
         * @property {string} ResourceARN ResourceARN.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationOutput_KinesisStreamsOutput} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationOutput_KinesisStreamsOutput}
         */
        static KinesisStreamsOutput(properties) { return properties; }
      },
      /**
       * @namespace ApplicationCloudWatchLoggingOption
       */
      ApplicationCloudWatchLoggingOption: class {
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationCloudWatchLoggingOption
         * @property {string} ApplicationName ApplicationName.
         * @property {AWS_KinesisAnalyticsV2_ApplicationCloudWatchLoggingOption_CloudWatchLoggingOption} CloudWatchLoggingOption CloudWatchLoggingOption.
         */
        /**
         * Create a new AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption
         * @param {AWS_KinesisAnalyticsV2_ApplicationCloudWatchLoggingOption} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationCloudWatchLoggingOption_CloudWatchLoggingOption
         * @property {string} LogStreamARN LogStreamARN.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationCloudWatchLoggingOption_CloudWatchLoggingOption} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationCloudWatchLoggingOption_CloudWatchLoggingOption}
         */
        static CloudWatchLoggingOption(properties) { return properties; }
      },
      /**
       * @namespace ApplicationReferenceDataSource
       */
      ApplicationReferenceDataSource: class {
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource
         * @property {string} ApplicationName ApplicationName.
         * @property {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_ReferenceDataSource} ReferenceDataSource ReferenceDataSource.
         */
        /**
         * Create a new AWS::KinesisAnalyticsV2::ApplicationReferenceDataSource
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_RecordColumn
         * @property {string} [Mapping] Mapping.
         * @property {string} SqlType SqlType.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_RecordColumn} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_RecordColumn}
         */
        static RecordColumn(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_RecordFormat
         * @property {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_MappingParameters} [MappingParameters] MappingParameters.
         * @property {string} RecordFormatType RecordFormatType.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_RecordFormat} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_RecordFormat}
         */
        static RecordFormat(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_JSONMappingParameters
         * @property {string} RecordRowPath RecordRowPath.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_JSONMappingParameters} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_JSONMappingParameters}
         */
        static JSONMappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_S3ReferenceDataSource
         * @property {string} BucketARN BucketARN.
         * @property {string} FileKey FileKey.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_S3ReferenceDataSource} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_S3ReferenceDataSource}
         */
        static S3ReferenceDataSource(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_ReferenceDataSource
         * @property {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_ReferenceSchema} ReferenceSchema ReferenceSchema.
         * @property {string} [TableName] TableName.
         * @property {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_S3ReferenceDataSource} [S3ReferenceDataSource] S3ReferenceDataSource.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_ReferenceDataSource} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_ReferenceDataSource}
         */
        static ReferenceDataSource(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_MappingParameters
         * @property {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_JSONMappingParameters} [JSONMappingParameters] JSONMappingParameters.
         * @property {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_CSVMappingParameters} [CSVMappingParameters] CSVMappingParameters.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_MappingParameters} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_MappingParameters}
         */
        static MappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_ReferenceSchema
         * @property {string} [RecordEncoding] RecordEncoding.
         * @property {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_RecordColumn[]} RecordColumns RecordColumns.
         * @property {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_RecordFormat} RecordFormat RecordFormat.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_ReferenceSchema} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_ReferenceSchema}
         */
        static ReferenceSchema(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_CSVMappingParameters
         * @property {string} RecordRowDelimiter RecordRowDelimiter.
         * @property {string} RecordColumnDelimiter RecordColumnDelimiter.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_CSVMappingParameters} properties
         * @returns {AWS_KinesisAnalyticsV2_ApplicationReferenceDataSource_CSVMappingParameters}
         */
        static CSVMappingParameters(properties) { return properties; }
      },
      /**
       * @namespace Application
       */
      Application: class {
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application
         * @property {string} [ApplicationName] ApplicationName.
         * @property {string} RuntimeEnvironment RuntimeEnvironment.
         * @property {AWS_KinesisAnalyticsV2_Application_ApplicationConfiguration} [ApplicationConfiguration] ApplicationConfiguration.
         * @property {string} [ApplicationDescription] ApplicationDescription.
         * @property {string} ServiceExecutionRole ServiceExecutionRole.
         */
        /**
         * Create a new AWS::KinesisAnalyticsV2::Application
         * @param {AWS_KinesisAnalyticsV2_Application} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_RecordColumn
         * @property {string} [Mapping] Mapping.
         * @property {string} SqlType SqlType.
         * @property {string} Name Name.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_RecordColumn} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_RecordColumn}
         */
        static RecordColumn(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_ParallelismConfiguration
         * @property {string} ConfigurationType ConfigurationType.
         * @property {number} [ParallelismPerKPU] ParallelismPerKPU.
         * @property {boolean} [AutoScalingEnabled] AutoScalingEnabled.
         * @property {number} [Parallelism] Parallelism.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_ParallelismConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_ParallelismConfiguration}
         */
        static ParallelismConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_CSVMappingParameters
         * @property {string} RecordRowDelimiter RecordRowDelimiter.
         * @property {string} RecordColumnDelimiter RecordColumnDelimiter.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_CSVMappingParameters} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_CSVMappingParameters}
         */
        static CSVMappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_MonitoringConfiguration
         * @property {string} ConfigurationType ConfigurationType.
         * @property {string} [MetricsLevel] MetricsLevel.
         * @property {string} [LogLevel] LogLevel.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_MonitoringConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_MonitoringConfiguration}
         */
        static MonitoringConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_RecordFormat
         * @property {AWS_KinesisAnalyticsV2_Application_MappingParameters} [MappingParameters] MappingParameters.
         * @property {string} RecordFormatType RecordFormatType.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_RecordFormat} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_RecordFormat}
         */
        static RecordFormat(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_JSONMappingParameters
         * @property {string} RecordRowPath RecordRowPath.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_JSONMappingParameters} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_JSONMappingParameters}
         */
        static JSONMappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_CodeContent
         * @property {string} [ZipFileContent] ZipFileContent.
         * @property {AWS_KinesisAnalyticsV2_Application_S3ContentLocation} [S3ContentLocation] S3ContentLocation.
         * @property {string} [TextContent] TextContent.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_CodeContent} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_CodeContent}
         */
        static CodeContent(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_S3ContentLocation
         * @property {string} [BucketARN] BucketARN.
         * @property {string} [FileKey] FileKey.
         * @property {string} [ObjectVersion] ObjectVersion.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_S3ContentLocation} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_S3ContentLocation}
         */
        static S3ContentLocation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_PropertyGroup
         * @property {string} [PropertyMap] PropertyMap.
         * @property {string} [PropertyGroupId] PropertyGroupId.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_PropertyGroup} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_PropertyGroup}
         */
        static PropertyGroup(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_KinesisStreamsInput
         * @property {string} ResourceARN ResourceARN.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_KinesisStreamsInput} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_KinesisStreamsInput}
         */
        static KinesisStreamsInput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_MappingParameters
         * @property {AWS_KinesisAnalyticsV2_Application_JSONMappingParameters} [JSONMappingParameters] JSONMappingParameters.
         * @property {AWS_KinesisAnalyticsV2_Application_CSVMappingParameters} [CSVMappingParameters] CSVMappingParameters.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_MappingParameters} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_MappingParameters}
         */
        static MappingParameters(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_CheckpointConfiguration
         * @property {string} ConfigurationType ConfigurationType.
         * @property {number} [CheckpointInterval] CheckpointInterval.
         * @property {number} [MinPauseBetweenCheckpoints] MinPauseBetweenCheckpoints.
         * @property {boolean} [CheckpointingEnabled] CheckpointingEnabled.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_CheckpointConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_CheckpointConfiguration}
         */
        static CheckpointConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_SqlApplicationConfiguration
         * @property {AWS_KinesisAnalyticsV2_Application_Input[]} [Inputs] Inputs.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_SqlApplicationConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_SqlApplicationConfiguration}
         */
        static SqlApplicationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_InputProcessingConfiguration
         * @property {AWS_KinesisAnalyticsV2_Application_InputLambdaProcessor} [InputLambdaProcessor] InputLambdaProcessor.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_InputProcessingConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_InputProcessingConfiguration}
         */
        static InputProcessingConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_InputParallelism
         * @property {number} [Count] Count.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_InputParallelism} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_InputParallelism}
         */
        static InputParallelism(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_ApplicationConfiguration
         * @property {AWS_KinesisAnalyticsV2_Application_ApplicationCodeConfiguration} [ApplicationCodeConfiguration] ApplicationCodeConfiguration.
         * @property {AWS_KinesisAnalyticsV2_Application_EnvironmentProperties} [EnvironmentProperties] EnvironmentProperties.
         * @property {AWS_KinesisAnalyticsV2_Application_FlinkApplicationConfiguration} [FlinkApplicationConfiguration] FlinkApplicationConfiguration.
         * @property {AWS_KinesisAnalyticsV2_Application_SqlApplicationConfiguration} [SqlApplicationConfiguration] SqlApplicationConfiguration.
         * @property {AWS_KinesisAnalyticsV2_Application_ApplicationSnapshotConfiguration} [ApplicationSnapshotConfiguration] ApplicationSnapshotConfiguration.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_ApplicationConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_ApplicationConfiguration}
         */
        static ApplicationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_ApplicationCodeConfiguration
         * @property {string} CodeContentType CodeContentType.
         * @property {AWS_KinesisAnalyticsV2_Application_CodeContent} CodeContent CodeContent.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_ApplicationCodeConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_ApplicationCodeConfiguration}
         */
        static ApplicationCodeConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_InputLambdaProcessor
         * @property {string} ResourceARN ResourceARN.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_InputLambdaProcessor} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_InputLambdaProcessor}
         */
        static InputLambdaProcessor(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_FlinkApplicationConfiguration
         * @property {AWS_KinesisAnalyticsV2_Application_CheckpointConfiguration} [CheckpointConfiguration] CheckpointConfiguration.
         * @property {AWS_KinesisAnalyticsV2_Application_ParallelismConfiguration} [ParallelismConfiguration] ParallelismConfiguration.
         * @property {AWS_KinesisAnalyticsV2_Application_MonitoringConfiguration} [MonitoringConfiguration] MonitoringConfiguration.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_FlinkApplicationConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_FlinkApplicationConfiguration}
         */
        static FlinkApplicationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_Input
         * @property {string} NamePrefix NamePrefix.
         * @property {AWS_KinesisAnalyticsV2_Application_InputSchema} InputSchema InputSchema.
         * @property {AWS_KinesisAnalyticsV2_Application_KinesisStreamsInput} [KinesisStreamsInput] KinesisStreamsInput.
         * @property {AWS_KinesisAnalyticsV2_Application_KinesisFirehoseInput} [KinesisFirehoseInput] KinesisFirehoseInput.
         * @property {AWS_KinesisAnalyticsV2_Application_InputProcessingConfiguration} [InputProcessingConfiguration] InputProcessingConfiguration.
         * @property {AWS_KinesisAnalyticsV2_Application_InputParallelism} [InputParallelism] InputParallelism.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_Input} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_Input}
         */
        static Input(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_ApplicationSnapshotConfiguration
         * @property {boolean} SnapshotsEnabled SnapshotsEnabled.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_ApplicationSnapshotConfiguration} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_ApplicationSnapshotConfiguration}
         */
        static ApplicationSnapshotConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_KinesisFirehoseInput
         * @property {string} ResourceARN ResourceARN.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_KinesisFirehoseInput} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_KinesisFirehoseInput}
         */
        static KinesisFirehoseInput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_EnvironmentProperties
         * @property {AWS_KinesisAnalyticsV2_Application_PropertyGroup[]} [PropertyGroups] PropertyGroups.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_EnvironmentProperties} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_EnvironmentProperties}
         */
        static EnvironmentProperties(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisAnalyticsV2_Application_InputSchema
         * @property {string} [RecordEncoding] RecordEncoding.
         * @property {AWS_KinesisAnalyticsV2_Application_RecordColumn[]} RecordColumns RecordColumns.
         * @property {AWS_KinesisAnalyticsV2_Application_RecordFormat} RecordFormat RecordFormat.
         */
        /**
         * @param {AWS_KinesisAnalyticsV2_Application_InputSchema} properties
         * @returns {AWS_KinesisAnalyticsV2_Application_InputSchema}
         */
        static InputSchema(properties) { return properties; }
      }
    },
    /**
     * @namespace ApplicationAutoScaling
     */
    ApplicationAutoScaling: {
      /**
       * @namespace ScalingPolicy
       */
      ScalingPolicy: class {
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalingPolicy
         * @property {string} PolicyName PolicyName.
         * @property {string} PolicyType PolicyType.
         * @property {string} [ResourceId] ResourceId.
         * @property {string} [ScalableDimension] ScalableDimension.
         * @property {string} [ScalingTargetId] ScalingTargetId.
         * @property {string} [ServiceNamespace] ServiceNamespace.
         * @property {AWS_ApplicationAutoScaling_ScalingPolicy_StepScalingPolicyConfiguration} [StepScalingPolicyConfiguration] StepScalingPolicyConfiguration.
         * @property {AWS_ApplicationAutoScaling_ScalingPolicy_TargetTrackingScalingPolicyConfiguration} [TargetTrackingScalingPolicyConfiguration] TargetTrackingScalingPolicyConfiguration.
         */
        /**
         * Create a new AWS::ApplicationAutoScaling::ScalingPolicy
         * @param {AWS_ApplicationAutoScaling_ScalingPolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalingPolicy_StepScalingPolicyConfiguration
         * @property {string} [AdjustmentType] AdjustmentType.
         * @property {number} [Cooldown] Cooldown.
         * @property {string} [MetricAggregationType] MetricAggregationType.
         * @property {number} [MinAdjustmentMagnitude] MinAdjustmentMagnitude.
         * @property {AWS_ApplicationAutoScaling_ScalingPolicy_StepAdjustment[]} [StepAdjustments] StepAdjustments.
         */
        /**
         * @param {AWS_ApplicationAutoScaling_ScalingPolicy_StepScalingPolicyConfiguration} properties
         * @returns {AWS_ApplicationAutoScaling_ScalingPolicy_StepScalingPolicyConfiguration}
         */
        static StepScalingPolicyConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalingPolicy_MetricDimension
         * @property {string} Name Name.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_ApplicationAutoScaling_ScalingPolicy_MetricDimension} properties
         * @returns {AWS_ApplicationAutoScaling_ScalingPolicy_MetricDimension}
         */
        static MetricDimension(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalingPolicy_StepAdjustment
         * @property {number} [MetricIntervalLowerBound] MetricIntervalLowerBound.
         * @property {number} [MetricIntervalUpperBound] MetricIntervalUpperBound.
         * @property {number} ScalingAdjustment ScalingAdjustment.
         */
        /**
         * @param {AWS_ApplicationAutoScaling_ScalingPolicy_StepAdjustment} properties
         * @returns {AWS_ApplicationAutoScaling_ScalingPolicy_StepAdjustment}
         */
        static StepAdjustment(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalingPolicy_PredefinedMetricSpecification
         * @property {string} PredefinedMetricType PredefinedMetricType.
         * @property {string} [ResourceLabel] ResourceLabel.
         */
        /**
         * @param {AWS_ApplicationAutoScaling_ScalingPolicy_PredefinedMetricSpecification} properties
         * @returns {AWS_ApplicationAutoScaling_ScalingPolicy_PredefinedMetricSpecification}
         */
        static PredefinedMetricSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalingPolicy_CustomizedMetricSpecification
         * @property {AWS_ApplicationAutoScaling_ScalingPolicy_MetricDimension[]} [Dimensions] Dimensions.
         * @property {string} MetricName MetricName.
         * @property {string} Namespace Namespace.
         * @property {string} Statistic Statistic.
         * @property {string} [Unit] Unit.
         */
        /**
         * @param {AWS_ApplicationAutoScaling_ScalingPolicy_CustomizedMetricSpecification} properties
         * @returns {AWS_ApplicationAutoScaling_ScalingPolicy_CustomizedMetricSpecification}
         */
        static CustomizedMetricSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalingPolicy_TargetTrackingScalingPolicyConfiguration
         * @property {AWS_ApplicationAutoScaling_ScalingPolicy_CustomizedMetricSpecification} [CustomizedMetricSpecification] CustomizedMetricSpecification.
         * @property {boolean} [DisableScaleIn] DisableScaleIn.
         * @property {AWS_ApplicationAutoScaling_ScalingPolicy_PredefinedMetricSpecification} [PredefinedMetricSpecification] PredefinedMetricSpecification.
         * @property {number} [ScaleInCooldown] ScaleInCooldown.
         * @property {number} [ScaleOutCooldown] ScaleOutCooldown.
         * @property {number} TargetValue TargetValue.
         */
        /**
         * @param {AWS_ApplicationAutoScaling_ScalingPolicy_TargetTrackingScalingPolicyConfiguration} properties
         * @returns {AWS_ApplicationAutoScaling_ScalingPolicy_TargetTrackingScalingPolicyConfiguration}
         */
        static TargetTrackingScalingPolicyConfiguration(properties) { return properties; }
      },
      /**
       * @namespace ScalableTarget
       */
      ScalableTarget: class {
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalableTarget
         * @property {number} MaxCapacity MaxCapacity.
         * @property {number} MinCapacity MinCapacity.
         * @property {string} ResourceId ResourceId.
         * @property {string} RoleARN RoleARN.
         * @property {string} ScalableDimension ScalableDimension.
         * @property {AWS_ApplicationAutoScaling_ScalableTarget_ScheduledAction[]} [ScheduledActions] ScheduledActions.
         * @property {string} ServiceNamespace ServiceNamespace.
         */
        /**
         * Create a new AWS::ApplicationAutoScaling::ScalableTarget
         * @param {AWS_ApplicationAutoScaling_ScalableTarget} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalableTarget_ScheduledAction
         * @property {string} [EndTime] EndTime.
         * @property {AWS_ApplicationAutoScaling_ScalableTarget_ScalableTargetAction} [ScalableTargetAction] ScalableTargetAction.
         * @property {string} Schedule Schedule.
         * @property {string} ScheduledActionName ScheduledActionName.
         * @property {string} [StartTime] StartTime.
         */
        /**
         * @param {AWS_ApplicationAutoScaling_ScalableTarget_ScheduledAction} properties
         * @returns {AWS_ApplicationAutoScaling_ScalableTarget_ScheduledAction}
         */
        static ScheduledAction(properties) { return properties; }
        /**
         * @typedef {Object} AWS_ApplicationAutoScaling_ScalableTarget_ScalableTargetAction
         * @property {number} [MaxCapacity] MaxCapacity.
         * @property {number} [MinCapacity] MinCapacity.
         */
        /**
         * @param {AWS_ApplicationAutoScaling_ScalableTarget_ScalableTargetAction} properties
         * @returns {AWS_ApplicationAutoScaling_ScalableTarget_ScalableTargetAction}
         */
        static ScalableTargetAction(properties) { return properties; }
      }
    },
    /**
     * @namespace CodeCommit
     */
    CodeCommit: {
      /**
       * @namespace Repository
       */
      Repository: class {
        /**
         * @typedef {Object} AWS_CodeCommit_Repository
         * @property {string} RepositoryName RepositoryName.
         * @property {AWS_CodeCommit_Repository_RepositoryTrigger[]} [Triggers] Triggers.
         * @property {string} [RepositoryDescription] RepositoryDescription.
         */
        /**
         * Create a new AWS::CodeCommit::Repository
         * @param {AWS_CodeCommit_Repository} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_CodeCommit_Repository_RepositoryTrigger
         * @property {string[]} [Events] Events.
         * @property {string[]} [Branches] Branches.
         * @property {string} [CustomData] CustomData.
         * @property {string} [DestinationArn] DestinationArn.
         * @property {string} [Name] Name.
         */
        /**
         * @param {AWS_CodeCommit_Repository_RepositoryTrigger} properties
         * @returns {AWS_CodeCommit_Repository_RepositoryTrigger}
         */
        static RepositoryTrigger(properties) { return properties; }
      }
    },
    /**
     * @namespace S3
     */
    S3: {
      /**
       * @namespace Bucket
       */
      Bucket: class {
        /**
         * @typedef {Object} AWS_S3_Bucket
         * @property {AWS_S3_Bucket_AccelerateConfiguration} [AccelerateConfiguration] AccelerateConfiguration.
         * @property {string} [AccessControl] AccessControl.
         * @property {AWS_S3_Bucket_AnalyticsConfiguration[]} [AnalyticsConfigurations] AnalyticsConfigurations.
         * @property {AWS_S3_Bucket_BucketEncryption} [BucketEncryption] BucketEncryption.
         * @property {string} [BucketName] BucketName.
         * @property {AWS_S3_Bucket_CorsConfiguration} [CorsConfiguration] CorsConfiguration.
         * @property {AWS_S3_Bucket_InventoryConfiguration[]} [InventoryConfigurations] InventoryConfigurations.
         * @property {AWS_S3_Bucket_LifecycleConfiguration} [LifecycleConfiguration] LifecycleConfiguration.
         * @property {AWS_S3_Bucket_LoggingConfiguration} [LoggingConfiguration] LoggingConfiguration.
         * @property {AWS_S3_Bucket_MetricsConfiguration[]} [MetricsConfigurations] MetricsConfigurations.
         * @property {AWS_S3_Bucket_NotificationConfiguration} [NotificationConfiguration] NotificationConfiguration.
         * @property {AWS_S3_Bucket_PublicAccessBlockConfiguration} [PublicAccessBlockConfiguration] PublicAccessBlockConfiguration.
         * @property {AWS_S3_Bucket_ReplicationConfiguration} [ReplicationConfiguration] ReplicationConfiguration.
         * @property {AWS_S3_Bucket_Tag[]} [Tags] Tags.
         * @property {AWS_S3_Bucket_VersioningConfiguration} [VersioningConfiguration] VersioningConfiguration.
         * @property {AWS_S3_Bucket_WebsiteConfiguration} [WebsiteConfiguration] WebsiteConfiguration.
         */
        /**
         * Create a new AWS::S3::Bucket
         * @param {AWS_S3_Bucket} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_S3_Bucket_BucketEncryption
         * @property {AWS_S3_Bucket_ServerSideEncryptionRule[]} ServerSideEncryptionConfiguration ServerSideEncryptionConfiguration.
         */
        /**
         * @param {AWS_S3_Bucket_BucketEncryption} properties
         * @returns {AWS_S3_Bucket_BucketEncryption}
         */
        static BucketEncryption(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_NotificationFilter
         * @property {AWS_S3_Bucket_S3KeyFilter} S3Key S3Key.
         */
        /**
         * @param {AWS_S3_Bucket_NotificationFilter} properties
         * @returns {AWS_S3_Bucket_NotificationFilter}
         */
        static NotificationFilter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_RoutingRuleCondition
         * @property {string} [HttpErrorCodeReturnedEquals] HttpErrorCodeReturnedEquals.
         * @property {string} [KeyPrefixEquals] KeyPrefixEquals.
         */
        /**
         * @param {AWS_S3_Bucket_RoutingRuleCondition} properties
         * @returns {AWS_S3_Bucket_RoutingRuleCondition}
         */
        static RoutingRuleCondition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_LifecycleConfiguration
         * @property {AWS_S3_Bucket_Rule[]} Rules Rules.
         */
        /**
         * @param {AWS_S3_Bucket_LifecycleConfiguration} properties
         * @returns {AWS_S3_Bucket_LifecycleConfiguration}
         */
        static LifecycleConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_LambdaConfiguration
         * @property {string} Event Event.
         * @property {AWS_S3_Bucket_NotificationFilter} [Filter] Filter.
         * @property {string} Function Function.
         */
        /**
         * @param {AWS_S3_Bucket_LambdaConfiguration} properties
         * @returns {AWS_S3_Bucket_LambdaConfiguration}
         */
        static LambdaConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_ReplicationRule
         * @property {AWS_S3_Bucket_ReplicationDestination} Destination Destination.
         * @property {string} [Id] Id.
         * @property {string} Prefix Prefix.
         * @property {AWS_S3_Bucket_SourceSelectionCriteria} [SourceSelectionCriteria] SourceSelectionCriteria.
         * @property {string} Status Status.
         */
        /**
         * @param {AWS_S3_Bucket_ReplicationRule} properties
         * @returns {AWS_S3_Bucket_ReplicationRule}
         */
        static ReplicationRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_CorsRule
         * @property {string[]} [AllowedHeaders] AllowedHeaders.
         * @property {string[]} AllowedMethods AllowedMethods.
         * @property {string[]} AllowedOrigins AllowedOrigins.
         * @property {string[]} [ExposedHeaders] ExposedHeaders.
         * @property {string} [Id] Id.
         * @property {number} [MaxAge] MaxAge.
         */
        /**
         * @param {AWS_S3_Bucket_CorsRule} properties
         * @returns {AWS_S3_Bucket_CorsRule}
         */
        static CorsRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_Destination
         * @property {string} [BucketAccountId] BucketAccountId.
         * @property {string} BucketArn BucketArn.
         * @property {string} Format Format.
         * @property {string} [Prefix] Prefix.
         */
        /**
         * @param {AWS_S3_Bucket_Destination} properties
         * @returns {AWS_S3_Bucket_Destination}
         */
        static Destination(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_ServerSideEncryptionRule
         * @property {AWS_S3_Bucket_ServerSideEncryptionByDefault} [ServerSideEncryptionByDefault] ServerSideEncryptionByDefault.
         */
        /**
         * @param {AWS_S3_Bucket_ServerSideEncryptionRule} properties
         * @returns {AWS_S3_Bucket_ServerSideEncryptionRule}
         */
        static ServerSideEncryptionRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_AnalyticsConfiguration
         * @property {string} Id Id.
         * @property {string} [Prefix] Prefix.
         * @property {AWS_S3_Bucket_StorageClassAnalysis} StorageClassAnalysis StorageClassAnalysis.
         * @property {AWS_S3_Bucket_TagFilter[]} [TagFilters] TagFilters.
         */
        /**
         * @param {AWS_S3_Bucket_AnalyticsConfiguration} properties
         * @returns {AWS_S3_Bucket_AnalyticsConfiguration}
         */
        static AnalyticsConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_SourceSelectionCriteria
         * @property {AWS_S3_Bucket_SseKmsEncryptedObjects} SseKmsEncryptedObjects SseKmsEncryptedObjects.
         */
        /**
         * @param {AWS_S3_Bucket_SourceSelectionCriteria} properties
         * @returns {AWS_S3_Bucket_SourceSelectionCriteria}
         */
        static SourceSelectionCriteria(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_LoggingConfiguration
         * @property {string} [DestinationBucketName] DestinationBucketName.
         * @property {string} [LogFilePrefix] LogFilePrefix.
         */
        /**
         * @param {AWS_S3_Bucket_LoggingConfiguration} properties
         * @returns {AWS_S3_Bucket_LoggingConfiguration}
         */
        static LoggingConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_StorageClassAnalysis
         * @property {AWS_S3_Bucket_DataExport} [DataExport] DataExport.
         */
        /**
         * @param {AWS_S3_Bucket_StorageClassAnalysis} properties
         * @returns {AWS_S3_Bucket_StorageClassAnalysis}
         */
        static StorageClassAnalysis(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_RoutingRule
         * @property {AWS_S3_Bucket_RedirectRule} RedirectRule RedirectRule.
         * @property {AWS_S3_Bucket_RoutingRuleCondition} [RoutingRuleCondition] RoutingRuleCondition.
         */
        /**
         * @param {AWS_S3_Bucket_RoutingRule} properties
         * @returns {AWS_S3_Bucket_RoutingRule}
         */
        static RoutingRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_AccessControlTranslation
         * @property {string} Owner Owner.
         */
        /**
         * @param {AWS_S3_Bucket_AccessControlTranslation} properties
         * @returns {AWS_S3_Bucket_AccessControlTranslation}
         */
        static AccessControlTranslation(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_VersioningConfiguration
         * @property {string} Status Status.
         */
        /**
         * @param {AWS_S3_Bucket_VersioningConfiguration} properties
         * @returns {AWS_S3_Bucket_VersioningConfiguration}
         */
        static VersioningConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_EncryptionConfiguration
         * @property {string} ReplicaKmsKeyID ReplicaKmsKeyID.
         */
        /**
         * @param {AWS_S3_Bucket_EncryptionConfiguration} properties
         * @returns {AWS_S3_Bucket_EncryptionConfiguration}
         */
        static EncryptionConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_NotificationConfiguration
         * @property {AWS_S3_Bucket_LambdaConfiguration[]} [LambdaConfigurations] LambdaConfigurations.
         * @property {AWS_S3_Bucket_QueueConfiguration[]} [QueueConfigurations] QueueConfigurations.
         * @property {AWS_S3_Bucket_TopicConfiguration[]} [TopicConfigurations] TopicConfigurations.
         */
        /**
         * @param {AWS_S3_Bucket_NotificationConfiguration} properties
         * @returns {AWS_S3_Bucket_NotificationConfiguration}
         */
        static NotificationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_ServerSideEncryptionByDefault
         * @property {string} [KMSMasterKeyID] KMSMasterKeyID.
         * @property {string} SSEAlgorithm SSEAlgorithm.
         */
        /**
         * @param {AWS_S3_Bucket_ServerSideEncryptionByDefault} properties
         * @returns {AWS_S3_Bucket_ServerSideEncryptionByDefault}
         */
        static ServerSideEncryptionByDefault(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_RedirectRule
         * @property {string} [HostName] HostName.
         * @property {string} [HttpRedirectCode] HttpRedirectCode.
         * @property {string} [Protocol] Protocol.
         * @property {string} [ReplaceKeyPrefixWith] ReplaceKeyPrefixWith.
         * @property {string} [ReplaceKeyWith] ReplaceKeyWith.
         */
        /**
         * @param {AWS_S3_Bucket_RedirectRule} properties
         * @returns {AWS_S3_Bucket_RedirectRule}
         */
        static RedirectRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_RedirectAllRequestsTo
         * @property {string} HostName HostName.
         * @property {string} [Protocol] Protocol.
         */
        /**
         * @param {AWS_S3_Bucket_RedirectAllRequestsTo} properties
         * @returns {AWS_S3_Bucket_RedirectAllRequestsTo}
         */
        static RedirectAllRequestsTo(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_S3KeyFilter
         * @property {AWS_S3_Bucket_FilterRule[]} Rules Rules.
         */
        /**
         * @param {AWS_S3_Bucket_S3KeyFilter} properties
         * @returns {AWS_S3_Bucket_S3KeyFilter}
         */
        static S3KeyFilter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_InventoryConfiguration
         * @property {AWS_S3_Bucket_Destination} Destination Destination.
         * @property {boolean} Enabled Enabled.
         * @property {string} Id Id.
         * @property {string} IncludedObjectVersions IncludedObjectVersions.
         * @property {string[]} [OptionalFields] OptionalFields.
         * @property {string} [Prefix] Prefix.
         * @property {string} ScheduleFrequency ScheduleFrequency.
         */
        /**
         * @param {AWS_S3_Bucket_InventoryConfiguration} properties
         * @returns {AWS_S3_Bucket_InventoryConfiguration}
         */
        static InventoryConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_WebsiteConfiguration
         * @property {string} [ErrorDocument] ErrorDocument.
         * @property {string} [IndexDocument] IndexDocument.
         * @property {AWS_S3_Bucket_RedirectAllRequestsTo} [RedirectAllRequestsTo] RedirectAllRequestsTo.
         * @property {AWS_S3_Bucket_RoutingRule[]} [RoutingRules] RoutingRules.
         */
        /**
         * @param {AWS_S3_Bucket_WebsiteConfiguration} properties
         * @returns {AWS_S3_Bucket_WebsiteConfiguration}
         */
        static WebsiteConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_ReplicationConfiguration
         * @property {string} Role Role.
         * @property {AWS_S3_Bucket_ReplicationRule[]} Rules Rules.
         */
        /**
         * @param {AWS_S3_Bucket_ReplicationConfiguration} properties
         * @returns {AWS_S3_Bucket_ReplicationConfiguration}
         */
        static ReplicationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_SseKmsEncryptedObjects
         * @property {string} Status Status.
         */
        /**
         * @param {AWS_S3_Bucket_SseKmsEncryptedObjects} properties
         * @returns {AWS_S3_Bucket_SseKmsEncryptedObjects}
         */
        static SseKmsEncryptedObjects(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_Rule
         * @property {AWS_S3_Bucket_AbortIncompleteMultipartUpload} [AbortIncompleteMultipartUpload] AbortIncompleteMultipartUpload.
         * @property {string} [ExpirationDate] ExpirationDate.
         * @property {number} [ExpirationInDays] ExpirationInDays.
         * @property {string} [Id] Id.
         * @property {number} [NoncurrentVersionExpirationInDays] NoncurrentVersionExpirationInDays.
         * @property {AWS_S3_Bucket_NoncurrentVersionTransition} [NoncurrentVersionTransition] NoncurrentVersionTransition.
         * @property {AWS_S3_Bucket_NoncurrentVersionTransition[]} [NoncurrentVersionTransitions] NoncurrentVersionTransitions.
         * @property {string} [Prefix] Prefix.
         * @property {string} Status Status.
         * @property {AWS_S3_Bucket_TagFilter[]} [TagFilters] TagFilters.
         * @property {AWS_S3_Bucket_Transition} [Transition] Transition.
         * @property {AWS_S3_Bucket_Transition[]} [Transitions] Transitions.
         */
        /**
         * @param {AWS_S3_Bucket_Rule} properties
         * @returns {AWS_S3_Bucket_Rule}
         */
        static Rule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_QueueConfiguration
         * @property {string} Event Event.
         * @property {AWS_S3_Bucket_NotificationFilter} [Filter] Filter.
         * @property {string} Queue Queue.
         */
        /**
         * @param {AWS_S3_Bucket_QueueConfiguration} properties
         * @returns {AWS_S3_Bucket_QueueConfiguration}
         */
        static QueueConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_TopicConfiguration
         * @property {string} Event Event.
         * @property {AWS_S3_Bucket_NotificationFilter} [Filter] Filter.
         * @property {string} Topic Topic.
         */
        /**
         * @param {AWS_S3_Bucket_TopicConfiguration} properties
         * @returns {AWS_S3_Bucket_TopicConfiguration}
         */
        static TopicConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_MetricsConfiguration
         * @property {string} Id Id.
         * @property {string} [Prefix] Prefix.
         * @property {AWS_S3_Bucket_TagFilter[]} [TagFilters] TagFilters.
         */
        /**
         * @param {AWS_S3_Bucket_MetricsConfiguration} properties
         * @returns {AWS_S3_Bucket_MetricsConfiguration}
         */
        static MetricsConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_TagFilter
         * @property {string} Key Key.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_S3_Bucket_TagFilter} properties
         * @returns {AWS_S3_Bucket_TagFilter}
         */
        static TagFilter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_Transition
         * @property {string} StorageClass StorageClass.
         * @property {string} [TransitionDate] TransitionDate.
         * @property {number} [TransitionInDays] TransitionInDays.
         */
        /**
         * @param {AWS_S3_Bucket_Transition} properties
         * @returns {AWS_S3_Bucket_Transition}
         */
        static Transition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_DataExport
         * @property {AWS_S3_Bucket_Destination} Destination Destination.
         * @property {string} OutputSchemaVersion OutputSchemaVersion.
         */
        /**
         * @param {AWS_S3_Bucket_DataExport} properties
         * @returns {AWS_S3_Bucket_DataExport}
         */
        static DataExport(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_CorsConfiguration
         * @property {AWS_S3_Bucket_CorsRule[]} CorsRules CorsRules.
         */
        /**
         * @param {AWS_S3_Bucket_CorsConfiguration} properties
         * @returns {AWS_S3_Bucket_CorsConfiguration}
         */
        static CorsConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_ReplicationDestination
         * @property {AWS_S3_Bucket_AccessControlTranslation} [AccessControlTranslation] AccessControlTranslation.
         * @property {string} [Account] Account.
         * @property {string} Bucket Bucket.
         * @property {AWS_S3_Bucket_EncryptionConfiguration} [EncryptionConfiguration] EncryptionConfiguration.
         * @property {string} [StorageClass] StorageClass.
         */
        /**
         * @param {AWS_S3_Bucket_ReplicationDestination} properties
         * @returns {AWS_S3_Bucket_ReplicationDestination}
         */
        static ReplicationDestination(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_AccelerateConfiguration
         * @property {string} AccelerationStatus AccelerationStatus.
         */
        /**
         * @param {AWS_S3_Bucket_AccelerateConfiguration} properties
         * @returns {AWS_S3_Bucket_AccelerateConfiguration}
         */
        static AccelerateConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_NoncurrentVersionTransition
         * @property {string} StorageClass StorageClass.
         * @property {number} TransitionInDays TransitionInDays.
         */
        /**
         * @param {AWS_S3_Bucket_NoncurrentVersionTransition} properties
         * @returns {AWS_S3_Bucket_NoncurrentVersionTransition}
         */
        static NoncurrentVersionTransition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_AbortIncompleteMultipartUpload
         * @property {number} DaysAfterInitiation DaysAfterInitiation.
         */
        /**
         * @param {AWS_S3_Bucket_AbortIncompleteMultipartUpload} properties
         * @returns {AWS_S3_Bucket_AbortIncompleteMultipartUpload}
         */
        static AbortIncompleteMultipartUpload(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_FilterRule
         * @property {string} Name Name.
         * @property {string} Value Value.
         */
        /**
         * @param {AWS_S3_Bucket_FilterRule} properties
         * @returns {AWS_S3_Bucket_FilterRule}
         */
        static FilterRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_S3_Bucket_PublicAccessBlockConfiguration
         * @property {boolean} [BlockPublicAcls] BlockPublicAcls.
         * @property {boolean} [BlockPublicPolicy] BlockPublicPolicy.
         * @property {boolean} [IgnorePublicAcls] IgnorePublicAcls.
         * @property {boolean} [RestrictPublicBuckets] RestrictPublicBuckets.
         */
        /**
         * @param {AWS_S3_Bucket_PublicAccessBlockConfiguration} properties
         * @returns {AWS_S3_Bucket_PublicAccessBlockConfiguration}
         */
        static PublicAccessBlockConfiguration(properties) { return properties; }
      },
      /**
       * @namespace BucketPolicy
       */
      BucketPolicy: class {
        /**
         * @typedef {Object} AWS_S3_BucketPolicy
         * @property {string} Bucket Bucket.
         * @property {string} PolicyDocument PolicyDocument.
         */
        /**
         * Create a new AWS::S3::BucketPolicy
         * @param {AWS_S3_BucketPolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace KinesisFirehose
     */
    KinesisFirehose: {
      /**
       * @namespace DeliveryStream
       */
      DeliveryStream: class {
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream
         * @property {string} [DeliveryStreamName] DeliveryStreamName.
         * @property {string} [DeliveryStreamType] DeliveryStreamType.
         * @property {AWS_KinesisFirehose_DeliveryStream_ElasticsearchDestinationConfiguration} [ElasticsearchDestinationConfiguration] ElasticsearchDestinationConfiguration.
         * @property {AWS_KinesisFirehose_DeliveryStream_ExtendedS3DestinationConfiguration} [ExtendedS3DestinationConfiguration] ExtendedS3DestinationConfiguration.
         * @property {AWS_KinesisFirehose_DeliveryStream_KinesisStreamSourceConfiguration} [KinesisStreamSourceConfiguration] KinesisStreamSourceConfiguration.
         * @property {AWS_KinesisFirehose_DeliveryStream_RedshiftDestinationConfiguration} [RedshiftDestinationConfiguration] RedshiftDestinationConfiguration.
         * @property {AWS_KinesisFirehose_DeliveryStream_S3DestinationConfiguration} [S3DestinationConfiguration] S3DestinationConfiguration.
         * @property {AWS_KinesisFirehose_DeliveryStream_SplunkDestinationConfiguration} [SplunkDestinationConfiguration] SplunkDestinationConfiguration.
         */
        /**
         * Create a new AWS::KinesisFirehose::DeliveryStream
         * @param {AWS_KinesisFirehose_DeliveryStream} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_ElasticsearchDestinationConfiguration
         * @property {AWS_KinesisFirehose_DeliveryStream_ElasticsearchBufferingHints} BufferingHints BufferingHints.
         * @property {AWS_KinesisFirehose_DeliveryStream_CloudWatchLoggingOptions} [CloudWatchLoggingOptions] CloudWatchLoggingOptions.
         * @property {string} DomainARN DomainARN.
         * @property {string} IndexName IndexName.
         * @property {string} IndexRotationPeriod IndexRotationPeriod.
         * @property {AWS_KinesisFirehose_DeliveryStream_ProcessingConfiguration} [ProcessingConfiguration] ProcessingConfiguration.
         * @property {AWS_KinesisFirehose_DeliveryStream_ElasticsearchRetryOptions} RetryOptions RetryOptions.
         * @property {string} RoleARN RoleARN.
         * @property {string} S3BackupMode S3BackupMode.
         * @property {AWS_KinesisFirehose_DeliveryStream_S3DestinationConfiguration} S3Configuration S3Configuration.
         * @property {string} TypeName TypeName.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_ElasticsearchDestinationConfiguration} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_ElasticsearchDestinationConfiguration}
         */
        static ElasticsearchDestinationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_ElasticsearchBufferingHints
         * @property {number} IntervalInSeconds IntervalInSeconds.
         * @property {number} SizeInMBs SizeInMBs.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_ElasticsearchBufferingHints} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_ElasticsearchBufferingHints}
         */
        static ElasticsearchBufferingHints(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_SplunkDestinationConfiguration
         * @property {AWS_KinesisFirehose_DeliveryStream_CloudWatchLoggingOptions} [CloudWatchLoggingOptions] CloudWatchLoggingOptions.
         * @property {number} [HECAcknowledgmentTimeoutInSeconds] HECAcknowledgmentTimeoutInSeconds.
         * @property {string} HECEndpoint HECEndpoint.
         * @property {string} HECEndpointType HECEndpointType.
         * @property {string} HECToken HECToken.
         * @property {AWS_KinesisFirehose_DeliveryStream_ProcessingConfiguration} [ProcessingConfiguration] ProcessingConfiguration.
         * @property {AWS_KinesisFirehose_DeliveryStream_SplunkRetryOptions} [RetryOptions] RetryOptions.
         * @property {string} [S3BackupMode] S3BackupMode.
         * @property {AWS_KinesisFirehose_DeliveryStream_S3DestinationConfiguration} S3Configuration S3Configuration.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_SplunkDestinationConfiguration} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_SplunkDestinationConfiguration}
         */
        static SplunkDestinationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_EncryptionConfiguration
         * @property {AWS_KinesisFirehose_DeliveryStream_KMSEncryptionConfig} [KMSEncryptionConfig] KMSEncryptionConfig.
         * @property {string} [NoEncryptionConfig] NoEncryptionConfig.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_EncryptionConfiguration} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_EncryptionConfiguration}
         */
        static EncryptionConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_CloudWatchLoggingOptions
         * @property {boolean} [Enabled] Enabled.
         * @property {string} [LogGroupName] LogGroupName.
         * @property {string} [LogStreamName] LogStreamName.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_CloudWatchLoggingOptions} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_CloudWatchLoggingOptions}
         */
        static CloudWatchLoggingOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_ProcessingConfiguration
         * @property {boolean} [Enabled] Enabled.
         * @property {AWS_KinesisFirehose_DeliveryStream_Processor[]} [Processors] Processors.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_ProcessingConfiguration} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_ProcessingConfiguration}
         */
        static ProcessingConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_BufferingHints
         * @property {number} IntervalInSeconds IntervalInSeconds.
         * @property {number} SizeInMBs SizeInMBs.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_BufferingHints} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_BufferingHints}
         */
        static BufferingHints(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_SplunkRetryOptions
         * @property {number} DurationInSeconds DurationInSeconds.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_SplunkRetryOptions} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_SplunkRetryOptions}
         */
        static SplunkRetryOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_KinesisStreamSourceConfiguration
         * @property {string} KinesisStreamARN KinesisStreamARN.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_KinesisStreamSourceConfiguration} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_KinesisStreamSourceConfiguration}
         */
        static KinesisStreamSourceConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_ProcessorParameter
         * @property {string} ParameterName ParameterName.
         * @property {string} ParameterValue ParameterValue.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_ProcessorParameter} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_ProcessorParameter}
         */
        static ProcessorParameter(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_Processor
         * @property {AWS_KinesisFirehose_DeliveryStream_ProcessorParameter[]} Parameters Parameters.
         * @property {string} Type Type.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_Processor} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_Processor}
         */
        static Processor(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_CopyCommand
         * @property {string} [CopyOptions] CopyOptions.
         * @property {string} [DataTableColumns] DataTableColumns.
         * @property {string} DataTableName DataTableName.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_CopyCommand} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_CopyCommand}
         */
        static CopyCommand(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_S3DestinationConfiguration
         * @property {string} BucketARN BucketARN.
         * @property {AWS_KinesisFirehose_DeliveryStream_BufferingHints} BufferingHints BufferingHints.
         * @property {AWS_KinesisFirehose_DeliveryStream_CloudWatchLoggingOptions} [CloudWatchLoggingOptions] CloudWatchLoggingOptions.
         * @property {string} CompressionFormat CompressionFormat.
         * @property {AWS_KinesisFirehose_DeliveryStream_EncryptionConfiguration} [EncryptionConfiguration] EncryptionConfiguration.
         * @property {string} [Prefix] Prefix.
         * @property {string} RoleARN RoleARN.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_S3DestinationConfiguration} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_S3DestinationConfiguration}
         */
        static S3DestinationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_ElasticsearchRetryOptions
         * @property {number} DurationInSeconds DurationInSeconds.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_ElasticsearchRetryOptions} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_ElasticsearchRetryOptions}
         */
        static ElasticsearchRetryOptions(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_KMSEncryptionConfig
         * @property {string} AWSKMSKeyARN AWSKMSKeyARN.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_KMSEncryptionConfig} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_KMSEncryptionConfig}
         */
        static KMSEncryptionConfig(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_ExtendedS3DestinationConfiguration
         * @property {string} BucketARN BucketARN.
         * @property {AWS_KinesisFirehose_DeliveryStream_BufferingHints} BufferingHints BufferingHints.
         * @property {AWS_KinesisFirehose_DeliveryStream_CloudWatchLoggingOptions} [CloudWatchLoggingOptions] CloudWatchLoggingOptions.
         * @property {string} CompressionFormat CompressionFormat.
         * @property {AWS_KinesisFirehose_DeliveryStream_EncryptionConfiguration} [EncryptionConfiguration] EncryptionConfiguration.
         * @property {string} Prefix Prefix.
         * @property {AWS_KinesisFirehose_DeliveryStream_ProcessingConfiguration} [ProcessingConfiguration] ProcessingConfiguration.
         * @property {string} RoleARN RoleARN.
         * @property {AWS_KinesisFirehose_DeliveryStream_S3DestinationConfiguration} [S3BackupConfiguration] S3BackupConfiguration.
         * @property {string} [S3BackupMode] S3BackupMode.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_ExtendedS3DestinationConfiguration} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_ExtendedS3DestinationConfiguration}
         */
        static ExtendedS3DestinationConfiguration(properties) { return properties; }
        /**
         * @typedef {Object} AWS_KinesisFirehose_DeliveryStream_RedshiftDestinationConfiguration
         * @property {AWS_KinesisFirehose_DeliveryStream_CloudWatchLoggingOptions} [CloudWatchLoggingOptions] CloudWatchLoggingOptions.
         * @property {string} ClusterJDBCURL ClusterJDBCURL.
         * @property {AWS_KinesisFirehose_DeliveryStream_CopyCommand} CopyCommand CopyCommand.
         * @property {string} Password Password.
         * @property {AWS_KinesisFirehose_DeliveryStream_ProcessingConfiguration} [ProcessingConfiguration] ProcessingConfiguration.
         * @property {string} RoleARN RoleARN.
         * @property {AWS_KinesisFirehose_DeliveryStream_S3DestinationConfiguration} S3Configuration S3Configuration.
         * @property {string} Username Username.
         */
        /**
         * @param {AWS_KinesisFirehose_DeliveryStream_RedshiftDestinationConfiguration} properties
         * @returns {AWS_KinesisFirehose_DeliveryStream_RedshiftDestinationConfiguration}
         */
        static RedshiftDestinationConfiguration(properties) { return properties; }
      }
    },
    /**
     * @namespace DLM
     */
    DLM: {
      /**
       * @namespace LifecyclePolicy
       */
      LifecyclePolicy: class {
        /**
         * @typedef {Object} AWS_DLM_LifecyclePolicy
         * @property {string} [ExecutionRoleArn] ExecutionRoleArn.
         * @property {string} [Description] Description.
         * @property {string} [State] State.
         * @property {AWS_DLM_LifecyclePolicy_PolicyDetails} [PolicyDetails] PolicyDetails.
         */
        /**
         * Create a new AWS::DLM::LifecyclePolicy
         * @param {AWS_DLM_LifecyclePolicy} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_DLM_LifecyclePolicy_Schedule
         * @property {AWS_DLM_LifecyclePolicy_Tag[]} [TagsToAdd] TagsToAdd.
         * @property {AWS_DLM_LifecyclePolicy_CreateRule} [CreateRule] CreateRule.
         * @property {AWS_DLM_LifecyclePolicy_RetainRule} [RetainRule] RetainRule.
         * @property {string} [Name] Name.
         * @property {boolean} [CopyTags] CopyTags.
         */
        /**
         * @param {AWS_DLM_LifecyclePolicy_Schedule} properties
         * @returns {AWS_DLM_LifecyclePolicy_Schedule}
         */
        static Schedule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DLM_LifecyclePolicy_CreateRule
         * @property {string} IntervalUnit IntervalUnit.
         * @property {string[]} [Times] Times.
         * @property {number} Interval Interval.
         */
        /**
         * @param {AWS_DLM_LifecyclePolicy_CreateRule} properties
         * @returns {AWS_DLM_LifecyclePolicy_CreateRule}
         */
        static CreateRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DLM_LifecyclePolicy_RetainRule
         * @property {number} Count Count.
         */
        /**
         * @param {AWS_DLM_LifecyclePolicy_RetainRule} properties
         * @returns {AWS_DLM_LifecyclePolicy_RetainRule}
         */
        static RetainRule(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DLM_LifecyclePolicy_PolicyDetails
         * @property {string[]} [ResourceTypes] ResourceTypes.
         * @property {AWS_DLM_LifecyclePolicy_Schedule[]} [Schedules] Schedules.
         * @property {AWS_DLM_LifecyclePolicy_Tag[]} [TargetTags] TargetTags.
         */
        /**
         * @param {AWS_DLM_LifecyclePolicy_PolicyDetails} properties
         * @returns {AWS_DLM_LifecyclePolicy_PolicyDetails}
         */
        static PolicyDetails(properties) { return properties; }
      }
    },
    /**
     * @namespace SDB
     */
    SDB: {
      /**
       * @namespace Domain
       */
      Domain: class {
        /**
         * @typedef {Object} AWS_SDB_Domain
         * @property {string} [Description] Description.
         */
        /**
         * Create a new AWS::SDB::Domain
         * @param {AWS_SDB_Domain} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    },
    /**
     * @namespace ECR
     */
    ECR: {
      /**
       * @namespace Repository
       */
      Repository: class {
        /**
         * @typedef {Object} AWS_ECR_Repository
         * @property {AWS_ECR_Repository_LifecyclePolicy} [LifecyclePolicy] LifecyclePolicy.
         * @property {string} [RepositoryName] RepositoryName.
         * @property {string} [RepositoryPolicyText] RepositoryPolicyText.
         */
        /**
         * Create a new AWS::ECR::Repository
         * @param {AWS_ECR_Repository} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_ECR_Repository_LifecyclePolicy
         * @property {string} [LifecyclePolicyText] LifecyclePolicyText.
         * @property {string} [RegistryId] RegistryId.
         */
        /**
         * @param {AWS_ECR_Repository_LifecyclePolicy} properties
         * @returns {AWS_ECR_Repository_LifecyclePolicy}
         */
        static LifecyclePolicy(properties) { return properties; }
      }
    },
    /**
     * @namespace DynamoDB
     */
    DynamoDB: {
      /**
       * @namespace Table
       */
      Table: class {
        /**
         * @typedef {Object} AWS_DynamoDB_Table
         * @property {AWS_DynamoDB_Table_AttributeDefinition[]} [AttributeDefinitions] AttributeDefinitions.
         * @property {string} [BillingMode] BillingMode.
         * @property {AWS_DynamoDB_Table_GlobalSecondaryIndex[]} [GlobalSecondaryIndexes] GlobalSecondaryIndexes.
         * @property {AWS_DynamoDB_Table_KeySchema[]} KeySchema KeySchema.
         * @property {AWS_DynamoDB_Table_LocalSecondaryIndex[]} [LocalSecondaryIndexes] LocalSecondaryIndexes.
         * @property {AWS_DynamoDB_Table_PointInTimeRecoverySpecification} [PointInTimeRecoverySpecification] PointInTimeRecoverySpecification.
         * @property {AWS_DynamoDB_Table_ProvisionedThroughput} [ProvisionedThroughput] ProvisionedThroughput.
         * @property {AWS_DynamoDB_Table_SSESpecification} [SSESpecification] SSESpecification.
         * @property {AWS_DynamoDB_Table_StreamSpecification} [StreamSpecification] StreamSpecification.
         * @property {string} [TableName] TableName.
         * @property {AWS_DynamoDB_Table_Tag[]} [Tags] Tags.
         * @property {AWS_DynamoDB_Table_TimeToLiveSpecification} [TimeToLiveSpecification] TimeToLiveSpecification.
         */
        /**
         * Create a new AWS::DynamoDB::Table
         * @param {AWS_DynamoDB_Table} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_TimeToLiveSpecification
         * @property {string} AttributeName AttributeName.
         * @property {boolean} Enabled Enabled.
         */
        /**
         * @param {AWS_DynamoDB_Table_TimeToLiveSpecification} properties
         * @returns {AWS_DynamoDB_Table_TimeToLiveSpecification}
         */
        static TimeToLiveSpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_AttributeDefinition
         * @property {string} AttributeName AttributeName.
         * @property {string} AttributeType AttributeType.
         */
        /**
         * @param {AWS_DynamoDB_Table_AttributeDefinition} properties
         * @returns {AWS_DynamoDB_Table_AttributeDefinition}
         */
        static AttributeDefinition(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_LocalSecondaryIndex
         * @property {string} IndexName IndexName.
         * @property {AWS_DynamoDB_Table_KeySchema[]} KeySchema KeySchema.
         * @property {AWS_DynamoDB_Table_Projection} Projection Projection.
         */
        /**
         * @param {AWS_DynamoDB_Table_LocalSecondaryIndex} properties
         * @returns {AWS_DynamoDB_Table_LocalSecondaryIndex}
         */
        static LocalSecondaryIndex(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_ProvisionedThroughput
         * @property {number} ReadCapacityUnits ReadCapacityUnits.
         * @property {number} WriteCapacityUnits WriteCapacityUnits.
         */
        /**
         * @param {AWS_DynamoDB_Table_ProvisionedThroughput} properties
         * @returns {AWS_DynamoDB_Table_ProvisionedThroughput}
         */
        static ProvisionedThroughput(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_GlobalSecondaryIndex
         * @property {string} IndexName IndexName.
         * @property {AWS_DynamoDB_Table_KeySchema[]} KeySchema KeySchema.
         * @property {AWS_DynamoDB_Table_Projection} Projection Projection.
         * @property {AWS_DynamoDB_Table_ProvisionedThroughput} [ProvisionedThroughput] ProvisionedThroughput.
         */
        /**
         * @param {AWS_DynamoDB_Table_GlobalSecondaryIndex} properties
         * @returns {AWS_DynamoDB_Table_GlobalSecondaryIndex}
         */
        static GlobalSecondaryIndex(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_KeySchema
         * @property {string} AttributeName AttributeName.
         * @property {string} KeyType KeyType.
         */
        /**
         * @param {AWS_DynamoDB_Table_KeySchema} properties
         * @returns {AWS_DynamoDB_Table_KeySchema}
         */
        static KeySchema(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_Projection
         * @property {string[]} [NonKeyAttributes] NonKeyAttributes.
         * @property {string} [ProjectionType] ProjectionType.
         */
        /**
         * @param {AWS_DynamoDB_Table_Projection} properties
         * @returns {AWS_DynamoDB_Table_Projection}
         */
        static Projection(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_PointInTimeRecoverySpecification
         * @property {boolean} [PointInTimeRecoveryEnabled] PointInTimeRecoveryEnabled.
         */
        /**
         * @param {AWS_DynamoDB_Table_PointInTimeRecoverySpecification} properties
         * @returns {AWS_DynamoDB_Table_PointInTimeRecoverySpecification}
         */
        static PointInTimeRecoverySpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_SSESpecification
         * @property {boolean} SSEEnabled SSEEnabled.
         */
        /**
         * @param {AWS_DynamoDB_Table_SSESpecification} properties
         * @returns {AWS_DynamoDB_Table_SSESpecification}
         */
        static SSESpecification(properties) { return properties; }
        /**
         * @typedef {Object} AWS_DynamoDB_Table_StreamSpecification
         * @property {string} StreamViewType StreamViewType.
         */
        /**
         * @param {AWS_DynamoDB_Table_StreamSpecification} properties
         * @returns {AWS_DynamoDB_Table_StreamSpecification}
         */
        static StreamSpecification(properties) { return properties; }
      }
    },
    /**
     * @namespace Athena
     */
    Athena: {
      /**
       * @namespace NamedQuery
       */
      NamedQuery: class {
        /**
         * @typedef {Object} AWS_Athena_NamedQuery
         * @property {string} [Description] Description.
         * @property {string} QueryString QueryString.
         * @property {string} Database Database.
         * @property {string} [Name] Name.
         */
        /**
         * Create a new AWS::Athena::NamedQuery
         * @param {AWS_Athena_NamedQuery} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
      }
    }
  },
  /**
   * @namespace Alexa
   */
  Alexa: {
    /**
     * @namespace ASK
     */
    ASK: {
      /**
       * @namespace Skill
       */
      Skill: class {
        /**
         * @typedef {Object} Alexa_ASK_Skill
         * @property {Alexa_ASK_Skill_AuthenticationConfiguration} AuthenticationConfiguration AuthenticationConfiguration.
         * @property {string} VendorId VendorId.
         * @property {Alexa_ASK_Skill_SkillPackage} SkillPackage SkillPackage.
         */
        /**
         * Create a new Alexa::ASK::Skill
         * @param {Alexa_ASK_Skill} properties
         */
        constructor(properties) {
            this._properties = properties
        }
        get properties() {
            return this._properties
        }
        /**
         * @typedef {Object} Alexa_ASK_Skill_SkillPackage
         * @property {string} [S3BucketRole] S3BucketRole.
         * @property {string} [S3ObjectVersion] S3ObjectVersion.
         * @property {string} S3Bucket S3Bucket.
         * @property {string} S3Key S3Key.
         * @property {Alexa_ASK_Skill_Overrides} [Overrides] Overrides.
         */
        /**
         * @param {Alexa_ASK_Skill_SkillPackage} properties
         * @returns {Alexa_ASK_Skill_SkillPackage}
         */
        static SkillPackage(properties) { return properties; }
        /**
         * @typedef {Object} Alexa_ASK_Skill_Overrides
         * @property {string} [Manifest] Manifest.
         */
        /**
         * @param {Alexa_ASK_Skill_Overrides} properties
         * @returns {Alexa_ASK_Skill_Overrides}
         */
        static Overrides(properties) { return properties; }
        /**
         * @typedef {Object} Alexa_ASK_Skill_AuthenticationConfiguration
         * @property {string} RefreshToken RefreshToken.
         * @property {string} ClientSecret ClientSecret.
         * @property {string} ClientId ClientId.
         */
        /**
         * @param {Alexa_ASK_Skill_AuthenticationConfiguration} properties
         * @returns {Alexa_ASK_Skill_AuthenticationConfiguration}
         */
        static AuthenticationConfiguration(properties) { return properties; }
      }
    }
  }
}